<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.0.1" created="2015-01-21 10:31" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Jworks.nl - Agile Software Development using Groovy and Grails</title>
	<link>http://www.jworks.nl</link>
	<description>Effective Software Development using Effective Tools, People and Process</description>
	<pubDate>Wed, 21 Jan 2015 10:31:17 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.jworks.nl</wp:base_site_url>
	<wp:base_blog_url>http://www.jworks.nl</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>admin@jworks.nl</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>marcin</wp:author_login><wp:author_email>marcin.erdmann@jworks.nl</wp:author_email><wp:author_display_name><![CDATA[Marcin Erdmann]]></wp:author_display_name><wp:author_first_name><![CDATA[Marcin]]></wp:author_first_name><wp:author_last_name><![CDATA[Erdmann]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>erikp</wp:author_login><wp:author_email>erik.pragt@jworks.nl</wp:author_email><wp:author_display_name><![CDATA[Erik Pragt]]></wp:author_display_name><wp:author_first_name><![CDATA[Erik]]></wp:author_first_name><wp:author_last_name><![CDATA[Pragt]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>5</wp:author_id><wp:author_login>lieke22</wp:author_login><wp:author_email>lieke22@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Lieke Boon]]></wp:author_display_name><wp:author_first_name><![CDATA[Lieke]]></wp:author_first_name><wp:author_last_name><![CDATA[Boon]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>android</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Android]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>discobot-2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Discobot]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>43</wp:term_id><wp:category_nicename>geb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Geb]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>75</wp:term_id><wp:category_nicename>gradle-2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Gradle]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>grails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Grails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>groovy</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Groovy]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>125</wp:term_id><wp:category_nicename>intellij-2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[IntelliJ]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>83</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>curdling</wp:tag_slug><wp:tag_name><![CDATA[#Curdling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>python-3</wp:tag_slug><wp:tag_name><![CDATA[#Python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>python-django-flanker</wp:tag_slug><wp:tag_name><![CDATA[#Python #Django #Flanker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>akismet</wp:tag_slug><wp:tag_name><![CDATA[akismet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>alarm</wp:tag_slug><wp:tag_name><![CDATA[alarm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>android-2</wp:tag_slug><wp:tag_name><![CDATA[android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>ansible</wp:tag_slug><wp:tag_name><![CDATA[ansible]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>arrow</wp:tag_slug><wp:tag_name><![CDATA[arrow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>assertj</wp:tag_slug><wp:tag_name><![CDATA[assertj]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>atlassian</wp:tag_slug><wp:tag_name><![CDATA[atlassian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>bamboo</wp:tag_slug><wp:tag_name><![CDATA[bamboo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>binddata</wp:tag_slug><wp:tag_name><![CDATA[bindData]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>bubbleconf</wp:tag_slug><wp:tag_name><![CDATA[bubbleconf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>camel</wp:tag_slug><wp:tag_name><![CDATA[camel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>classloader</wp:tag_slug><wp:tag_name><![CDATA[classloader]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>code-coverage</wp:tag_slug><wp:tag_name><![CDATA[code coverage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>collections</wp:tag_slug><wp:tag_name><![CDATA[collections]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>command-objects</wp:tag_slug><wp:tag_name><![CDATA[command objects]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>conference</wp:tag_slug><wp:tag_name><![CDATA[conference]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>controller</wp:tag_slug><wp:tag_name><![CDATA[controller]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>core</wp:tag_slug><wp:tag_name><![CDATA[core]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>debug</wp:tag_slug><wp:tag_name><![CDATA[debug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>discobot</wp:tag_slug><wp:tag_name><![CDATA[discobot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>django</wp:tag_slug><wp:tag_name><![CDATA[django]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>error</wp:tag_slug><wp:tag_name><![CDATA[error]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>executable-jars</wp:tag_slug><wp:tag_name><![CDATA[executable jars]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>file-upload</wp:tag_slug><wp:tag_name><![CDATA[file upload]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>flask</wp:tag_slug><wp:tag_name><![CDATA[flask]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>format</wp:tag_slug><wp:tag_name><![CDATA[format]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>friday-repost</wp:tag_slug><wp:tag_name><![CDATA[friday repost]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>functions</wp:tag_slug><wp:tag_name><![CDATA[functions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>funcy</wp:tag_slug><wp:tag_name><![CDATA[funcy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>geb-2</wp:tag_slug><wp:tag_name><![CDATA[geb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>geb-config</wp:tag_slug><wp:tag_name><![CDATA[geb config]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>generate-all</wp:tag_slug><wp:tag_name><![CDATA[generate-all]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>gevent</wp:tag_slug><wp:tag_name><![CDATA[gevent]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>ggplot</wp:tag_slug><wp:tag_name><![CDATA[ggplot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>goodness</wp:tag_slug><wp:tag_name><![CDATA[goodness]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>gradle</wp:tag_slug><wp:tag_name><![CDATA[gradle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>grails-2</wp:tag_slug><wp:tag_name><![CDATA[grails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>grails-2-0</wp:tag_slug><wp:tag_name><![CDATA[grails 2.0]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>groovy-2</wp:tag_slug><wp:tag_name><![CDATA[groovy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>guava</wp:tag_slug><wp:tag_name><![CDATA[guava]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>gwt</wp:tag_slug><wp:tag_name><![CDATA[gwt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>gxt</wp:tag_slug><wp:tag_name><![CDATA[gxt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>hackertray</wp:tag_slug><wp:tag_name><![CDATA[hackertray]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>hamcrest</wp:tag_slug><wp:tag_name><![CDATA[hamcrest]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>immutable</wp:tag_slug><wp:tag_name><![CDATA[immutable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>indexing</wp:tag_slug><wp:tag_name><![CDATA[indexing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>integers</wp:tag_slug><wp:tag_name><![CDATA[Integers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>intellij</wp:tag_slug><wp:tag_name><![CDATA[intellij]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>iterables</wp:tag_slug><wp:tag_name><![CDATA[iterables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>jacoco</wp:tag_slug><wp:tag_name><![CDATA[jacoco]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>java-2</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>javaconfig</wp:tag_slug><wp:tag_name><![CDATA[javaconfig]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>joda</wp:tag_slug><wp:tag_name><![CDATA[joda]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[JSON]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>junit</wp:tag_slug><wp:tag_name><![CDATA[junit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>lines-of-code</wp:tag_slug><wp:tag_name><![CDATA[lines of code]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>live-blog</wp:tag_slug><wp:tag_name><![CDATA[live blog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>log4j</wp:tag_slug><wp:tag_name><![CDATA[log4j]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>macos</wp:tag_slug><wp:tag_name><![CDATA[macos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>marshalling</wp:tag_slug><wp:tag_name><![CDATA[marshalling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>matchers</wp:tag_slug><wp:tag_name><![CDATA[matchers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>maven</wp:tag_slug><wp:tag_name><![CDATA[maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>mavericks</wp:tag_slug><wp:tag_name><![CDATA[mavericks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>maximizing-browser</wp:tag_slug><wp:tag_name><![CDATA[maximizing browser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>metaclass</wp:tag_slug><wp:tag_name><![CDATA[metaclass]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>micro-benchmarks</wp:tag_slug><wp:tag_name><![CDATA[micro benchmarks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>mobile</wp:tag_slug><wp:tag_name><![CDATA[mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>money</wp:tag_slug><wp:tag_name><![CDATA[money]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>nexus</wp:tag_slug><wp:tag_name><![CDATA[nexus]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>null</wp:tag_slug><wp:tag_name><![CDATA[null]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>oracle</wp:tag_slug><wp:tag_name><![CDATA[oracle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>output</wp:tag_slug><wp:tag_name><![CDATA[output]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>proxy-server</wp:tag_slug><wp:tag_name><![CDATA[proxy server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>pulsar</wp:tag_slug><wp:tag_name><![CDATA[pulsar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>pure</wp:tag_slug><wp:tag_name><![CDATA[pure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>python-2</wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>python-keyword</wp:tag_slug><wp:tag_name><![CDATA[python keyword]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>rabbitmq</wp:tag_slug><wp:tag_name><![CDATA[rabbitmq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>requests</wp:tag_slug><wp:tag_name><![CDATA[requests]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>reusable</wp:tag_slug><wp:tag_name><![CDATA[reusable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>reverse-string</wp:tag_slug><wp:tag_name><![CDATA[reverse string]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>screencast</wp:tag_slug><wp:tag_name><![CDATA[screencast]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>selenium</wp:tag_slug><wp:tag_name><![CDATA[selenium]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>spam</wp:tag_slug><wp:tag_name><![CDATA[spam]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>spring</wp:tag_slug><wp:tag_name><![CDATA[spring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>star-wars</wp:tag_slug><wp:tag_name><![CDATA[star wars]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>stats</wp:tag_slug><wp:tag_name><![CDATA[stats]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>string</wp:tag_slug><wp:tag_name><![CDATA[string]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>string-expansion</wp:tag_slug><wp:tag_name><![CDATA[string expansion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>swapping-variables</wp:tag_slug><wp:tag_name><![CDATA[swapping variables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>task</wp:tag_slug><wp:tag_name><![CDATA[task]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>this-week-in-python</wp:tag_slug><wp:tag_name><![CDATA[this week in python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>tika</wp:tag_slug><wp:tag_name><![CDATA[tika]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>tips</wp:tag_slug><wp:tag_name><![CDATA[tips]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>tomcat</wp:tag_slug><wp:tag_name><![CDATA[tomcat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>tornado</wp:tag_slug><wp:tag_name><![CDATA[tornado]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>unit</wp:tag_slug><wp:tag_name><![CDATA[unit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>upgrade</wp:tag_slug><wp:tag_name><![CDATA[upgrade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>validation</wp:tag_slug><wp:tag_name><![CDATA[validation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>visual-studio</wp:tag_slug><wp:tag_name><![CDATA[visual studio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>webdriver</wp:tag_slug><wp:tag_name><![CDATA[webdriver]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>yield</wp:tag_slug><wp:tag_name><![CDATA[yield]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>12</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>navigation-menu</wp:term_slug><wp:term_name><![CDATA[Navigation menu]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=4.0.1</generator>

	<item>
				<title>Jworks Logo</title>
		<link>http://www.jworks.nl/?attachment_id=23</link>
		<pubDate>Mon, 18 Jul 2011 20:48:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[This is the Jworks logo]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2011-07-18 20:48:33</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:48:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"286";s:6:"height";s:2:"60";s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:16:"2011/07/logo.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"logo-150x60.png";s:5:"width";s:3:"150";s:6:"height";s:2:"60";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:15:"logo-184x60.png";s:5:"width";s:3:"184";s:6:"height";s:2:"60";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:15:"logo-207x60.png";s:5:"width";s:3:"207";s:6:"height";s:2:"60";}s:14:"featured-small";a:3:{s:4:"file";s:14:"logo-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:15:"logo-184x60.png";s:5:"width";s:3:"184";s:6:"height";s:2:"60";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:15:"logo-260x60.png";s:5:"width";s:3:"260";s:6:"height";s:2:"60";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:15:"logo-260x60.png";s:5:"width";s:3:"260";s:6:"height";s:2:"60";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:15:"logo-140x60.png";s:5:"width";s:3:"140";s:6:"height";s:2:"60";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:15:"logo-140x60.png";s:5:"width";s:3:"140";s:6:"height";s:2:"60";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[The Jworks Logo]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>favicon</title>
		<link>http://www.jworks.nl/?attachment_id=24</link>
		<pubDate>Mon, 18 Jul 2011 20:49:51 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/favicon.ico</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2011-07-18 20:49:51</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:49:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>favicon</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/favicon.ico</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/favicon.ico]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>carousel-1</title>
		<link>http://www.jworks.nl/?attachment_id=32</link>
		<pubDate>Mon, 18 Jul 2011 21:51:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2011-07-18 21:51:05</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carousel-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-1.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-1-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-1-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-1-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-1-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-1-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-1-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-1-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-1-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-1-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-1-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-1-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-1-430x380.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"380";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-1.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>carousel-2</title>
		<link>http://www.jworks.nl/?attachment_id=33</link>
		<pubDate>Mon, 18 Jul 2011 21:51:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2011-07-18 21:51:08</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carousel-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-2.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-2-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-2-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-2-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-2-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-2-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-2-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-2-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-2-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-2-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-2-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-2-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-2-430x380.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"380";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>carousel-3</title>
		<link>http://www.jworks.nl/?attachment_id=34</link>
		<pubDate>Mon, 18 Jul 2011 21:51:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2011-07-18 21:51:09</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carousel-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-3.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-3-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-3-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-3-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-3-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-3-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-3-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-3-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-3-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-3-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-3-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-3-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-3-430x380.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"380";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>android-300x300</title>
		<link>http://www.jworks.nl/?attachment_id=35</link>
		<pubDate>Mon, 18 Jul 2011 21:51:11 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/android-300x300.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2011-07-18 21:51:11</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-300x300</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/android-300x300.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/android-300x300.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"300";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:27:"2011/07/android-300x300.gif";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"android-300x300-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:27:"android-300x300-184x184.gif";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:27:"android-300x300-207x136.gif";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-small";a:3:{s:4:"file";s:25:"android-300x300-48x48.gif";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:27:"android-300x300-184x184.gif";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:27:"android-300x300-260x170.gif";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:27:"android-300x300-260x300.gif";s:5:"width";s:3:"260";s:6:"height";s:3:"300";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:26:"android-300x300-140x94.gif";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:27:"android-300x300-140x170.gif";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:27:"android-300x300-300x283.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"283";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>icon-3</title>
		<link>http://www.jworks.nl/?attachment_id=36</link>
		<pubDate>Mon, 18 Jul 2011 21:51:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/icon-3.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2011-07-18 21:51:12</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>icon-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/icon-3.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/icon-3.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"39";s:6:"height";s:2:"41";s:14:"hwstring_small";s:22:"height='41' width='39'";s:4:"file";s:18:"2011/07/icon-3.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>icon-2</title>
		<link>http://www.jworks.nl/?attachment_id=38</link>
		<pubDate>Mon, 18 Jul 2011 21:51:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/icon-2.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2011-07-18 21:51:13</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>icon-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/icon-2.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/icon-2.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"43";s:6:"height";s:2:"43";s:14:"hwstring_small";s:22:"height='43' width='43'";s:4:"file";s:18:"2011/07/icon-2.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>icon-1</title>
		<link>http://www.jworks.nl/?attachment_id=39</link>
		<pubDate>Mon, 18 Jul 2011 21:51:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/icon-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2011-07-18 21:51:14</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:51:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>icon-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/icon-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/icon-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"41";s:6:"height";s:2:"41";s:14:"hwstring_small";s:22:"height='41' width='41'";s:4:"file";s:18:"2011/07/icon-1.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>OLYMPUS DIGITAL CAMERA</title>
		<link>http://www.jworks.nl/?attachment_id=57</link>
		<pubDate>Mon, 18 Jul 2011 22:24:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-6.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2011-07-18 22:24:52</wp:post_date>
		<wp:post_date_gmt>2011-07-18 22:24:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>olympus-digital-camera</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-6.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"379";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-6.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-6-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-6-300x119.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"119";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-6-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-6-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-6-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-6-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-6-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-6-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-6-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-6-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-6-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-6-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-6-430x379.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"379";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"4.4";s:6:"credit";s:0:"";s:6:"camera";s:11:"C300Z,D550Z";s:7:"caption";s:0:"";s:17:"created_timestamp";s:12:"-62169984000";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"15.7";s:3:"iso";s:2:"60";s:13:"shutter_speed";s:5:"0.005";s:5:"title";s:22:"OLYMPUS DIGITAL CAMERA";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-6.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>carousel-5</title>
		<link>http://www.jworks.nl/?attachment_id=58</link>
		<pubDate>Mon, 18 Jul 2011 22:24:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-5.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2011-07-18 22:24:55</wp:post_date>
		<wp:post_date_gmt>2011-07-18 22:24:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carousel-5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-5.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-5.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-5.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-5-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-5-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-5-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-5-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-5-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-5-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-5-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-5-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-5-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-5-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-5-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-5-430x380.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"380";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"5.6";s:6:"credit";s:0:"";s:6:"camera";s:20:"Canon PowerShot A510";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1112358276";s:9:"copyright";s:0:"";s:12:"focal_length";s:7:"13.8125";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:7:"0.00125";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>carousel-4</title>
		<link>http://www.jworks.nl/?attachment_id=59</link>
		<pubDate>Mon, 18 Jul 2011 22:24:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/wp-content/uploads/2011/07/carousel-4.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2011-07-18 22:24:59</wp:post_date>
		<wp:post_date_gmt>2011-07-18 22:24:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carousel-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/carousel-4.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/carousel-4.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"950";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:22:"2011/07/carousel-4.jpg";s:5:"sizes";a:13:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"carousel-4-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"carousel-4-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:22:"carousel-4-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:22:"carousel-4-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:22:"carousel-4-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:20:"carousel-4-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:22:"carousel-4-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:22:"carousel-4-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:22:"carousel-4-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:21:"carousel-4-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:22:"carousel-4-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:22:"carousel-4-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:22:"carousel-4-430x380.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"380";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"3.2";s:6:"credit";s:0:"";s:6:"camera";s:20:"Canon PowerShot A510";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1280836840";s:9:"copyright";s:0:"";s:12:"focal_length";s:6:"5.8125";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:17:"0.016666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>marcinerdmann</title>
		<link>http://www.jworks.nl/about-us/marcinerdmann/</link>
		<pubDate>Mon, 18 Jul 2011 23:23:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/07/marcinerdmann.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2011-07-18 23:23:29</wp:post_date>
		<wp:post_date_gmt>2011-07-18 23:23:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>marcinerdmann</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>8</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/marcinerdmann.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/marcinerdmann.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"105";s:6:"height";s:3:"120";s:14:"hwstring_small";s:22:"height='96' width='84'";s:4:"file";s:25:"2011/07/marcinerdmann.png";s:5:"sizes";a:2:{s:14:"featured-small";a:3:{s:4:"file";s:23:"marcinerdmann-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:24:"marcinerdmann-105x94.png";s:5:"width";s:3:"105";s:6:"height";s:2:"94";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>erikpragt</title>
		<link>http://www.jworks.nl/about-us/erikpragt/</link>
		<pubDate>Mon, 18 Jul 2011 23:23:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/07/erikpragt.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2011-07-18 23:23:31</wp:post_date>
		<wp:post_date_gmt>2011-07-18 23:23:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>erikpragt</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>8</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/erikpragt.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/erikpragt.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"105";s:6:"height";s:3:"120";s:14:"hwstring_small";s:22:"height='96' width='84'";s:4:"file";s:21:"2011/07/erikpragt.png";s:5:"sizes";a:2:{s:14:"featured-small";a:3:{s:4:"file";s:19:"erikpragt-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:20:"erikpragt-105x94.png";s:5:"width";s:3:"105";s:6:"height";s:2:"94";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>photo</title>
		<link>http://www.jworks.nl/2011/07/18/this-twoweeks-in-discobot-27-28-2011/photo/</link>
		<pubDate>Tue, 19 Jul 2011 09:57:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/07/photo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2011-07-19 09:57:52</wp:post_date>
		<wp:post_date_gmt>2011-07-19 09:57:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>50</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/photo-e1311069500362.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/photo-e1311069500362.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"968";s:6:"height";s:4:"1296";s:14:"hwstring_small";s:22:"height='96' width='71'";s:4:"file";s:32:"2011/07/photo-e1311069500362.jpg";s:5:"sizes";a:14:{s:9:"thumbnail";a:3:{s:4:"file";s:32:"photo-e1311069500362-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:32:"photo-e1311069500362-224x300.jpg";s:5:"width";s:3:"224";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:33:"photo-e1311069500362-764x1024.jpg";s:5:"width";s:3:"764";s:6:"height";s:4:"1024";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:17:"photo-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:17:"photo-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:17:"photo-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:15:"photo-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:17:"photo-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:17:"photo-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:17:"photo-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:16:"photo-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:17:"photo-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:17:"photo-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:17:"photo-430x860.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"860";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:9:"full-orig";a:3:{s:5:"width";s:4:"1296";s:6:"height";s:3:"968";s:4:"file";s:9:"photo.jpg";}s:10:"large-orig";a:3:{s:4:"file";s:18:"photo-1024x764.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"764";}s:11:"medium-orig";a:3:{s:4:"file";s:17:"photo-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:14:"thumbnail-orig";a:3:{s:4:"file";s:17:"photo-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>photo</title>
		<link>http://www.jworks.nl/?attachment_id=141</link>
		<pubDate>Tue, 26 Jul 2011 21:51:55 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/07/photo1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2011-07-26 21:51:55</wp:post_date>
		<wp:post_date_gmt>2011-07-26 21:51:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photo-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/07/photo1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/photo1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"968";s:6:"height";s:4:"1296";s:14:"hwstring_small";s:22:"height='96' width='71'";s:4:"file";s:18:"2011/07/photo1.jpg";s:5:"sizes";a:14:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"photo1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"photo1-224x300.jpg";s:5:"width";s:3:"224";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:19:"photo1-764x1024.jpg";s:5:"width";s:3:"764";s:6:"height";s:4:"1024";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:18:"photo1-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:18:"photo1-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:18:"photo1-943x345.jpg";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:16:"photo1-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:18:"photo1-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:18:"photo1-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:18:"photo1-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:17:"photo1-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:18:"photo1-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:18:"photo1-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:18:"photo1-430x860.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"860";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:8:"iPhone 4";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1311723920";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.85";s:3:"iso";s:3:"250";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>IntelliJ with Android emulator running tests</title>
		<link>http://www.jworks.nl/2011/08/10/this-two-weeks-in-discobot-30-31-2011/screen-shot-2011-08-09-at-9-53-44-pm/</link>
		<pubDate>Tue, 09 Aug 2011 22:51:03 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/08/Screen-shot-2011-08-09-at-9.53.44-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[Discobot (Groovy Android) running its first successful unit test!]]></content:encoded>
		<excerpt:encoded><![CDATA[Unit testing in Groovy Android]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2011-08-10 00:51:03</wp:post_date>
		<wp:post_date_gmt>2011-08-09 22:51:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-08-09-at-9-53-44-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>290</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/08/Screen-shot-2011-08-09-at-9.53.44-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1378";s:6:"height";s:3:"959";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:48:"2011/08/Screen-shot-2011-08-09-at-9.53.44-PM.png";s:5:"sizes";a:14:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-300x208.png";s:5:"width";s:3:"300";s:6:"height";s:3:"208";}s:5:"large";a:3:{s:4:"file";s:49:"Screen-shot-2011-08-09-at-9.53.44-PM-1024x712.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"712";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-184x184.png";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-207x136.png";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-943x345.png";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:46:"Screen-shot-2011-08-09-at-9.53.44-PM-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-184x184.png";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-260x170.png";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-260x315.png";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:47:"Screen-shot-2011-08-09-at-9.53.44-PM-140x94.png";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-140x170.png";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-430x283.png";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:48:"Screen-shot-2011-08-09-at-9.53.44-PM-430x860.png";s:5:"width";s:3:"430";s:6:"height";s:3:"860";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/Screen-shot-2011-08-09-at-9.53.44-PM.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Setting Bamboo for testing with Xfvb</title>
		<link>http://www.jworks.nl/2011/08/24/testing-grails-applications-with-geb-and-jstestdriver-on-a-headless-bamboo-ci-server/selection_045/</link>
		<pubDate>Mon, 22 Aug 2011 17:43:52 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2011/08/Selection_045.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2011-08-22 19:43:52</wp:post_date>
		<wp:post_date_gmt>2011-08-22 17:43:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selection_045</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>312</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2011/08/Selection_045.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/Selection_045.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1263";s:6:"height";s:3:"555";s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:25:"2011/08/Selection_045.png";s:5:"sizes";a:14:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"Selection_045-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"Selection_045-300x131.png";s:5:"width";s:3:"300";s:6:"height";s:3:"131";}s:5:"large";a:3:{s:4:"file";s:26:"Selection_045-1024x449.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"449";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:25:"Selection_045-184x184.png";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:25:"Selection_045-207x136.png";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-thumb";a:3:{s:4:"file";s:25:"Selection_045-943x345.png";s:5:"width";s:3:"943";s:6:"height";s:3:"345";}s:14:"featured-small";a:3:{s:4:"file";s:23:"Selection_045-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:25:"Selection_045-184x184.png";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:25:"Selection_045-260x170.png";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:25:"Selection_045-260x315.png";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:24:"Selection_045-140x94.png";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:25:"Selection_045-140x170.png";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:25:"Selection_045-430x283.png";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:25:"Selection_045-430x555.png";s:5:"width";s:3:"430";s:6:"height";s:3:"555";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Setting Bamboo for testing with Xfvb]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Cloud-words</title>
		<link>http://www.jworks.nl/2012/04/19/grails-in-the-cloud-nlgug-meetup/cloud-words/</link>
		<pubDate>Fri, 13 Apr 2012 08:21:24 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2012/04/Cloud-words.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date>2012-04-13 10:21:24</wp:post_date>
		<wp:post_date_gmt>2012-04-13 08:21:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cloud-words</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>403</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2012/04/Cloud-words.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/Cloud-words.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"325";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:23:"2012/04/Cloud-words.jpg";s:5:"sizes";a:12:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"Cloud-words-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"Cloud-words-300x195.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"195";}s:13:"ptentry-thumb";a:3:{s:4:"file";s:23:"Cloud-words-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:15:"ptgallery-thumb";a:3:{s:4:"file";s:23:"Cloud-words-207x136.jpg";s:5:"width";s:3:"207";s:6:"height";s:3:"136";}s:14:"featured-small";a:3:{s:4:"file";s:21:"Cloud-words-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:11:"entry-thumb";a:3:{s:4:"file";s:23:"Cloud-words-184x184.jpg";s:5:"width";s:3:"184";s:6:"height";s:3:"184";}s:17:"ptportfolio-thumb";a:3:{s:4:"file";s:23:"Cloud-words-260x170.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb2";a:3:{s:4:"file";s:23:"Cloud-words-260x315.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"315";}s:18:"ptportfolio-thumb3";a:3:{s:4:"file";s:22:"Cloud-words-140x94.jpg";s:5:"width";s:3:"140";s:6:"height";s:2:"94";}s:18:"ptportfolio-thumb4";a:3:{s:4:"file";s:23:"Cloud-words-140x170.jpg";s:5:"width";s:3:"140";s:6:"height";s:3:"170";}s:18:"ptportfolio-thumb5";a:3:{s:4:"file";s:23:"Cloud-words-430x283.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"283";}s:18:"ptportfolio-thumb6";a:3:{s:4:"file";s:23:"Cloud-words-430x325.jpg";s:5:"width";s:3:"430";s:6:"height";s:3:"325";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>bookorganizer</title>
		<link>http://www.jworks.nl/?attachment_id=419</link>
		<pubDate>Tue, 08 May 2012 13:45:12 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2012/05/bookorganizer.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2012-05-08 15:45:12</wp:post_date>
		<wp:post_date_gmt>2012-05-08 13:45:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookorganizer</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2012/05/bookorganizer.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/05/bookorganizer.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>IntelliJ toString settings window</title>
		<link>http://www.jworks.nl/2013/01/10/generate-a-tostring-using-guava-objects-tostringhelper-with-intellij/screen-shot-2013-01-06-at-21-30-43/</link>
		<pubDate>Sun, 06 Jan 2013 20:41:06 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/01/Screen-Shot-2013-01-06-at-21.30.43-.png</guid>
		<description></description>
		<content:encoded><![CDATA[IntelliJ toString settings window]]></content:encoded>
		<excerpt:encoded><![CDATA[IntelliJ toString settings window]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2013-01-06 21:41:06</wp:post_date>
		<wp:post_date_gmt>2013-01-06 20:41:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2013-01-06-at-21-30-43</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>500</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/01/Screen-Shot-2013-01-06-at-21.30.43-.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/Screen-Shot-2013-01-06-at-21.30.43-.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:989;s:6:"height";i:691;s:4:"file";s:47:"2013/01/Screen-Shot-2013-01-06-at-21.30.43-.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:47:"Screen-Shot-2013-01-06-at-21.30.43--150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:47:"Screen-Shot-2013-01-06-at-21.30.43--300x209.png";s:5:"width";i:300;s:6:"height";i:209;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[IntelliJ toString settings window]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Jetson helping out writing a blogpost</title>
		<link>http://www.jworks.nl/2013/01/08/introduction-to-hamcrest-core-matchers/photo-3/</link>
		<pubDate>Sun, 06 Jan 2013 21:53:52 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/01/photo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>519</wp:post_id>
		<wp:post_date>2013-01-06 22:53:52</wp:post_date>
		<wp:post_date_gmt>2013-01-06 21:53:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photo-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>508</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/01/photo-e1357509256680.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/photo-e1357509256680.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:968;s:6:"height";i:1296;s:4:"file";s:32:"2013/01/photo-e1357509256680.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"photo-e1357509256680-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"photo-e1357509256680-224x300.jpg";s:5:"width";i:224;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"photo-e1357509256680-764x1024.jpg";s:5:"width";i:764;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:2.79999999999999982236431605997495353221893310546875;s:6:"credit";s:0:"";s:6:"camera";s:8:"iPhone 4";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1357512699;s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.85";s:3:"iso";s:3:"320";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:9:"full-orig";a:3:{s:5:"width";i:1296;s:6:"height";i:968;s:4:"file";s:9:"photo.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:17:"photo-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:17:"photo-300x224.jpg";s:5:"width";i:300;s:6:"height";i:224;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:18:"photo-1024x764.jpg";s:5:"width";i:1024;s:6:"height";i:764;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Groovy in Action</title>
		<link>http://www.jworks.nl/2013/04/13/reviving-groovy-in-action/nash-comp/</link>
		<pubDate>Sat, 13 Apr 2013 21:07:28 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/04/9781932394849.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>561</wp:post_id>
		<wp:post_date>2013-04-13 23:07:28</wp:post_date>
		<wp:post_date_gmt>2013-04-13 21:07:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nash-comp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/04/9781932394849.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/04/9781932394849.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:517;s:6:"height";i:648;s:4:"file";s:25:"2013/04/9781932394849.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"9781932394849-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:25:"9781932394849-239x300.jpg";s:5:"width";i:239;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:9:"Nash.comp";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Groovy in Action MEAP</title>
		<link>http://www.jworks.nl/2013/04/13/reviving-groovy-in-action/koenig2_cover150/</link>
		<pubDate>Sat, 13 Apr 2013 21:09:16 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/04/koenig2_cover150.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>565</wp:post_id>
		<wp:post_date>2013-04-13 23:09:16</wp:post_date>
		<wp:post_date_gmt>2013-04-13 21:09:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>koenig2_cover150</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/04/koenig2_cover150.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/04/koenig2_cover150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:150;s:6:"height";i:187;s:4:"file";s:28:"2013/04/koenig2_cover150.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"koenig2_cover150-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>1039600_451623828268078_1278733204_o</title>
		<link>http://www.jworks.nl/2013/09/28/bubbleconf-2013/1039600_451623828268078_1278733204_o/</link>
		<pubDate>Sun, 29 Sep 2013 10:43:42 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/09/1039600_451623828268078_1278733204_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>739</wp:post_id>
		<wp:post_date>2013-09-29 12:43:42</wp:post_date>
		<wp:post_date_gmt>2013-09-29 10:43:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1039600_451623828268078_1278733204_o</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>719</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/09/1039600_451623828268078_1278733204_o.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1428;s:6:"height";i:800;s:4:"file";s:48:"2013/09/1039600_451623828268078_1278733204_o.jpg";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"1039600_451623828268078_1278733204_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:48:"1039600_451623828268078_1278733204_o-300x168.jpg";s:5:"width";i:300;s:6:"height";i:168;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:49:"1039600_451623828268078_1278733204_o-1024x573.jpg";s:5:"width";i:1024;s:6:"height";i:573;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:46:"1039600_451623828268078_1278733204_o-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:46:"1039600_451623828268078_1278733204_o-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:46:"1039600_451623828268078_1278733204_o-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:48:"1039600_451623828268078_1278733204_o-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:48:"1039600_451623828268078_1278733204_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/09/1039600_451623828268078_1278733204_o.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>bubbleconf_banner</title>
		<link>http://www.jworks.nl/2013/09/28/bubbleconf-2013/bubbleconf_banner/</link>
		<pubDate>Sun, 29 Sep 2013 10:46:38 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/09/bubbleconf_banner.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2013-09-29 12:46:38</wp:post_date>
		<wp:post_date_gmt>2013-09-29 10:46:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bubbleconf_banner</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>719</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/09/bubbleconf_banner.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/09/bubbleconf_banner.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1428;s:6:"height";i:417;s:4:"file";s:29:"2013/09/bubbleconf_banner.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"bubbleconf_banner-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"bubbleconf_banner-300x87.png";s:5:"width";i:300;s:6:"height";i:87;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:30:"bubbleconf_banner-1024x299.png";s:5:"width";i:1024;s:6:"height";i:299;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:27:"bubbleconf_banner-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:27:"bubbleconf_banner-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:27:"bubbleconf_banner-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:29:"bubbleconf_banner-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:29:"bubbleconf_banner-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>537080_494887233941737_408597564_n</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/537080_494887233941737_408597564_n/</link>
		<pubDate>Tue, 01 Oct 2013 21:39:19 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/10/537080_494887233941737_408597564_n.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo credit: Cuong Bui]]></excerpt:encoded>
		<wp:post_id>754</wp:post_id>
		<wp:post_date>2013-10-01 23:39:19</wp:post_date>
		<wp:post_date_gmt>2013-10-01 21:39:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>537080_494887233941737_408597564_n</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>717</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/10/537080_494887233941737_408597564_n.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/10/537080_494887233941737_408597564_n.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:960;s:4:"file";s:46:"2013/10/537080_494887233941737_408597564_n.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"537080_494887233941737_408597564_n-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:46:"537080_494887233941737_408597564_n-400x600.jpg";s:5:"width";i:400;s:6:"height";i:600;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:44:"537080_494887233941737_408597564_n-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:44:"537080_494887233941737_408597564_n-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:44:"537080_494887233941737_408597564_n-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:46:"537080_494887233941737_408597564_n-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:46:"537080_494887233941737_408597564_n-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>739881_494886000608527_1048977993_o</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/739881_494886000608527_1048977993_o/</link>
		<pubDate>Tue, 01 Oct 2013 21:39:22 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/10/739881_494886000608527_1048977993_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo credit: Cuong Bui]]></excerpt:encoded>
		<wp:post_id>755</wp:post_id>
		<wp:post_date>2013-10-01 23:39:22</wp:post_date>
		<wp:post_date_gmt>2013-10-01 21:39:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>739881_494886000608527_1048977993_o</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>717</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/10/739881_494886000608527_1048977993_o.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/10/739881_494886000608527_1048977993_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:47:"2013/10/739881_494886000608527_1048977993_o.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:47:"739881_494886000608527_1048977993_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:47:"739881_494886000608527_1048977993_o-600x400.jpg";s:5:"width";i:600;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:45:"739881_494886000608527_1048977993_o-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:45:"739881_494886000608527_1048977993_o-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:45:"739881_494886000608527_1048977993_o-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:47:"739881_494886000608527_1048977993_o-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:47:"739881_494886000608527_1048977993_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>858845_494887183941742_1538243368_o</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/858845_494887183941742_1538243368_o/</link>
		<pubDate>Tue, 01 Oct 2013 21:39:25 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/10/858845_494887183941742_1538243368_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo credit: Cuong Bui]]></excerpt:encoded>
		<wp:post_id>756</wp:post_id>
		<wp:post_date>2013-10-01 23:39:25</wp:post_date>
		<wp:post_date_gmt>2013-10-01 21:39:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>858845_494887183941742_1538243368_o</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>717</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/10/858845_494887183941742_1538243368_o.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/10/858845_494887183941742_1538243368_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:47:"2013/10/858845_494887183941742_1538243368_o.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:47:"858845_494887183941742_1538243368_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:47:"858845_494887183941742_1538243368_o-600x400.jpg";s:5:"width";i:600;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:45:"858845_494887183941742_1538243368_o-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:45:"858845_494887183941742_1538243368_o-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:45:"858845_494887183941742_1538243368_o-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:47:"858845_494887183941742_1538243368_o-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:47:"858845_494887183941742_1538243368_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>1277476_494886203941840_1853058682_o</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/1277476_494886203941840_1853058682_o/</link>
		<pubDate>Tue, 01 Oct 2013 21:39:27 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/10/1277476_494886203941840_1853058682_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo credit: Cuong Bui]]></excerpt:encoded>
		<wp:post_id>757</wp:post_id>
		<wp:post_date>2013-10-01 23:39:27</wp:post_date>
		<wp:post_date_gmt>2013-10-01 21:39:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1277476_494886203941840_1853058682_o</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>717</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/10/1277476_494886203941840_1853058682_o.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/10/1277476_494886203941840_1853058682_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:48:"2013/10/1277476_494886203941840_1853058682_o.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"1277476_494886203941840_1853058682_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:48:"1277476_494886203941840_1853058682_o-600x400.jpg";s:5:"width";i:600;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:46:"1277476_494886203941840_1853058682_o-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:46:"1277476_494886203941840_1853058682_o-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:46:"1277476_494886203941840_1853058682_o-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:48:"1277476_494886203941840_1853058682_o-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:48:"1277476_494886203941840_1853058682_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>1277747_494886980608429_49004461_o</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/1277747_494886980608429_49004461_o/</link>
		<pubDate>Tue, 01 Oct 2013 21:39:29 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/10/1277747_494886980608429_49004461_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo credit: Cuong Bui]]></excerpt:encoded>
		<wp:post_id>758</wp:post_id>
		<wp:post_date>2013-10-01 23:39:29</wp:post_date>
		<wp:post_date_gmt>2013-10-01 21:39:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1277747_494886980608429_49004461_o</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>717</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/10/1277747_494886980608429_49004461_o.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/10/1277747_494886980608429_49004461_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:46:"2013/10/1277747_494886980608429_49004461_o.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"1277747_494886980608429_49004461_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:46:"1277747_494886980608429_49004461_o-600x400.jpg";s:5:"width";i:600;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-32";a:4:{s:4:"file";s:44:"1277747_494886980608429_49004461_o-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-64";a:4:{s:4:"file";s:44:"1277747_494886980608429_49004461_o-64x64.jpg";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}s:15:"guest-author-96";a:4:{s:4:"file";s:44:"1277747_494886980608429_49004461_o-96x96.jpg";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:10:"image/jpeg";}s:16:"guest-author-128";a:4:{s:4:"file";s:46:"1277747_494886980608429_49004461_o-128x128.jpg";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:10:"image/jpeg";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:46:"1277747_494886980608429_49004461_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>pycon_logo</title>
		<link>http://www.jworks.nl/2013/10/16/week-python-42-2013/pycon_logo/</link>
		<pubDate>Wed, 16 Oct 2013 09:43:57 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/11/pycon_logo.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>794</wp:post_id>
		<wp:post_date>2013-10-16 11:43:57</wp:post_date>
		<wp:post_date_gmt>2013-10-16 09:43:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pycon_logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>779</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/11/pycon_logo.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/pycon_logo.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:328;s:6:"height";i:120;s:4:"file";s:22:"2013/11/pycon_logo.gif";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"pycon_logo-150x120.gif";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-32";a:4:{s:4:"file";s:20:"pycon_logo-32x32.gif";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-64";a:4:{s:4:"file";s:20:"pycon_logo-64x64.gif";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-96";a:4:{s:4:"file";s:20:"pycon_logo-96x96.gif";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/gif";}s:16:"guest-author-128";a:4:{s:4:"file";s:22:"pycon_logo-128x120.gif";s:5:"width";i:128;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:22:"pycon_logo-150x120.gif";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>pycon_logo</title>
		<link>http://www.jworks.nl/2013/10/16/week-python-42-2013/pycon_logo-2/</link>
		<pubDate>Wed, 16 Oct 2013 09:46:22 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/11/pycon_logo1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>795</wp:post_id>
		<wp:post_date>2013-10-16 11:46:22</wp:post_date>
		<wp:post_date_gmt>2013-10-16 09:46:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pycon_logo-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>779</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/11/pycon_logo1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/pycon_logo1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:328;s:6:"height";i:120;s:4:"file";s:23:"2013/11/pycon_logo1.gif";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"pycon_logo1-150x120.gif";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-32";a:4:{s:4:"file";s:21:"pycon_logo1-32x32.gif";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-64";a:4:{s:4:"file";s:21:"pycon_logo1-64x64.gif";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/gif";}s:15:"guest-author-96";a:4:{s:4:"file";s:21:"pycon_logo1-96x96.gif";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/gif";}s:16:"guest-author-128";a:4:{s:4:"file";s:23:"pycon_logo1-128x120.gif";s:5:"width";i:128;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:23:"pycon_logo1-150x120.gif";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>logo</title>
		<link>http://www.jworks.nl/?attachment_id=841</link>
		<pubDate>Tue, 05 Nov 2013 13:41:02 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/11/logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date>2013-11-05 14:41:02</wp:post_date>
		<wp:post_date_gmt>2013-11-05 13:41:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/11/logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:286;s:6:"height";i:60;s:4:"file";s:16:"2013/11/logo.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:15:"logo-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:14:"logo-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:14:"logo-64x60.png";s:5:"width";i:64;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:14:"logo-96x60.png";s:5:"width";i:96;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:15:"logo-128x60.png";s:5:"width";i:128;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:15:"logo-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>logo</title>
		<link>http://www.jworks.nl/?attachment_id=843</link>
		<pubDate>Wed, 06 Nov 2013 20:20:51 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/11/logo1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date>2013-11-06 21:20:51</wp:post_date>
		<wp:post_date_gmt>2013-11-06 20:20:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/11/logo1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/logo1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:286;s:6:"height";i:60;s:4:"file";s:17:"2013/11/logo1.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"logo1-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:15:"logo1-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:15:"logo1-64x60.png";s:5:"width";i:64;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:15:"logo1-96x60.png";s:5:"width";i:96;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:16:"logo1-128x60.png";s:5:"width";i:128;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:16:"logo1-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>logo</title>
		<link>http://www.jworks.nl/?attachment_id=844</link>
		<pubDate>Wed, 06 Nov 2013 20:21:16 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/11/logo2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>844</wp:post_id>
		<wp:post_date>2013-11-06 21:21:16</wp:post_date>
		<wp:post_date_gmt>2013-11-06 20:21:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/11/logo2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/logo2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:286;s:6:"height";i:60;s:4:"file";s:17:"2013/11/logo2.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"logo2-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:15:"logo2-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:15:"logo2-64x60.png";s:5:"width";i:64;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:15:"logo2-96x60.png";s:5:"width";i:96;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:16:"logo2-128x60.png";s:5:"width";i:128;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:16:"logo2-150x60.png";s:5:"width";i:150;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>jacocoreport</title>
		<link>http://www.jworks.nl/2013/12/10/enable-jacoco-with-jetty/jacocoreport/</link>
		<pubDate>Tue, 10 Dec 2013 08:45:47 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2013/12/jacocoreport.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>873</wp:post_id>
		<wp:post_date>2013-12-10 09:45:47</wp:post_date>
		<wp:post_date_gmt>2013-12-10 08:45:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jacocoreport</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>872</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2013/12/jacocoreport.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/jacocoreport.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:430;s:6:"height";i:139;s:4:"file";s:24:"2013/12/jacocoreport.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"jacocoreport-150x139.png";s:5:"width";i:150;s:6:"height";i:139;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:22:"jacocoreport-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:22:"jacocoreport-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:22:"jacocoreport-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:24:"jacocoreport-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:24:"jacocoreport-150x139.png";s:5:"width";i:150;s:6:"height";i:139;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>code-completion-string</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/code-completion-string/</link>
		<pubDate>Wed, 26 Feb 2014 15:00:53 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-string.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>885</wp:post_id>
		<wp:post_date>2014-02-26 16:00:53</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:00:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-completion-string</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>884</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-string.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/code-completion-string.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1416;s:6:"height";i:422;s:4:"file";s:34:"2014/02/code-completion-string.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"code-completion-string-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:34:"code-completion-string-600x178.png";s:5:"width";i:600;s:6:"height";i:178;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:35:"code-completion-string-1024x305.png";s:5:"width";i:1024;s:6:"height";i:305;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:32:"code-completion-string-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:32:"code-completion-string-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:32:"code-completion-string-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:34:"code-completion-string-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:34:"code-completion-string-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>live-template</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/live-template/</link>
		<pubDate>Wed, 26 Feb 2014 15:00:54 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/02/live-template.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>886</wp:post_id>
		<wp:post_date>2014-02-26 16:00:54</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:00:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-template</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>884</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/02/live-template.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/live-template.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1096;s:6:"height";i:344;s:4:"file";s:25:"2014/02/live-template.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"live-template-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"live-template-600x188.png";s:5:"width";i:600;s:6:"height";i:188;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"live-template-1024x321.png";s:5:"width";i:1024;s:6:"height";i:321;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:23:"live-template-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:23:"live-template-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:23:"live-template-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:25:"live-template-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:25:"live-template-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>code-completion-list</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/code-completion-list/</link>
		<pubDate>Wed, 26 Feb 2014 15:00:56 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-list.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>887</wp:post_id>
		<wp:post_date>2014-02-26 16:00:56</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:00:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-completion-list</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>884</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-list.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/code-completion-list.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1270;s:6:"height";i:400;s:4:"file";s:32:"2014/02/code-completion-list.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"code-completion-list-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:32:"code-completion-list-600x188.png";s:5:"width";i:600;s:6:"height";i:188;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:33:"code-completion-list-1024x322.png";s:5:"width";i:1024;s:6:"height";i:322;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:30:"code-completion-list-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:30:"code-completion-list-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:30:"code-completion-list-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:32:"code-completion-list-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:32:"code-completion-list-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sample Page</title>
		<link>http://www.jworks.nl/sample-page/</link>
		<pubDate>Mon, 18 Jul 2011 17:30:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[This is an example page. It's different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:

<blockquote>Hi there! I'm a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin' caught in the rain.)</blockquote>

...or something like this:

<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickies to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>

As a new WordPress user, you should go to <a href="http://jworks.nl.webhosting1.transurl.nl/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2011-07-18 17:30:00</wp:post_date>
		<wp:post_date_gmt>2011-07-18 17:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>About us</title>
		<link>http://www.jworks.nl/about-us/</link>
		<pubDate>Mon, 18 Jul 2011 20:27:06 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=8</guid>
		<description></description>
		<content:encoded><![CDATA[Jworks builds quality IT solutions in an Agile environment, support existing teams to deliver the optimum result. This is done by combining best practices, Agile principles (XP, Scrum, Kanban) into cost effective solutions.
<h2>Erik Pragt</h2>
<blockquote>
<div><a href="http://www.jworks.nl/wp-content/uploads/2011/07/erikpragt.png"><img class="size-full wp-image-78 alignleft" title="erikpragt" src="http://www.jworks.nl/wp-content/uploads/2011/07/erikpragt.png" alt="" width="105" height="120" /></a>I’ve been a software developer since the end of the 90’s, and I worked for various companies, including ISP’s, Web Designers, a Medical Software Developer and I currently own a business (Jworks), which focusses on Grails.</div>
<div>I focus on Java (JEE, Maven, Wicket), Distributed Software Development, Agile Processes, Coaching, SCRUM and Testing (TDD) and my main goal is to make any project succeed!</div>
<div>I'm also passionate about Groovy and Grails, and I'm an organizer (and founder) of the Dutch Groovy and Grails user group, the NLGUG.</div></blockquote>
<h2></h2>
<h2>Marcin Erdmann</h2>
<blockquote><a href="http://www.jworks.nl/wp-content/uploads/2011/07/marcinerdmann.png"><img class="size-full wp-image-77 alignleft" title="marcinerdmann" src="http://www.jworks.nl/wp-content/uploads/2011/07/marcinerdmann.png" alt="" width="105" height="120" /></a>Young and passionate developer from Poland with 3 years of experience, mainly with Java based technologies. Started as a J2ME developer and later moved towards web development - both backend and frontend. Currently works as a consultant for Jworks in The Netherlands on a Grails based project.
<div>Strongly believes that a good software product must not only be stable and provide all the features needed by the end user, but also has to be 'beautiful under the hood'. A fan of well-documented and clean code. Always eager to learn new cutting edge technologies.</div>
<div>Discovered Groovy in spring of 2010 and immediately fell in love with its flat learning curve for Java developers and all features specific for dynamic languages it has.</div></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2011-07-18 20:27:06</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:27:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-us</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>et_ptemplate_settings</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:16:"et_fullwidthpage";s:1:"0";s:28:"et_ptemplate_gallery_perpage";s:2:"10";s:22:"et_ptemplate_showtitle";s:1:"1";s:21:"et_ptemplate_showdesc";s:1:"1";s:28:"et_ptemplate_detect_portrait";s:1:"1";s:22:"et_ptemplate_imagesize";s:1:"2";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Blog</title>
		<link>http://www.jworks.nl/blog/</link>
		<pubDate>Mon, 18 Jul 2011 20:27:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=10</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2011-07-18 20:27:41</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:27:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-blog.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>et_ptemplate_settings</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:16:"et_fullwidthpage";s:1:"0";s:22:"et_ptemplate_blogstyle";s:1:"0";s:22:"et_ptemplate_showthumb";s:1:"0";s:25:"et_ptemplate_blog_perpage";s:2:"10";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Consultancy</title>
		<link>http://www.jworks.nl/consultancy/</link>
		<pubDate>Mon, 18 Jul 2011 20:28:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=12</guid>
		<description></description>
		<content:encoded><![CDATA[Agile implementation an unrivaled success. The Agile movement is gaining serious inroads into all organizations.<!--more--> But how do you perform Agile well? What are the pitfalls? How do you integrate the Agile mindset, processes and practices into your organization? Jworks offers full service with Agile Consultancy. Jworks is your one-stop shop for training, consultancy, adoption support and coaching.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2011-07-18 20:28:04</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:28:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>consultancy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Icon</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/icon-2.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Tagline</wp:meta_key>
			<wp:meta_value><![CDATA[Agile consultancy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Thumbnail</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/carousel-5.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Contact</title>
		<link>http://www.jworks.nl/contact/</link>
		<pubDate>Mon, 18 Jul 2011 20:28:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=14</guid>
		<description></description>
		<content:encoded><![CDATA[Thank you for showing an interest in the services we provide. Please fill in the contact form below and we will contact you as soon as possible. Or, you can give us a call at number <strong>+31 6 1010 9513</strong>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2011-07-18 20:28:54</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:28:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>contact</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-contact.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>et_ptemplate_settings</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:16:"et_fullwidthpage";s:1:"0";s:21:"et_regenerate_numbers";s:1:"0";s:11:"et_email_to";s:20:"erik.pragt@jworks.nl";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Software Development</title>
		<link>http://www.jworks.nl/software-development/</link>
		<pubDate>Mon, 18 Jul 2011 20:29:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=16</guid>
		<description></description>
		<content:encoded><![CDATA[We have more than 10 years of experience in developing top quality enterprise Java applications.<!--more--> This is our main development platform, which we use to effectively create testable, maintainable and cost efficient business applications.

Grails is our favorite upcoming technology of choice. Lean, fast development powered by industry standard technologies enable us to quickly deliver the software you want without compromising the quality aspects of enterprise software.

Groovy brings the power of dynamic languages to the Java platform. We use Groovy to extend the Java language and create flexible solutions where necessary.

While technology is a big solution driver, we believe that an Agile process is key to success. We value short, iterative development which focus on communication with stakeholders.

Scrum is currently the standard in agile software development. All our developers are also Certified Scrum Masters who know how to enable a successful project with the right stakeholders.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2011-07-18 20:29:20</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:29:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Icon</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/icon-3.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Tagline</wp:meta_key>
			<wp:meta_value><![CDATA[Quality Software Development]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Thumbnail</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/carousel-6.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Home</title>
		<link>http://www.jworks.nl/2011/07/18/home/</link>
		<pubDate>Mon, 18 Jul 2011 21:19:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2011-07-18 21:19:10</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/18/26/</link>
		<pubDate>Mon, 18 Jul 2011 21:19:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[Jworks offers trainings suitable for everyone. We specialize in technical, high quality training with experts in the community. While our focus is on developing software with Groovy and Grails, we also deliver training in disciplines like Test Driven Development, Agile Software Development or Domain Driven Design. Altogether, our trainings span a wide range of key areas necessary for any software development team willing to deliver a product with the highest quality possible. All our trainers are well experienced and with a hands-on mentality. Our trainings are practical and to the point, allowing you to employ all your learned skills immediately. Past trainings: DDD Training by Greg Young Beginning Groovy and Grails by Willem Dekker and Erik Pragt Fitnesse training by Jonne Kats and Erik Pragt]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2011-07-18 21:19:10</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>26</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/18/28/</link>
		<pubDate>Mon, 18 Jul 2011 21:19:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=28</guid>
		<description></description>
		<content:encoded><![CDATA[Thank you for showing an interest in the services we provide. Please fill in the contact form below and we will contact you as soon as possible.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2011-07-18 21:19:10</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>28</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/18/29/</link>
		<pubDate>Mon, 18 Jul 2011 21:19:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[Agile implementation an unrivaled success. The Agile movement is gaining serious inroads into all organizations. But how do you perform Agile well? What are the pitfalls? How do you integrate the Agile mindset, processes and practices into your organization? Jworks offers full service with Agile Consultancy. Jworks is your one-stop shop for training, consultancy, adoption support and coaching.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2011-07-18 21:19:10</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>29</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/18/30/</link>
		<pubDate>Mon, 18 Jul 2011 21:19:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2011-07-18 21:19:10</wp:post_date>
		<wp:post_date_gmt>2011-07-18 21:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>30</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/18/72/</link>
		<pubDate>Mon, 18 Jul 2011 23:17:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2011-07-18 23:17:17</wp:post_date>
		<wp:post_date_gmt>2011-07-18 23:17:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>72</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/07/26/138/</link>
		<pubDate>Tue, 26 Jul 2011 21:42:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2011-07-26 21:42:42</wp:post_date>
		<wp:post_date_gmt>2011-07-26 21:42:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>138</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2011/11/15/378/</link>
		<pubDate>Tue, 15 Nov 2011 19:47:24 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=378</guid>
		<description></description>
		<content:encoded><![CDATA[Groovy and Grails training Groovy is an object-oriented programming language for the Java platform. It is a dynamic language with features similar to those of Python, Ruby, Perl, and Smalltalk. It can be used as a scripting language for the Java Platform. Groovy uses a Java-like bracket syntax. It is dynamically compiled to Java Virtual Machine (JVM) bytecode and interoperates with other Java code and libraries. More importantly: Groovy is getting more and more popular, with Grails being one of the strong frameworks building on the functionality Groovy provides. If you want to learn Groovy and Grails, we are the perfect partner in that. We offer customized training packages depending on your need, covering: Basic and advanced Groovy programming Basic and advanced usage of the Grails framework Best practices based on more than 4 years of experience with Grails If you are a Java programmer and you want to hop on the Groovy and Grails train, then this is the course for you. If you just started programming and you want to learn a language which helps you deliver quickly, we can help you in that! WhenNo dates yet WhereAnywhere in the world CostsSee below Prices: Minimum of &euro 600,-…]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>378</wp:post_id>
		<wp:post_date>2011-11-15 20:47:24</wp:post_date>
		<wp:post_date_gmt>2011-11-15 19:47:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>378</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[26]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[370]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2012/08/07/457/</link>
		<pubDate>Tue, 07 Aug 2012 06:37:48 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=457</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2012-08-07 08:37:48</wp:post_date>
		<wp:post_date_gmt>2012-08-07 06:37:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>457</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.jworks.nl/2013/09/26/716/</link>
		<pubDate>Thu, 26 Sep 2013 15:17:30 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=716</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>716</wp:post_id>
		<wp:post_date>2013-09-26 17:17:30</wp:post_date>
		<wp:post_date_gmt>2013-09-26 15:17:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status></wp:ping_status>
		<wp:post_name>716</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="navigation-menu"><![CDATA[Navigation menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>code-completion-error</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/code-completion-error/</link>
		<pubDate>Wed, 26 Feb 2014 15:00:57 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-error.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>888</wp:post_id>
		<wp:post_date>2014-02-26 16:00:57</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:00:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-completion-error</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>884</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-error.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/code-completion-error.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1028;s:6:"height";i:92;s:4:"file";s:33:"2014/02/code-completion-error.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"code-completion-error-150x92.png";s:5:"width";i:150;s:6:"height";i:92;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:32:"code-completion-error-600x53.png";s:5:"width";i:600;s:6:"height";i:53;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:33:"code-completion-error-1024x91.png";s:5:"width";i:1024;s:6:"height";i:91;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:31:"code-completion-error-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:31:"code-completion-error-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:31:"code-completion-error-96x92.png";s:5:"width";i:96;s:6:"height";i:92;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:32:"code-completion-error-128x92.png";s:5:"width";i:128;s:6:"height";i:92;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:32:"code-completion-error-150x92.png";s:5:"width";i:150;s:6:"height";i:92;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>exclude-auto-import</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/exclude-auto-import/</link>
		<pubDate>Wed, 26 Feb 2014 15:02:06 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/02/exclude-auto-import.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>889</wp:post_id>
		<wp:post_date>2014-02-26 16:02:06</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:02:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exclude-auto-import</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>884</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/02/exclude-auto-import.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/02/exclude-auto-import.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1468;s:6:"height";i:382;s:4:"file";s:31:"2014/02/exclude-auto-import.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"exclude-auto-import-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"exclude-auto-import-600x156.png";s:5:"width";i:600;s:6:"height";i:156;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"exclude-auto-import-1024x266.png";s:5:"width";i:1024;s:6:"height";i:266;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-32";a:4:{s:4:"file";s:29:"exclude-auto-import-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-64";a:4:{s:4:"file";s:29:"exclude-auto-import-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:15:"guest-author-96";a:4:{s:4:"file";s:29:"exclude-auto-import-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:16:"guest-author-128";a:4:{s:4:"file";s:31:"exclude-auto-import-128x128.png";s:5:"width";i:128;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:31:"exclude-auto-import-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Transform</title>
		<link>http://www.jworks.nl/2014/03/15/intellij-live-templates-google-guava/screen-shot-2014-03-15-at-22-57-56/</link>
		<pubDate>Sat, 15 Mar 2014 21:58:40 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.57.56.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>907</wp:post_id>
		<wp:post_date>2014-03-15 22:58:40</wp:post_date>
		<wp:post_date_gmt>2014-03-15 21:58:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2014-03-15-at-22-57-56</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>904</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.57.56.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/03/Screen-Shot-2014-03-15-at-22.57.56.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1874;s:6:"height";i:530;s:4:"file";s:46:"2014/03/Screen-Shot-2014-03-15-at-22.57.56.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.57.56-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.57.56-600x169.png";s:5:"width";i:600;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:47:"Screen-Shot-2014-03-15-at-22.57.56-1024x289.png";s:5:"width";i:1024;s:6:"height";i:289;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.57.56-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Filter settings</title>
		<link>http://www.jworks.nl/2014/03/15/intellij-live-templates-google-guava/screen-shot-2014-03-15-at-22-58-18/</link>
		<pubDate>Sat, 15 Mar 2014 21:58:42 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.58.18.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>908</wp:post_id>
		<wp:post_date>2014-03-15 22:58:42</wp:post_date>
		<wp:post_date_gmt>2014-03-15 21:58:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2014-03-15-at-22-58-18</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>904</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.58.18.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/03/Screen-Shot-2014-03-15-at-22.58.18.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1380;s:6:"height";i:526;s:4:"file";s:46:"2014/03/Screen-Shot-2014-03-15-at-22.58.18.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.58.18-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.58.18-600x228.png";s:5:"width";i:600;s:6:"height";i:228;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:47:"Screen-Shot-2014-03-15-at-22.58.18-1024x390.png";s:5:"width";i:1024;s:6:"height";i:390;s:9:"mime-type";s:9:"image/png";}s:15:"wp_rp_thumbnail";a:4:{s:4:"file";s:46:"Screen-Shot-2014-03-15-at-22.58.18-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Discobot (26.2011)</title>
		<link>http://www.jworks.nl/2011/07/18/this-week-in-discobot-26-2011/</link>
		<pubDate>Mon, 18 Jul 2011 22:08:35 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[Currently, we (Erik Pragt and Marcin Erdmann) are working on getting Groovy to run on Android and make the process as smooth as possible for other developers. On this blog regular updates will be posted to inform you about the progress we made, the problems we ran into and how we solved them. This is the first episode of 'This week in Discobot'.<!--more-->

As you've probably seen on twitter, Erik managed to finally run a really simple android application where the main activity class is a groovy class. We had some problems with resources files used by DefaultGroovyMethods and also with call site caching, but thanks to Jochen and his answers on the mailing list, Erik was able to get around them. Erik's next goal is to run groovy's test suite on android so that we can be sure what works and what doesn't. It's going to be also a good safety measure to know if everything still works after patching a newer version of Groovy.

I'm currently working on making it easy to build groovy applications for android. For obvious reasons I've decided to use gradle. There is a gradle android plugin which I've already evaluated and learned that I'll have to to tweak it a bit. I plan to create a discobot plugin that will combine the tweaked android plugin and groovy plugin plus some build tasks. Thanks to that and a tutorial one should be able to build a simple application from scratch in less than 10 minutes.

See you next week!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2011-07-18 22:08:35</wp:post_date>
		<wp:post_date_gmt>2011-07-18 22:08:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-discobot-26-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-2"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="discobot"><![CDATA[discobot]]></category>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Thumbnail</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/uploads/2011/07/android-300x300.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423338794]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:18:"168.90668804639495";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"90.01114275481328";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"128";s:5:"score";s:17:"88.37862286873256";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"551";s:5:"score";s:18:"57.278389865813296";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"352";s:5:"score";s:17:"47.31692348548731";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"41.41619872984978";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[GroovyMag - the magazine for Groovy and Grails developers about Groovy programming and Grails development]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.groovymag.com/2011/07/19-news-roundup-bar/</wp:comment_author_url>
			<wp:comment_author_IP>2001:470:7:926::2</wp:comment_author_IP>
			<wp:comment_date>2011-07-19 16:36:22</wp:comment_date>
			<wp:comment_date_gmt>2011-07-19 16:36:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] series to document their progress on this project (Discobot), and there are two posts up so far (26.2011, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311093382.7949";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311099754.9045";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-29)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=832</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-07-30 19:24:21</wp:comment_date>
			<wp:comment_date_gmt>2011-07-30 19:24:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This week in Discobot (26.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312053861.4741";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312054031.1957";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Training</title>
		<link>http://www.jworks.nl/training/</link>
		<pubDate>Mon, 18 Jul 2011 20:29:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=19</guid>
		<description></description>
		<content:encoded><![CDATA[Jworks offers trainings suitable for everyone. We specialize in technical, high quality training with experts in the community.<!--more--> While our focus is on developing software with Groovy and Grails, we also deliver training in disciplines like Test Driven Development, Agile Software Development or Domain Driven Design. Altogether, our trainings span a wide range of key areas necessary for any software development team willing to deliver a product with the highest quality possible. All our trainers are well experienced and with a hands-on mentality. Our trainings are practical and to the point, allowing you to employ all your learned skills immediately.

<strong>Past trainings:</strong>
<ul>
	<li><a title="Past trainings" href="http://jworks.nl.webhosting1.transurl.nl/training/past-trainings/">DDD Training by Greg Young</a></li>
	<li>Beginning Groovy and Grails by Willem Dekker and Erik Pragt</li>
	<li><a title="Past trainings" href="http://jworks.nl.webhosting1.transurl.nl/training/past-trainings/">Fitnesse training by Jonne Kats and Erik Pragt</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2011-07-18 20:29:59</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:29:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>training</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Icon</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/icon-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Tagline</wp:meta_key>
			<wp:meta_value><![CDATA[Expert Training]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Thumbnail</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jworks.nl/wp-content/jworks/carousel-4.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Past trainings</title>
		<link>http://www.jworks.nl/training/past-trainings/</link>
		<pubDate>Mon, 18 Jul 2011 20:30:27 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?page_id=21</guid>
		<description></description>
		<content:encoded><![CDATA[This page shows some of our past trainings we have delivered.
<h3>DDD Training - Greg Young</h3>
[nggallery id=1]
<h3>Fitnesse Training - Erik Pragt</h3>
[nggallery id=2]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2011-07-18 20:30:27</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:30:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>past-trainings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>19</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This (two)week(s) in Discobot (27-28.2011)</title>
		<link>http://www.jworks.nl/2011/07/18/this-twoweeks-in-discobot-27-28-2011/</link>
		<pubDate>Mon, 18 Jul 2011 22:09:32 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://jworks.nl.webhosting1.transurl.nl/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[We continued our work on getting Groovy working on Android over the past two weeks.

Erik has made quite a good progress with the tests suite for Discobot. What he has achieived by now now is a slightly modified original Groovy test suite running against the compiled but not packaged (jared) code of our patched version of Groovy on his laptop. And of course it's all green! As we removed some unnecessary classes and had to patch other, because the Dalvik VM doesn't provide all the classes that regular Java does, Erik also had to remove and change some of the tests but we are trying our best to keep the needed patching to a minimum. It all looks promising and the next step for Erik is to run the tests against a jar and then create an Android app that will run all the tests on the emulator/device. We need that to learn if the differences between Dalvik and regular Java will break any tests and we can do that only by running the tests on a real Dalvik VM. This will give us some confidence that when people start using Discobot for something more complex than a 'Hello World' app things won't start to break big time.

One of the concerns when Hjalmar Ekengren started his first efforts to run Groovy on Android as his GSoC project was the performance. I recall him telling me that it took up to 20s to start even a really simple app back in 2009 in the emulator. Apparently the things have improved quite a lot and our simple 'Hello world' example loads in the emulator in less than 5 seconds. It's still quite long in my opinion. But last week when I uploaded our test application to my HTC Desire running Android 2.2 I was really surprised how quick it loaded the app - I think it's less than a second! So we don't have to worry about the performance, at least at this stage of the project.

For the past two weeks I worked hard on modifying the Android Gradle plugin and creating the Discobot Gradle plugin. Thanks to the extensive documentation that the Gradle project has and a terrific example in the original Android Gradle plugin it wasn't hard to understand Gradle concepts. And when you get the main principles of Gradle it's a real pleasure to work on a Gradle plugin.

I'm basically done with all the changes that had to be made to the Android Gradle plugin so that the Discobot Gradle plugin could extend it and use it for its own needs. The last thing I need to work on is the documentation - the changes I've made are breaking for the Android Gradle plugin and I think that if I update the docs the developers of that plugin will be happier to accept my pull request. I tried to contact the github repository owner of the Android Gradle plugin (Jason Voegele) before I started the work on it to learn what is his view on the changes I planned to make but unfortunatelly I didn't get a response to my email. Hopefully when I create the pull request someone will get it processed...

Also the Discobot Gradle plugin is almost ready. Currently it builds the Android projects that use Groovy without a problem. I still want to add one task to it that will create the project structure and default files (AndroidManifest.xml and the main activity class among others) so that it will be easier to start the project from complete scratch with only a build.gradle file in your project. The task, updating Gradle Android plugin's documentation and creating a pull request on my changes are my goals for the next week.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2011-07-18 22:09:32</wp:post_date>
		<wp:post_date_gmt>2011-07-18 22:09:32</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-twoweeks-in-discobot-27-28-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-2"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="discobot"><![CDATA[discobot]]></category>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423142292]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:18:"168.90668804639495";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"128";s:5:"score";s:17:"72.36774263694149";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"69.88916808006141";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"551";s:5:"score";s:17:"47.67545447259131";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"352";s:5:"score";s:17:"44.64692135196857";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:16:"37.4872893749876";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>600</wp:comment_id>
			<wp:comment_author><![CDATA[Christian Paulsen]]></wp:comment_author>
			<wp:comment_author_email>c-w-p@t-online.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>87.153.104.245</wp:comment_author_IP>
			<wp:comment_date>2011-09-09 21:47:22</wp:comment_date>
			<wp:comment_date_gmt>2011-09-09 19:47:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for this work. I think it's a great job you do. It will help much, using groovy for the server, the desktop and mobile devices the same way. So we will be able to use groovy classes everywhere. 
Christian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315597642.4456";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315598800.8457";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-29)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=832</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-07-25 04:09:57</wp:comment_date>
			<wp:comment_date_gmt>2011-07-25 04:09:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This (two)week(s) in Discobot (27-28.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1311566997.912";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311571813.6218";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Testing reusable validation</title>
		<link>http://www.jworks.nl/2011/07/19/testing-resusable-validation/</link>
		<pubDate>Tue, 19 Jul 2011 23:07:56 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[In the application we are developing, a lot of input validation takes place. Most of the input is validated using <a title="Grails Command Objects" href="http://www.grails.org/doc/latest/guide/6.%20The%20Web%20Layer.html#6.1.10 Command Objects" target="_blank">Command Objects</a>, which are a breeze to use thanks to Grails' fantastic way of integrating them. However, in some of our Command Objects, there's some overlap, most notably in the validation part. For example, we use a CreateCustomerCommand and a OrderProductCommand, which both have a 'zipcode' field, which, in our case, matches the regular expression [0-9]{4}[a-zA-Z]{2}. Since we don't want to duplicate this regular expression, we need to come up with a solution to be able to reuse this.<!--more-->

One way of accomplishing this is to use <a title="Grails Global Constraints" href="http://www.grails.org/doc/latest/ref/Constraints/Usage.html" target="_blank">Grails Global Constraints</a>. Grails Global Constraints allow you to define your Constraints once, and reuse them in your application. However, (IMO) there are some downsides to this technique. One of them is testing these validations. I still haven't found a way to Unit test these validations, even though I spent quite some time looking into a way to accomplish this. Another downside is that these validations are in the Config.groovy, which pollutes your configuration with application logic. Not the best way to accomplish this.

The alternative way, which is the way we are using, is to create something simple ourselves. We created a SharedConstraints class, which contains all the shared validations in our application. A small example:

<pre class="brush:groovy">
class SharedConstraints {
  static def simCardNumber = [
    blank: false,
    validator:{ val, cmd -&gt;
      val ==~ /[1-9][0-9]{7}/
   }]
}
</pre>

To use this, do the following:

<pre class="brush:groovy">
class NewSimCardCommand {
  String simCardNumber

  static constraints = {
    simCardNumber(SharedConstraints.simCardNumber)
  }
}
</pre>

The only thing left is testing this. To test the simcard number validation in isolation, we use the following code:
<pre class="brush:groovy">
class SharedConstraintsTest extends GrailsUnitTestCase {
  void testSimCardNumber() {
    setupConstraint(SharedConstraints.simCardNumber)

    assert !checkConstraint("abcdef")
    assert !checkConstraint("02345678")
    assert checkConstraint("12345678")
  }

  private void setupConstraint(def constraint) {
    ObjectToValidate.constraints = {
      validatableField(constraint)
    }
    mockForConstraintsTests(ObjectToValidate)
  }

  private boolean checkConstraint(def inputValue) {
    return new ObjectToValidate(validatableField: inputValue).validate()
  }

  static class ObjectToValidate {
     def validatableField
     static constraints     // this is the constraints block which will emulate Grails validation
  }
}
</pre>

Creating this simple infrastructure class enables you to easily test constraints, which can be reused in all commands or domain objects.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2011-07-19 23:07:56</wp:post_date>
		<wp:post_date_gmt>2011-07-19 23:07:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-resusable-validation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="reusable"><![CDATA[reusable]]></category>
		<category domain="post_tag" nicename="validation"><![CDATA[validation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422884896]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"57.732918108639005";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"40.190469668940835";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:16:"37.6713843584388";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:16:"32.0819630793793";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:16:"32.0819630793793";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:16:"32.0819630793793";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Hubert Klein Ikkink]]></wp:comment_author>
			<wp:comment_author_email>h.kleinikkink@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mrhaki.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.157.8.57</wp:comment_author_IP>
			<wp:comment_date>2011-07-23 07:55:18</wp:comment_date>
			<wp:comment_date_gmt>2011-07-23 07:55:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We have use the constraints plugin on our projects. This works also very well. Constraints are handled as Grails artifacts, can be re-used in command objects/domain classes and they are easy to unit test. See https://github.com/geofflane/grails-constraints]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311407718.9482";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311412301.6252";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-01 17:57:49</wp:comment_date>
			<wp:comment_date_gmt>2011-08-01 15:57:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Hubert, thanks for the reply. I wasn't aware of this plugin, but I'll check it out and see how it compares to our current method. Thanks for the tip!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>19</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312214269.1109";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>651</wp:comment_id>
			<wp:comment_author><![CDATA[Zoran F.]]></wp:comment_author>
			<wp:comment_author_email>zoka@gmx.at</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.47.138.99</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 14:01:31</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 12:01:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just got the answer yesterday in grails forum. It should be "+" instead of ",".

static constraints = {
  name(SharedConstraints.checkA + SharedConstraints.checkB)
} 

http://grails.1312388.n4.nabble.com/how-to-use-several-shared-reusable-constraints-on-a-field-td3815020.html#none

Thank you]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>630</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317902491.2641";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>652</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.73.150.134</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 20:19:21</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 18:19:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Zoran, thanks for sharing this information! 

Erik.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>651</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317925161.1075";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>630</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan V]]></wp:comment_author>
			<wp:comment_author_email>rvanderwerf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>97.77.8.59</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 19:23:11</wp:comment_date>
			<wp:comment_date_gmt>2011-09-20 17:23:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Zoran F., I'm pretty sure there is a grails limitation in 1.x that you can only have 1 custom constraint per field. If you need multiple, you have to make a new custom constraint that encompasses the others. I know, annoying. Not sure if 2.0 addresses this or not.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316539391.6191";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316550466.9791";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>621</wp:comment_id>
			<wp:comment_author><![CDATA[Zoran F.]]></wp:comment_author>
			<wp:comment_author_email>zoka@gmx.at</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.47.138.99</wp:comment_author_IP>
			<wp:comment_date>2011-09-15 11:09:33</wp:comment_date>
			<wp:comment_date_gmt>2011-09-15 09:09:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Erik!
Thank you for this cool approach. I tried your approach, but having a problem when I want do have more than one custom constraint on a field:
static constraints = {     
  name(SharedConstraints.checkA, SharedConstraints.checkB)   
} 

As I'm pretty new to grails I don't if this is possible?

Anyway, do you still use this approach or you switched to contraints plugin?

Thank you very much!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>64</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316085333.9425";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316077773.5956";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Live Blog: Groovy Android programming </title>
		<link>http://www.jworks.nl/2011/07/26/live-blog-groovy-android-programming/</link>
		<pubDate>Tue, 26 Jul 2011 18:38:14 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[This blogpost will keep track of our current progress on our effort to make Groovy run on Android phones. Instead of creating a summary like in the previous 'This Week in Discobot' posts, we will update this blogpost every half an hour!

<strong>Erik (20:36): </strong>after a nice dinner, we make a small plan for the evening. Marcin will work on committing and pushing the Gradle Android plugin into our Github fork, while my plan will be to continue to build a small Android application which will run the entire Groovy testset on Android, to assure our code works as we expect it to work.

<strong>Marcin (21:39): </strong>Erik created a small test program which successfully runs the Groovy unit testcases using the AllTestSuite. Next plan is to extend that so it also works on the Jar, so classpath scanning needs to be implemented.  I the meantime, I worked on the way that intermediate files are organized in the Gradle Android Plugin and I added a test to verify signing the APK with the Android debug key works.

<strong>Erik (22:14): </strong>Investigating <a title="Reflections" href="http://code.google.com/p/reflections" target="_blank">Reflections</a> to use as a classpath scanner in Groovy

<strong>Erik (23:19):</strong> One hour later, still little success with the classpath scanning. Some testfiles aroud found, some aren't, and doing a 'reflections.getSubTypesOf(GroovyTestCase.class)' currently returns an empty list. Not what I expected.

<strong>Marcin (23:37): </strong>I'm done with all the changes I wanted to do on the Gradle Android plugin. Now I'm writing the first integration test for the Gradle Discobot plugin. As I've never done this before for a Gradle plugin I'm using integration tests from the Gradle Android plugin as an example on how to do it.

[nggallery id=3]

<strong>Erik (0:58): </strong>After hacking around with the reflections project with Marcin, it's time to call it a night. We got the classpath scanning to work now, but with a little bit more troubles than expected. Wrote an email to the authors of Reflections to ask them if they can explain some of the choices they made.

Good night everyone, and thanks for reading!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2011-07-26 18:38:14</wp:post_date>
		<wp:post_date_gmt>2011-07-26 18:38:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-blog-groovy-android-programming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="discobot"><![CDATA[discobot]]></category>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="live-blog"><![CDATA[live blog]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>Hide SexyBookmarks</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423472168]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:17:"88.37862286873256";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:17:"72.36774263694149";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"38.93293746675644";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"359";s:5:"score";s:17:"28.75759869913393";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"28.11632958574769";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"27.06687252766151";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Groovy MetaClass Magic in Unit Tests</title>
		<link>http://www.jworks.nl/2011/08/01/groovy-metaclass-magic-in-unit-tests/</link>
		<pubDate>Mon, 01 Aug 2011 09:36:55 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[As you may or may not know, Groovy has the concept of <a href="http://groovy.codehaus.org/JN3525-MetaClasses">MetaClasses</a>. MetaClasses enable you to add or change methods at runtime. This is especially handy when doing some mocking during a unit test (or, in our case, GrailsUnitTestCases). By mocking methods, you can mock out certain dependencies or behavior which you might not want during a unit test. An example:

<pre class="brush: groovy">
class PersonAdapter {
   SoapService service

   List<Person> getPersons(int age) {
        if(age > 18) {
            return service.complexOperation()
        } else {
            throw new UnderAgeException("Must be older than 18")
        }
   }
}
</pre>

In this case, if you want to test the logic of the PersonAdapter without using the complex operations in the service, on way to test this by using some MetaClass magic, as can be seen below:

<pre class="brush: groovy">
testGetPersons() {
  boolean complexOperationCalled = false
  SoapService.metaClass.complexOperation = { complexOperationCalled = true }  
  def soapService = new SoapService()
  def personAdapter = new PersonAdapter()

  personAdapter.getPersons(20)

  assert complexOperationCalled
}
</pre>

While this might be not be the optimal example or test (you might consider using <a href="http://www.grails.org/doc/latest/guide/9.%20Testing.html#9.1 Unit Testing" title="Unit testing">Mocks</a> instead), there's a flaw in this test. Since the complexOperation is now metaClassed on the class level, instead of on the object, it means that future tests will also be affected, including Integration tests. This might lead to some very unexpected behaviors, which are sometimes hard to track down. 

There are two ways to 'fix' this:
<ol>
  <li>Always call the super.tearDown() in tests. This will reset the Groovy meta registry to it's normal state. However, you need to explicitly call 'registerMetaClass' in tests to allow Grails to clean this up. If you forget this, you're metaClass change can affect other tests too. To prevent that, we have option 2.</li>
  <li>Use the MetaClassMixin.</li>
</ol>

The MetaClassMixin is a simple class we use in our project to automatically register metaClasses in the GroovySystem's MetaClassRegistery. Since we are using only the MetaClassMixin to do metaclass magic instead of doing it directly on classes, we can never forget to register the class anymore. This has saved us in many cases. An example usage can be seen below:

<pre class="brush: groovy: highlight: [1,5]">
@Mixin(MetaClassMixin)
class MyTest extends GrailsUnitTestCase {
  void testGetPersonsUsingMetaClassMixin() {
    boolean complexOperationCalled = false
    metaClassFor(SoapService).complexOperation = { complexOperationCalled = true }  
    def soapService = new SoapService()
    def personAdapter = new PersonAdapter()

    personAdapter.getPersons(20)

    assert complexOperationCalled
  }
}
</pre>

Using the MetaClassMixin, you no long have to worry about registering your MetaClassed classes, or, more importantly <i>forgetting</i> to register them! Below, you can find the source of the MetaClassMixin (this mixin has been written by Levi Hoogenberg, so credits for that!). Feedback on this welcome of course!

<pre class="brush: groovy">
import grails.test.GrailsUnitTestCase

@Category(GrailsUnitTestCase)
class MetaClassMixin {
    Delegate metaClassFor(Class clazz) {
        registerMetaClass(clazz)

        new Delegate(target: clazz.metaClass)
    }

    Delegate staticMetaClassFor(Class clazz) {
        registerMetaClass(clazz)

        new Delegate(target: clazz.metaClass.'static')
    }

    private static class Delegate {
        Object target

        @Override
        void setProperty(String property, Object newValue) {
            target.setProperty(property, newValue)
        }
    }
}
</pre>

Happy metaClassing! 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2011-08-01 09:36:55</wp:post_date>
		<wp:post_date_gmt>2011-08-01 09:36:55</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>groovy-metaclass-magic-in-unit-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="metaclass"><![CDATA[metaclass]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="unit"><![CDATA[unit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422985131]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"102.92552132402176";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:17:"54.78858027521298";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:17:"54.78858027521298";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:17:"48.47451812877042";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:17:"47.72758386015025";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:16:"37.6713843584388";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Brian Doyle]]></wp:comment_author>
			<wp:comment_author_email>brianpdoyle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.164.254.184</wp:comment_author_IP>
			<wp:comment_date>2011-08-04 21:15:15</wp:comment_date>
			<wp:comment_date_gmt>2011-08-04 19:15:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is MetaClassMixin something part of Groovy or Grails or do I need to add that into my codebase?  Thanks and really good stuff!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312493055.0765";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312485315.2466";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>234</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; Esta semana en Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=857</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-14 21:15:59</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 19:15:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Magia con Groovy MetaClass en Unit Tests [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313351461.1506";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313349359.7492";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>235</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=850</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-14 21:17:07</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 19:17:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Groovy MetaClass Magic in Unit Tests [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313351451.8801";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313349427.3444";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[Amit Jain]]></wp:comment_author>
			<wp:comment_author_email>amit@intelligrape.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.119.247.83</wp:comment_author_IP>
			<wp:comment_date>2011-08-02 09:29:32</wp:comment_date>
			<wp:comment_date_gmt>2011-08-02 07:29:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! This would simplify writing unit test cases now.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312270172.663";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312270613.129";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-02 09:37:45</wp:comment_date>
			<wp:comment_date_gmt>2011-08-02 07:37:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Amit, I'm glad you find the post useful!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>69</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312270665.9572";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.73.39.77</wp:comment_author_IP>
			<wp:comment_date>2011-08-04 23:26:01</wp:comment_date>
			<wp:comment_date_gmt>2011-08-04 21:26:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian, thanks for the reply. MetaClassMixin is something not included in Groovy or Grails, but you can just copy the above class into your project to be able to use it. If you run into problems, just let me know.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>102</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312493161.7942";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1319</wp:comment_id>
			<wp:comment_author><![CDATA[Fanguang Meng]]></wp:comment_author>
			<wp:comment_author_email>fmeng@theideacenter.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl/2011/08/01/groovy-metaclass-magic-in-unit-tests/</wp:comment_author_url>
			<wp:comment_author_IP>184.180.160.134</wp:comment_author_IP>
			<wp:comment_date>2013-07-15 19:43:04</wp:comment_date>
			<wp:comment_date_gmt>2013-07-15 17:43:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, Erik:

Thanks very much for posting the website.

1. I created MetaClassMixin class and copied and paste the code
2. Then in my integration test, I tried to use metaClassFor, I added @Mixin(MetaClassMixin) before class.

metaClassFor(MockReportCompleteDataStore).getSurveys = {appID, filter, maxResults, start-&gt;
      return getSurveys(appID, filter, maxResults, start)
    }

Do you have any idea?

Thanks very much.

Fanguang
I got the following error:
 groovy.lang.MissingMethodException: No signature of method: static idea.rest.server.tests.SurveyControllerIntegrationTest.metaClassFor() is applicable for argument types: (java.lang.Class) values: [class idea.store.MockReportCompleteDataStore]
Possible solutions: metaClassFor(java.lang.Class), metaClass(groovy.lang.Closure)
	at idea.rest.server.tests.SurveyControllerIntegrationTest.setUpClass(SurveyControllerIntegrationTest.groovy:40)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373916397.0935680866241455078125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373910184.0790119171142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1320</wp:comment_id>
			<wp:comment_author><![CDATA[Fanguang Meng]]></wp:comment_author>
			<wp:comment_author_email>fmeng@theideacenter.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl/2011/08/01/groovy-metaclass-magic-in-unit-tests/</wp:comment_author_url>
			<wp:comment_author_IP>184.180.160.134</wp:comment_author_IP>
			<wp:comment_date>2013-07-15 19:50:13</wp:comment_date>
			<wp:comment_date_gmt>2013-07-15 17:50:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the problem was I put the code in @BeforeClass setUpClass() method, after I put into @Before setup() method, the error message was gone.

I tried put static before definition of metaClassFor() in MetaClassMixin, it didn't work either.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1319</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373916403.6411149501800537109375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373910613.9419391155242919921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Testing Grails controller actions that use bindData method and render validation errors as JSON</title>
		<link>http://www.jworks.nl/2011/08/03/testing-grails-controllers/</link>
		<pubDate>Wed, 03 Aug 2011 06:00:17 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[Let's assume that we have a controller action in a grails application that updates a user domain instance. We want name and surname to be updateable but login and password shouldn't be updateble. To achieve that we will use the controller's bindData() method with whitelisting. The action will be called using ajax so we also want to render JSON with validation errors in response if there were any. So our controller might look like that:

<pre class="brush:groovy">package nl.jworks

import grails.converters.JSON

class UserController {

    def update = {
        User user = User.get(params.id)

        bindData(user, params, [include: ['name', 'surname']])
        if (user.validate()) {
            user.save()
        } else {
            render user.errors as JSON
        }
    }
}</pre>

And the example User class might look like that:

<pre class="brush:groovy">package nl.jworks

class User {
    String login
    String password
    String name
    String surname

    static constraints = {
        login blank: false
        password blank: false
        name blank: false
        surname blank: false
    }
}</pre>

Our next step will be unit testing the action. We want to make sure that only the whitelisted fields are copied from parameters (testUpdate) and also that the validation errors are rendered (testUpdateValidationError):

<pre class="brush:groovy">package nl.jworks

import grails.test.ControllerUnitTestCase
import grails.converters.JSON

class UserControllerTests extends ControllerUnitTestCase {
    User user

    protected void setUp() {
        super.setUp()
        user = new User(login: 'login', password: 'pass', name: 'name', surname: 'surname')
        mockDomain(User, [user])
    }

    void testUpdate() {
        controller.params.id = user.id
        controller.params.login = 'new login'
        controller.params.password = 'new password'
        controller.params.name = 'new name'
        controller.params.surname = 'new surname'

        controller.update()
        user.with {
            assert login == 'login'
            assert password == 'pass'
            assert name == 'new name'
            assert surname == 'new surname'
        }
    }

    void testUpdateValidationError() {
        controller.params.id = user.id
        controller.params.name = ''

        controller.update()
        def response = JSON.parse(controller.response.contentAsString)
        response.errors.with {
            assert size() == 1 && first().field == 'name'
        }
    }
}</pre>

It turns out that those tests won't pass. But not because of the fact that we have bugs in the code, it's just that grails doesn't do enough magic for our controller action to be unit testable out of the box. 

First problem is that the bindData() method is not mocked in ControllerUnitTestCase. Fortunately thanks to <a href="http://stackoverflow.com/questions/5351704/testing-grails-data-binding/6187579#6187579" target="_blank">this stackoverflow response</a> we know how to easily mock it. To make it reusable let's create a mixin out of it:

<pre class="brush:groovy">package nl.jworks.mixin

import grails.test.ControllerUnitTestCase
import org.codehaus.groovy.grails.web.metaclass.BindDynamicMethod

@Category(ControllerUnitTestCase)
class MockBindDataMixin {
    void mockBindData() {
        def mc = controller.metaClass
        def bind = new BindDynamicMethod()
        mc.bindData = { Object target, Object args ->
            bind.invoke(controller, "bindData", [target, args] as Object[])
        }
        mc.bindData = { Object target, Object args, List disallowed ->
            bind.invoke(controller, "bindData", [target, args, [exclude: disallowed]] as Object[])
        }
        mc.bindData = { Object target, Object args, List disallowed, String filter ->
            bind.invoke(controller, "bindData", [target, args, [exclude: disallowed], filter] as Object[])
        }
        mc.bindData = { Object target, Object args, Map includeExclude ->
            bind.invoke(controller, "bindData", [target, args, includeExclude] as Object[])
        }
        mc.bindData = { Object target, Object args, Map includeExclude, String filter ->
            bind.invoke(controller, "bindData", [target, args, includeExclude, filter] as Object[])
        }
        mc.bindData = { Object target, Object args, String filter ->
            bind.invoke(controller, "bindData", [target, args, filter] as Object[])
        }
    }
}</pre>

Now all that we have to do to make it work is to apply it on our test class and call the mockBindData() method in the setUp() method.

Second problem is that by default the JSON converter doesn't know how to convert bean validation errors. But that's easily fixable as well - all we have to do is register validation error marshaller in the testUpdateValidationError test:

<pre class="brush:groovy">JSON.registerObjectMarshaller(new ValidationErrorsMarshaller())</pre>

After the aforementioned changes our passing test class should look like that:

<pre class="brush:groovy">package nl.jworks

import grails.test.ControllerUnitTestCase
import nl.jworks.mixin.MockBindDataMixin
import grails.converters.JSON
import org.codehaus.groovy.grails.web.converters.marshaller.json.ValidationErrorsMarshaller

@Mixin(MockBindDataMixin)
class UserControllerTests extends ControllerUnitTestCase {
    User user

    protected void setUp() {
        super.setUp()
        user = new User(login: 'login', password: 'pass', name: 'name', surname: 'surname')
        mockDomain(User, [user])
        mockBindData()
    }

    void testUpdate() {
        controller.params.id = user.id
        controller.params.login = 'new login'
        controller.params.password = 'new password'
        controller.params.name = 'new name'
        controller.params.surname = 'new surname'

        controller.update()
        user.with {
            assert login == 'login'
            assert password == 'pass'
            assert name == 'new name'
            assert surname == 'new surname'
        }
    }

    void testUpdateValidationError() {
        JSON.registerObjectMarshaller(new ValidationErrorsMarshaller())
        controller.params.id = user.id
        controller.params.name = ''

        controller.update()
        def response = JSON.parse(controller.response.contentAsString)
        response.errors.with {
            assert size() == 1 && first().field == 'name'
        }
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2011-08-03 08:00:17</wp:post_date>
		<wp:post_date_gmt>2011-08-03 06:00:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-grails-controllers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="binddata"><![CDATA[bindData]]></category>
		<category domain="post_tag" nicename="controller"><![CDATA[controller]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="validation"><![CDATA[validation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[testing-grails-controller-actions-that-use-binddata-method-and-render-validation-errors-as-json]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422858612]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:17:"74.38082364355651";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:18:"57.732918108639005";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"55.61644238569677";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:17:"46.14412784106385";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:17:"42.62331129149974";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"275";s:5:"score";s:18:"42.382509339299304";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=850</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-07 19:44:03</wp:comment_date>
			<wp:comment_date_gmt>2011-08-07 17:44:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Testing grails controller actions that use bindData method and render validation errors as JSON [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312739276.2026";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312739043.1558";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>233</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; Esta semana en Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=857</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-14 20:07:24</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 18:07:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Probando acciones de controladotes grails que usan métodos bindData y renderizan errores de validac... [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313347510.7954";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313345244.1074";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>378</wp:comment_id>
			<wp:comment_author><![CDATA[Søren Berg Glasius]]></wp:comment_author>
			<wp:comment_author_email>soeren@glasius.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.156.127.76</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 15:47:22</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 13:47:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Marcin,

That is a very cool tip! And if you replace @Category(ControllerUnitTestCase) with @Category(ControllerSpec) you can use in your Spock tests.

Best regards,
Søren Berg Glasius]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314020842.8278";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1314021058.419";s:7:"message";s:45:"marcin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"marcin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>379</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Erdmann]]></wp:comment_author>
			<wp:comment_author_email>marcin.erdmann@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 15:54:13</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 13:54:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to read that you find the blog post useful!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>378</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314021253.3025";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"marcin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>A year of Grails development</title>
		<link>http://www.jworks.nl/?p=288</link>
		<pubDate>Mon, 05 Sep 2011 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=288</guid>
		<description></description>
		<content:encoded><![CDATA[Approximately, I was contacted for doing a code and project audit, and subsequently took over the project, to turn the project into production ready code.

- rewrite
- mess...
- challenges
- learning experiences
- atlassian]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2011-09-05 10:00:00</wp:post_date>
		<wp:post_date_gmt>2011-09-05 08:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
				<title>DTO Stuff in Grails</title>
		<link>http://www.jworks.nl/?p=336</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[Hello,
  I have this very simple query, used to create a report:

def hql = "select count(*) as quantity, res.address from Reservation res
group by res.address"

  I also have this very simple DTO:

class MyDTO {
  int quantity
  String address
}


Is there a way to make Reservation.executeQuery(hql) return results binding
to my DTO, like a Hibernate result transformer?

Thanks

------------------

I don't know about HQL but with Criteria API this is quite simple. You just have to set an alias that corresponds to the property name in your dto.

Something similar to the following should do:

Reservation.withCriteria {
 projections {
   property 'id', 'id'
   property 'quantity', 'quantity'
   property 'address', 'address'
   groupProperty 'address'
 }
 resultTransformer org.hibernate.transform.Transformers.aliasToBean(MyDTO.class)
}

or as named query:

static namedQueries = {
 summary {
   projections {
     property 'id', 'id'
     property 'quantity', 'quantity'
     property 'address', 'address'
     groupProperty 'address'
   }
   resultTransformer org.hibernate.transform.Transformers.aliasToBean(MyDTO.class)
 }
}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2011-09-22 15:33:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Groovy and Grails training</title>
		<link>http://www.jworks.nl/groovy-and-grails-training/</link>
		<pubDate>Tue, 15 Nov 2011 19:45:55 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?page_id=370</guid>
		<description></description>
		<content:encoded><![CDATA[Groovy is an object-oriented programming language for the Java platform. It is a dynamic language with features similar to those of Python, Ruby, Perl, and Smalltalk. It can be used as a scripting language for the Java Platform. Groovy uses a Java-like bracket syntax. It is dynamically compiled to Java Virtual Machine (JVM) bytecode and interoperates with other Java code and libraries. More importantly: Groovy is getting more and more popular, with Grails being one of the strong frameworks building on the functionality Groovy provides.

If you want to learn Groovy and Grails, we are the perfect partner in that. We offer customized training packages depending on your need, covering:
<ul>
  <li>Basic and advanced Groovy programming</li>
  <li>Basic and advanced usage of the Grails framework</li>
  <li>Trainers working in Groovy and Grails projects on a daily basis</li>
  <li>Best practices based on more than 4 years of experience with Grails</li>
</ul>

If you are a Java programmer and you want to hop on the Groovy and Grails train, then this is the course for you. If you just started programming and you want to learn a language which helps you deliver quickly, we can help you in that! 

<b>Details</b>

<table>
  <tr><td style="background-color: #ddd">When</td><td>No dates yet</td></tr>
  <tr><td style="background-color: #ddd">Where</td><td>Anywhere in the world</td></tr>
  <tr><td style="background-color: #ddd">Costs</td><td>See below</td></tr>
</table><br />

<b>Prices</b>: Minimum of &euro; 700,- per attendee per day (excluding VAT), depending on location, number of attendees, etc. 

If you are interested, <a href="http://www.jworks.nl/contact/" title="Contact us">contact us</a> and we'll get back to you as soon as possible.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2011-11-15 20:45:55</wp:post_date>
		<wp:post_date_gmt>2011-11-15 19:45:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>groovy-and-grails-training</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Discobot</title>
		<link>http://www.jworks.nl/discobot/</link>
		<pubDate>Fri, 02 Dec 2011 20:37:06 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?page_id=387</guid>
		<description></description>
		<content:encoded><![CDATA[Welcome to the discobot project page. Discobot is the implementation of running Groovy on Android. 

Check out the source here:
<a href="https://github.com/disco-bot" title="https://github.com/disco-bot" target="_blank">https://github.com/disco-bot</a>

Check out our blogs here:
<a href="http://www.jworks.nl/category/discobot-2/" title="http://www.jworks.nl/category/discobot-2/">http://www.jworks.nl/category/discobot-2/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2011-12-02 21:37:06</wp:post_date>
		<wp:post_date_gmt>2011-12-02 20:37:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>discobot</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Showing output in Grails 2.0 scripts</title>
		<link>http://www.jworks.nl/?p=412</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[Grails 2.0 scripts are much less verbose than Grails 1.3.x scripts. However, sometimes it's handy to see some of the information hidden by the Grails scripts. You can use the following 4 switches for that:

<ul>
   <li>--stacktrace</li>
   <li>-verbose</li>
   <li>-verboseCompile</li>
   <li>-plain-output</li>
</ul>

<b>--stacktrace</b>
--stacktrace should be used whenever a script shows an error, but the, sometimes helpful, stacktrace is hidden. Using this option should give you more insights in what went wrong.

<b>-verbose</b>


 and "grails test-app --stacktrace", but they don't generate any more logs. 

There is also a general -verbose option and -plain-output for more]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2012-04-13 15:51:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Getting started with RabbitMQ and Maven on MacOS</title>
		<link>http://www.jworks.nl/?p=443</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=443</guid>
		<description></description>
		<content:encoded><![CDATA[So, you want to get started with RabbitMQ in a Maven project as soon as possible? Well, bear with me here, and we'll get you up and running in no time!

First things first: you need to install RabbitMQ. You can do this by using <a href="http://www.macports.org" target="_blank">MacPorts</a>:
<code>sudo port install rabbitmq-server</code>

After RabbitMQ has been installed and is running, it's time to create the project. Using the following Maven POM and standard Maven structure, we create our project:

&nbsp;
<pre>&lt;djdkjdk&gt;
   &lt;dkldkd&gt;
&lt;dkdlkd&gt;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2012-08-06 20:43:04</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="macos"><![CDATA[macos]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="rabbitmq"><![CDATA[rabbitmq]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>24 Hours with Python - Part I</title>
		<link>http://www.jworks.nl/?p=607</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=607</guid>
		<description></description>
		<content:encoded><![CDATA[Some time ago, I bought a <a href="http://www.leapmotion.com">Leapmotion </a>and a <a href="https://www.meethue.com/">Philips Hue</a> to play around with, and instead of doing this using Java or Groovy, my normal programming languages, I decided to program a small application for it using Python, and use Python to connect the two devices together. Also, some of the software should run on the Raspberry Pi (at the moment, there is no Raspberri Pi driver for the Leapmotion, and I doubt the Leapmotion will ever get the driver). The only issue is: I've never programmed in Python.

So, as a challenge, without reading any books, tutorials, or any resources at all, I got out Python, and started writing software. In this blogpost I'm writing my experiences with Python written from someone who has 12+ years of Java experience, 5+ years of Groovy experience, and, like stated before, 0 Python experience ;-)

<strong>0-3 hours</strong>: In my first hours, I decided to setup a simple Hello World application which would turn on and off my Philips Hue lights, so I'd have a clear goal, and in the process get things up and running. The Philips Hue has a very nice JSON HTTP API, and to test I understood the API correctly, I wrote some shell scripts with CURL in it. The idea was to transform those scripts into Python, and, well, that's basically it. 
So I setup my <a href="https://github.com/bodiam/hueton">github project</a>, did a clone, and got started. The first thing which came to mind is: what is a standard directory structure for Python. How do I separate my tests from my production code, should I use packages/namespaces, etc. I decided to drop these thoughts, and focus on the goal: turn the lights on. So I created a directory named <code>helloworld </code>with a <code>src </code>directory in it, and created two shell scripts to turn on/off the lights. When I got these working, I focussed on Python. 

The first thing to wonder was: how to do a HTTP call in Python. There are more ways to Rome, and my first hit was <a href="http://docs.python.org/2/library/httplib.html">httplib</a>. However, that hit was from 2008, and since then, things have changed. I resorted to the '<a href="http://docs.python-requests.org/en/latest/">requests</a>' package instead, which supports PUT and DELETE commands through a nice API, which I'll need for managing the Hue Lights.
Installing 'requests' was 'interesting', at least, and I'll get back to that later. What I did now was first install easy_install, which is a package manager, and then I used easy_install to install pip, which is a package manager [insert 5 second silence here]. Yes right. Okay. Hmm.. Time for a cup of tea.


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>607</wp:post_id>
		<wp:post_date>2013-08-06 13:17:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Microbenchmarks using Timer</title>
		<link>http://www.jworks.nl/?p=649</link>
		<pubDate>Tue, 03 Dec 2013 22:55:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=649</guid>
		<description></description>
		<content:encoded><![CDATA[Doing microbenchmarks in most languages is often a tricky business. Many languages, especially JVM based, support a JIT compiler which optimise the runtime path of code during execution. The default implementation of Python, CPython, doesn't have a JIT compiler which makes microbenchmarks reflect the actual code performance a bit better. 

Python tries so make running micro benchmarks a bit easier by providing the <code>timeit</code> module. This module can be used in two ways: as a Command-Line Interface as well as a callable one.

$ python -m timeit '"spam".join(str(n) for n in range(100))'
10000 loops, best of 3: 40.3 usec per loop
$ python -m timeit '"spam".join([str(n) for n in range(100)])'
10000 loops, best of 3: 33.4 usec per loop
$ python -m timeit '"spam".join(map(str, range(100)))'
10000 loops, best of 3: 25.2 usec per loop

or:

>>> from timeit import Timer
>>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()
0.60864915603680925
>>> Timer('a,b = b,a', 'a=1; b=2').timeit()
0.8625194857439773

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>649</wp:post_id>
		<wp:post_date>2013-12-03 23:55:00</wp:post_date>
		<wp:post_date_gmt>2013-12-03 22:55:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="micro-benchmarks"><![CDATA[micro benchmarks]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Inspecting objects [DONT PUBLISH YET]</title>
		<link>http://www.jworks.nl/?p=659</link>
		<pubDate>Wed, 27 Nov 2013 16:45:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=659</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes, whenever you're debugging and you don't have an IDE at hand, or you'd just like to inspect some objects, you can use the <code>vars</code> function or the __dict__ method, which is actually the method called by the <code>vars</code> function. To use it, lets create an object and show it's interals.

<pre class="brush: python">
class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

person = Person('erik', 33)

assert {'name': 'erik', 'age': 33} == vars(person)
</pre>

As you can see here, calling the vars will return a dict which contains the Person object printed in a readable way.

If you also want to format the output in an even more readable way, you can use the pretty print function:

<pre class="brush: python">
from pprint import pprint

class Person:
  def __init__(self, name, age, address = None):
    self.name = name
    self.age = age
    self.address = address

class Address:
   def __init__(self, street, house_number):
     self.street = street
     self.house_number = house_number


address = Address('mainstreet', 100)
person = Person('erik', 33, address)

pprint( vars(person))
pprint( vars(address))
</pre>

Which will produce the following:

<pre>
{'address': <__main__.Address object at 0x7f820ffcc350>,
 'age': 33,
 'name': 'erik'}
{'house_number': 100, 'street': 'mainstreet'}
</pre>

TODO: investigate how to show nested objects!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>659</wp:post_id>
		<wp:post_date>2013-11-27 17:45:00</wp:post_date>
		<wp:post_date_gmt>2013-11-27 16:45:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Displaying all Python keywords</title>
		<link>http://www.jworks.nl/?p=661</link>
		<pubDate>Mon, 09 Dec 2013 08:13:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=661</guid>
		<description></description>
		<content:encoded><![CDATA[To display all Python 3 keywords, we can use the following code:

<pre class="brush: python">
import sys
import keyword

print( "Python version: ", sys.version_info)
print( "Python keywords: ", keyword.kwlist)
</pre>

This will print the following, based on Python 3.3.2:
<pre>
Python version:  sys.version_info(major=3, minor=3, micro=2, releaselevel='final', serial=0)
Python keywords:  ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
</pre>

And if you want to make this a bit more readable by making a vertical list out of this, we can easily do so by joining the list:

<pre class="brush: python">
print ( "\n".join(keyword.kwlist) )
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date>2013-12-09 09:13:00</wp:post_date>
		<wp:post_date_gmt>2013-12-09 08:13:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-keyword"><![CDATA[python keyword]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: String expansions</title>
		<link>http://www.jworks.nl/?p=664</link>
		<pubDate>Mon, 25 Nov 2013 08:40:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=664</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- source: http://stackoverflow.com/questions/4840580/how-do-i-use-python-to-easily-expand-variables-to-strings -->
Sometimes you'll want to format some Strings, and adding the Strings together using +, especially when there are a lot, can result in very unreadable code. Luckily, Python provides some very handy alternatives, which make your code a lot more 'Pythonic'.

<pre class="brush:python">
who = "you"
name = "Dennis"
assert 'Well you could say "Dennis"' == 'Well {who} could say "{name}"'.format(**locals())
</pre>

The <code>locals()</code> method gives a reference to the current namespace as a dictionary, and using the <code>**</code> the dictionary is unpacked into keyword arguments. Then, using the format, the words surrounded by {} are replaced in the String, and the output is compared to our asserted value.

Alternatively, you could use a string.Template:

<pre class="brush:python">
from string import Template
t = Template('Well {who} could say "{name}"')
result = t.substitute(who="you", name="Dennis")
assert 'Well you could say "Dennis"' == result
</pre>

Or, when the String doesn't have many substitution variables, this will work too:
<pre class="brush:python">
print('Well', who, 'could say "',name,'"')
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>664</wp:post_id>
		<wp:post_date>2013-11-25 09:40:00</wp:post_date>
		<wp:post_date_gmt>2013-11-25 08:40:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="string-expansion"><![CDATA[string expansion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: The yield keyword explained</title>
		<link>http://www.jworks.nl/?p=689</link>
		<pubDate>Thu, 05 Dec 2013 15:05:40 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=689</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained">http://stackoverflow.com/questions/231767/the-python-yield-keyword-explained</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>689</wp:post_id>
		<wp:post_date>2013-12-05 16:05:40</wp:post_date>
		<wp:post_date_gmt>2013-12-05 15:05:40</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pure"><![CDATA[pure]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="yield"><![CDATA[yield]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>How not to add a non-empty item to a list in Groovy</title>
		<link>http://www.jworks.nl/2011/08/08/how-not-to-add-a-non-empty-item-to-a-list/</link>
		<pubDate>Mon, 08 Aug 2011 07:36:56 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[In our code, a colleague (<a href="http://twitter.com/alard42" title="Follow Alard on Twitter" target="_blank">Alard</a>), found the following piece of code in our Grails codebase:

<pre class="brush: groovy">
def list = []
def item = null
list << item ?: ''
println list
</pre>
I think the intention of this code is clear (in case of 'false' items, add a empty String'), but the outcome was surprising. Take 5 seconds and guess the output of line 4, then read on.

As you might have guessed, the outcome isn't a list with an empty String (which is displayed as a empty list, but that's a different story). The outcome of the above is:
<code>
[null]
</code>

That is because the Groovy << operator has precedence over the ?: operator. In code, it's as if the following had been written: 
<pre class="brush: groovy">
list.add(item) ?: ''
</pre>

Which makes it obvious: the item is always added to the list, and the empty String is ignored. Fixing this is easy: just add some clarifying braces:
<pre class="brush: groovy">
list << (item ?: '')
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2011-08-08 09:36:56</wp:post_date>
		<wp:post_date_gmt>2011-08-08 07:36:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-not-to-add-a-non-empty-item-to-a-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="tips"><![CDATA[tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422917675]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:18:"32.151371507665836";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"30.876216848450163";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:18:"30.564910229026577";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:17:"28.35713153794813";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:17:"28.35713153794813";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:17:"28.35713153794813";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Friday Repost: Easy file uploading in Grails</title>
		<link>http://www.jworks.nl/2011/08/05/friday-repost-easy-file-uploading-in-grails/</link>
		<pubDate>Fri, 05 Aug 2011 08:00:55 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog.</i>

If you want to upload files with Grails, there are multiple ways of doing so. However, there's at least one way which makes it really easy do so, while keeping the code as clean as possbile. This blog describes the steps to take to get the file upload to work, while maintaining a very clean codebase.

To get started, first create a new Grails application by running the following command:

<blockquote>
grails create-app imageupload
</blockquote>

After you have created your application, create a new file called 'UploadImageCommand.groovy' in the src/groovy/com/example/command directory


The UploadImageCommand.groovy should look like this:

<pre class="brush: java">
package com.example.command

import org.springframework.web.multipart.MultipartFile

/**
 * @author Erik Pragt
 */
final class UploadImageCommand  {
    MultipartFile contents

    static constraints = {
    }
}
</pre>

Using commands for all changes in the system is usually a good thing. This prevents any malicious code from entering the system, and also describes the
intent of the system by using sensible naming for the commands, in this case 'Upload Image'.

Now we need two more things: the persistent object (the Domain Object) and the Controller. Actually, I would recommend using a Service for all state changes
of the system, because of the transactional support in services and for providing a uniform way of state changes. However, that's beyond the scope of this blog, so we'll
leave it for later and focus on the image uploading for now!

<h3>The domain class</h3>

To create the domain class, typing in the following:

<blockquote>
grails create-domain-class com.example.domain.Image
</blockquote>

This creates an Image.groovy file in the grails-app/domain folder. Open the file, and type in the following contents:

<pre class="brush: groovy">
package com.example.domain

class Image {
   byte[] bytes
}
</pre>

Also, create a controller:

<blockquote>
grails create-controller com.example.controller.Image
</blockquote>

This creates an ImageController.groovy file in the grails-app/controllers folder. Open the file, and type in the following contents:

<pre class="brush: groovy">
package com.example.controller

import com.example.domain.*
import com.example.command.*

class ImageController {
   def upload = { UploadImageCommand command ->
      // validation ommited...
      def image = new Image(bytes:command.contents.bytes)

      image.save()

      println "Currently ${Image.count()} images loaded"
   }
}
</pre>

Now, all you need is a simple form which will upload your image (or actually any kind of document). The easiest way to do this is create a new file called
upload.gsp and place it in the web-app directory . Make the file look like this:

<pre class="brush: groovy">

&lt;html>
&lt;body>
<g:uploadForm controller="image" action="upload" name="myUpload">
    <input name="contents" type="file">
    <input type="submit" />
</g:uploadForm>

&lt;/body>
&lt;/html>
</pre>

Now, type 

<blockquote>
grails run-app
</blockquote>

And browse to <a href="http://localhost:8080/imageupload/upload.gsp">http://localhost:8080/imageupload/upload.gsp</a>. When you upload a file there, you will see the counter increase in the log file. Clean, fast and easy!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2011-08-05 10:00:55</wp:post_date>
		<wp:post_date_gmt>2011-08-05 08:00:55</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-easy-file-uploading-in-grails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="file-upload"><![CDATA[file upload]]></category>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422771877]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"68.39233795122524";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"62.17005370077129";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:17:"59.36476670290683";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:17:"59.36476670290683";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"55.36180670248658";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:17:"44.75622132352656";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=850</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-07 19:43:48</wp:comment_date>
			<wp:comment_date_gmt>2011-08-07 17:43:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Easy file uploading in Grails [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312739252.5946";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312739028.2183";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; Esta semana en Grails (2011-31)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=857</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-14 20:07:09</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 18:07:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Subida fácil con Grails [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1313347482.945";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313345229.9644";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>903</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email>mlyubkin@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.11.149.5</wp:comment_author_IP>
			<wp:comment_date>2012-09-12 21:02:31</wp:comment_date>
			<wp:comment_date_gmt>2012-09-12 19:02:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I wonder, why have you defined <b>static constraints = { }</b> in the <b>UploadImageCommand</b> class? It's not a Domain class, so it will never be mapped to a database. What am I missing?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>902</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347476551.5099";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>904</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2012-09-12 21:23:45</wp:comment_date>
			<wp:comment_date_gmt>2012-09-12 19:23:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're right. However, since it's a Command object, it can be validated, and the validation rules (the constraints) can be put in this block. Hope that helps!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>903</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1347477825.935";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>robbugh@earthlink.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.113.168.147</wp:comment_author_IP>
			<wp:comment_date>2011-08-10 21:59:56</wp:comment_date>
			<wp:comment_date_gmt>2011-08-10 19:59:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm, you are missing some setup. http://localhost:8080/imageupload take you to the default Grails scaffolding page not the upload page.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313006396.2825";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313049630.5261";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>901</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email>mlyubkin@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.11.149.5</wp:comment_author_IP>
			<wp:comment_date>2012-09-12 19:03:35</wp:comment_date>
			<wp:comment_date_gmt>2012-09-12 17:03:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, saved me a lot of time!
Thank you, Erik!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347469602.5015";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347469415.5232";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>902</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2012-09-12 19:06:59</wp:comment_date>
			<wp:comment_date_gmt>2012-09-12 17:06:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sure, glad I could help!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>901</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347469620.0104";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.24</wp:comment_author_IP>
			<wp:comment_date>2011-08-11 10:03:14</wp:comment_date>
			<wp:comment_date_gmt>2011-08-11 08:03:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Rob, thanks, I corrected the error by changing the URL to browse to. Better?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>180</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313049794.5479";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Remove Groovy MetaClass methods</title>
		<link>http://www.jworks.nl/2011/08/12/friday-repost-remove-groovy-metaclass-methods/</link>
		<pubDate>Fri, 12 Aug 2011 08:00:49 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

Whenever you are using metaclasses in Groovy or Grails unit tests, you might use Groovy's metaClass power to mock the behavior of methods. However, Grails doesn't fork the JVM for each test, so a nice side effect of this is that the mocked method will be available for the complete lifetime of the VM. Since Grails first executes unit tests (the test which usually contain the mocked code), and then followed by the integration tests, these tests can fail because you are maybe still using a mocked version of the method instead of the real one! This can often happen when mocking Grails methods, like dynamic finders, or named queries. The trick is to clean up these methods.

This is done by registering the metaClass when extending GrailsUnitTestCase. You'll have to call the registerMetaClass(clazz) method, which does the following internally:

<pre class="brush: groovy">
  /**
     * Use this method when you plan to perform some meta-programming
     * on a class. It ensures that any modifications you make will be
     * cleared at the end of the test.
     * @param clazz The class to register.
     */
    protected void registerMetaClass(Class clazz) {
        // If the class has already been registered, then there's
        // nothing to do.
        if (savedMetaClasses.containsKey(clazz)) return

        // Save the class's current meta class.
        savedMetaClasses[clazz] = clazz.metaClass

        // Create a new EMC for the class and attach it.
        def emc = new ExpandoMetaClass(clazz, true, true)
        emc.initialize()
        GroovySystem.metaClassRegistry.setMetaClass(clazz, emc)
    }
</pre>

You can use this code in your tests in the following way, for example in the UserTests.groovy:

<pre class="brush: groovy">
class UserTests extends GrailsUnitTestCase {
   @Before
   void setUp() {
      registerMetaClass User

      User.metaClass.static.findByName = { name -> return new User(name:name) }
   }

   @Test
   void someTest() {
       // some code which uses the findByName method
   }
}
</pre>

This way, the User class is registered with Grails to be cleaned up afterwards. This is done automatically in the teardown of the test, so you're sure that no custom defined methods are available after running the test.

So, beware that whenever you use Groovy's meta magic, be also sure to clean it up afterwards, since it might affect other parts of the code. You can check out my other blog post for a <a href="http://www.jworks.nl/2011/08/01/groovy-metaclass-magic-in-unit-tests/">good solution</a> to not forget the cleanup part!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2011-08-12 10:00:49</wp:post_date>
		<wp:post_date_gmt>2011-08-12 08:00:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-remove-groovy-metaclass-methods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="metaclass"><![CDATA[metaclass]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422906897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:18:"102.92552132402176";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:17:"83.20361662914407";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:16:"82.3859803735332";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"81.10227260113436";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"78.38302037311294";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:17:"68.39233795122524";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Friday Repost: Groovy Test Data Builder Pattern</title>
		<link>http://www.jworks.nl/2011/09/16/friday-repost-groovy-object-mother-pattern/</link>
		<pubDate>Fri, 16 Sep 2011 08:00:01 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

Most of us value the quality of our code highly. I do, and I expect you, as a reader, also to care for the quality of your code. Because of that, we write tests. Test which usually contain of 3 parts: the setup, the execution and the verification. And sometimes some cleanup. In this blog, I'd like to focus on the setup part, and try to get rid of some boilerplate code which can easily clutter our tests!

As I mentioned before, we  usually write some setup code which serves as input for our test. This code can look like this:

<pre class="brush: groovy">
def person = new Person(firstName:'Erik', lastName:'Pragt', age:30, married:true, hobby:"programming")
</pre>

Writing this code can be time consuming, plus the code doesn't reveal the intention of the test. What are the significant bits in this setup code? Is it the age? Is it my name? Or a combination?

To solve the creation of testdata, there are multiple patterns. On of those patterns is the Test Data Builder pattern. The idea behind the Test Data Builder pattern is that test data should be easily to construct, which is usually accomplished by chaining method calls (also called a Fluent Interface, or a Builder).

I've taken the concept to Groovy and made an TestDataBuilder Category. A Groovy Category adds functionality to your code within a limited scope (defined by the 'use' keyword). This enables the object which is used in the setup of the test to 'borrow' the method of the TestDataBuilder Groovy class, which allows it to construct itself with testdata. This is best demonstrated by the use of an example:

<pre class="brush: groovy">
use(TestDataBuilder) {
    def person = Person.build()
}
</pre>

By placing the creation of the data in the scope of the Category, the .build() method becomes available in for the Person class. Calling the build method will instantiate the Person class and populate all the fields with values which all equal true. So numbers will become 1, booleans true, Strings will get the name of the variable as a value, etc.

To use this in tests, and make the code more intention revealing, we can choose to populate some fields with our own values, and have the rest be generated.

<pre class="brush: groovy">
use(TestDataBuilder) {
    def person = Person.build(name:'Erik')

    assert person.name == "Erik"
    assert age == 1
    assert married == true
}
</pre>

The benefits of this is that you save a lot of setup code, and make the code a lot more clear and maintainable. If you want to use this, the code can be found on <a href="http://github.com/bodiam/objectmother/blob/master/src/nl/jworks/util/objectmother/ObjectMother.groovy">GitHub.com</a>. (This class was previously called the ObjectMother, an error on my side. The change in name isn't reflected yet in GitHub). Yes, there are some limitations, like it doesn't handly all standard datatypes yet (like dates), nor does it populate associations (list with other objects) yet. Have fun, and any feedback on the code would be highly valued!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2011-09-16 10:00:01</wp:post_date>
		<wp:post_date_gmt>2011-09-16 08:00:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-groovy-object-mother-pattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423025223]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"83.20361662914407";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:17:"72.50258956258854";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:18:"61.331130231098214";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"57.32817023067797";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"55.133646531699654";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"51.13068653127941";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>823</wp:comment_id>
			<wp:comment_author><![CDATA[jesuspesca]]></wp:comment_author>
			<wp:comment_author_email>jesuspesca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.17.52.79</wp:comment_author_IP>
			<wp:comment_date>2012-07-10 13:00:11</wp:comment_date>
			<wp:comment_date_gmt>2012-07-10 11:00:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The post and class are really nice; thanks a lot. I've noticed that replacing the 'default' in switch statement by:
from
default: return null
to
default: return field.type.build()

it builds the complete object graph.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1341918011.7372";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1341919372.3109";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Indexing documents with Tika and Grails</title>
		<link>http://www.jworks.nl/2011/09/02/friday-repost-indexing-documents-with-tika-and-grails/</link>
		<pubDate>Fri, 02 Sep 2011 08:00:46 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

<p>In <a href="http://www.jworks.nl/2011/08/05/friday-repost-easy-file-uploading-in-grails/">one of the previous blogposts</a>, I described a way to easily upload images by using Grails commands. This blogpost further builds on that, by providing a generic way to index uploaded documents. These documents can later be retrieved by using the search option provided by the Grails Search plugin.</p>

<p>To index documents, we're going to need two components: one of these components is the Grails Search plugin, as described above. The other component is Tika. Tika is a document indexer library which can index many kinds of documents like Text, Word, Excel, Powerpoint, but also more exotic document formats, like MP3 and FLV. Combined with Lucene, this provides a powerful combo.</p>

<p>So, how do we get this to work? Well, first we need the application from the previous blogpost. I refactored it a little to represent the new generic format better. I renamed all references from image to document (so now we have a CreateDocumentCommand instead of a CreateImageCommand, as well as all other references), and I moved the upload.gsp to the views directory, since redirection and forwarding works better that way. After the refactoring was done, I first installed the searchable plugin by typing:</p>

<blockquote>
grails install searchable
</blockquote>

I also needed Tika, so I added it to the BuildConfig.groovy in the grails-app/conf directory, like this:

<pre class="brush:groovy">
        compile('org.apache.tika:tika-core:0.7')
        compile('org.apache.tika:tika-parsers:0.7') { excludes "xercesImpl", "xmlParserAPIs", "xml-apis", "log4j" }
</pre>

<p>Grails and extra XML libraries really don't mix well, so to prevent some nasty class loading issues, better exclude them here. What we need to do now is to tell searchable to index our documents when we upload them. This is quite trivial really, we can just annotate the Document class (which in the previous application was called 'Image') with a Tika converter. Then we have to create the converter, register it in Spring, and we should be done. So, first things first: let's annotate the Document class.</p>

<p>In the Document class, add a searchable closure with a converter for the byte array, like this:</p>

<pre class="brush:groovy">
package com.example.domain

class Document {
    byte[] bytes

    static searchable = {
        bytes converter: 'tikaConverter'
    }
}
</pre>

<p>We now need to create the TikaConverter. We'll create a TikaConverter.groovy in the src/groovy/com/example/converter directory. The class should look like this:</p>

<pre class="brush:groovy">
package com.example.converter

import org.apache.tika.Tika;
import org.compass.core.converter.ConversionException;
import org.compass.core.converter.basic.AbstractBasicConverter
import org.compass.core.mapping.ResourcePropertyMapping
import org.compass.core.marshall.MarshallingContext

class TikaConverter extends AbstractBasicConverter {

    private Tika tika

    TikaConverter() {
        tika = new Tika()
        tika.maxStringLength = -1 // unlimited document length
    }

    @Override
    protected Object doFromString(String str, ResourcePropertyMapping resourcePropertyMapping, MarshallingContext context) throws ConversionException {
        return null // we don't need this
    }

    @Override
    protected String doToString(Object o, ResourcePropertyMapping resourcePropertyMapping, MarshallingContext context) {
        return tika.parseToString(new ByteArrayInputStream(o))
    }

}
</pre>

<p>This class is responsible for extracting text from any kind of document uploaded to the system. To make this converter available, we have to register it in the Spring context, and then we're ready to go. To register the Converter in the Spring context, add the following lines to grails-app/conf/spring/resources.groovy:</p>

<pre class="brush:groovy">
import com.example.converter.TikaConverter

beans = {
    tikaConverter(TikaConverter)
}
</pre>

<p>Now everything should be set in place. Browse to: <a href="http://localhost:8080/document-indexing/upload/show">http://localhost:8080/document-indexing/upload/show</a> to upload a document. Any kind of document will do, as long as it contains some text. When the uploading went alright, the document will be available in the Lucene index. You can test this by going to <a href="http://localhost:8080/document-indexing/searchable">http://localhost:8080/document-indexing/searchable</a> and type in some text from the document you have just uploaded. The result should be a result page similar to Google.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2011-09-02 10:00:46</wp:post_date>
		<wp:post_date_gmt>2011-09-02 08:00:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-indexing-documents-with-tika-and-grails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="indexing"><![CDATA[indexing]]></category>
		<category domain="post_tag" nicename="tika"><![CDATA[tika]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423102378]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:16:"82.3859803735332";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:16:"81.8612518444901";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"78.38302037311294";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:18:"62.842998174283984";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:17:"59.36476670290683";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:18:"55.133646531699654";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Friday Repost: Groovy&#039;s @Immutable pitfalls</title>
		<link>http://www.jworks.nl/2011/08/26/friday-repost-groovys-immutable-pitfalls/</link>
		<pubDate>Fri, 26 Aug 2011 08:00:59 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog.</i>

<p>Groovy 1.6 introduced some Groovy AST transformations like @Lazy, @Delegate and @Immutable, and there are more. This blog describes some pitfalls of using  @Immutable, but to do that, a proper example of @Immutable seems well deserved.
</p>

<p>
  <h3>A first introduction</h3>
 @Immutable, like the name suggests, makes your classes immutable. This means that state changes from the outside, for example by the use of setters, are no longer possible. A good use case for this is when building Commands or DTO's (also known as Command Query Separation). See for example the following code:
</p>

<pre class="brush: groovy">
class CreateCustomerCommand {
  String name
  Date birthDate
  boolean married
}
</pre>

The state of this class should not change. However, in Groovy, this is a bit harder to do than in Java, since Groovy uses a lot of reflection to invoke properties. So the following is quite valid in Groovy:

<pre class="brush: groovy">
def command = new CreateCustomerCommand(name:'Erik Pragt', married:false)
command.married = true
</pre>

Being able to do so could cause a lot of unexpected things, and a lot of unwanted behavior! To make sure this doesn't happen, we can use the @Immutable annotation:

<pre class="brush: groovy">
@Immutable
final class CreateCustomerCommand {
  String name
  Date birthDate
  boolean married
}
</pre>

As you can see, two things have changed: 
<ol>
  <li>The class is now annotated with @Immutable
  <li>The class has been made final, which is a requirement for @Immutable
<ol>

When executing the above code again, an exception will be thrown:

<blockquote>
groovy.lang.ReadOnlyPropertyException: Cannot set readonly property: married for class: CreateCustomerCommand
</blockquote>

Seems all pretty and cute, right? However, what would happen when someone with evil intentions (or maybe someone with an old Java habbit), decides to create a setter for this class?

<pre class="brush: groovy">
@Immutable
final class CreateCustomerCommand {
  String name
  Date birthDate
  boolean married

  void setMarried(boolean married) {
     this.married = married
  }
}
</pre>

<p>Now, the code does execute without throwing an exception, and suddenly the code is mutable again. Unfortunately, there's not much we can do about this, but it breaks the @Immutable contract. There is a small note on this on the <a href="http://groovy.codehaus.org/Immutable+AST+Macro" target="_blank">@Immutable documentation page</a>: </p>

<p><i>"You don't have to follow Groovy's normal property conventions, e.g. you can create an explicit private field and then you can write explicit get and set methods. Such an approach, isn't currently prohibited (to give you some wiggle room to get around these conventions) but any fields created in this way are deemed not to be part of the significant state of the object and aren't factored into the equals or hashCode methods. Use at your own risk!"</i></p>

<p>
This text describes the other features of @Immutable: an automatic equals and hashCode method. Since the setter breaks the @Immutable behavior, this is excluded from the equals / hashCode generation. However, <b>this only applies</b> when the fields are private! So be aware of that!
</p>

<p>
   <h3>Conclusion</h3>
My conclusion in this is quite simple: don't expose state changes to the outside world whenever your intention is to be @Immutable! </p>

<p>Happy coding!</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2011-08-26 10:00:59</wp:post_date>
		<wp:post_date_gmt>2011-08-26 08:00:59</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-groovys-immutable-pitfalls</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="immutable"><![CDATA[immutable]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423014185]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:17:"66.04744011931484";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:18:"61.331130231098214";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:18:"60.658185757585514";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"57.85289875972106";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"55.84699641949604";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"55.133646531699654";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>469</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-34)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=889</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-29 12:54:15</wp:comment_date>
			<wp:comment_date_gmt>2011-08-29 10:54:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Groovy’s @Immutable pitfalls [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314615255.3139";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314616228.8626";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Preventing spam with Groovy and Grails</title>
		<link>http://www.jworks.nl/2011/09/09/friday-repost-preventing-spam-with-groovy-and-grails/</link>
		<pubDate>Fri, 09 Sep 2011 08:00:36 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

<p>When I created the <a href="http://www.jworks.nl">jworks.nl</a> website in Grails, one of my requirements was to have a blog. Since the website is created in Grails, and the Grails application doesn't integrate easily with a standard blogging solution like Wordpress, I decided to create my own blogging solution. But, since this proved to be much more painful than initially anticipated, I migrated the website to a new design and decided to use Wordpress instead. However, the plugin creation was fun to do, so I'm sharing my experiences here.</p>

<p>The current blog consists of little more than just a BlogPost class, and a Comment class. This worked pretty well, and I got the blog up in no time. However, my blog was found by the spam bots, and it got spammed a little. In the first couple of days, I got 3 spam messages a day, which could be easily managed by hand (however still quite annoying). Then, the spam load increased to 10, 100 and then a 1000 per day. Then I got really annoyed, and decided it was time for a solution!</p>

<p>My solution was not to choose a Captcha. Captcha's tend to bother the user, making it harder to post feedback. That's not something I'd look forward to. So I created my own solution, based on how Wordpress does it.</p>

<p>Wordpress has their own spam blocking service, which is called Akismet. The nice thing about Akismet is that their service isn't exclusive for Wordpress, but they provide an API so others can also use it! Which is exactly what I did: I created a Grails plugin for Akismet, called (surprise surpise!): Grails Akismet! I'm sure you didn't see that coming!</p>

<p>It's very simple to use. Just do a 'grails install akismet', add your site plus the Aksimet key to your Grails configuration, and you're good to go! The plugin provides a Grails Service, which can be injected into most Grails artifacts (like services, domains, and controllers). By using the 'check for spam' method in the AkismetService, a call to the online Akismet service is done, which determines if the comment is spam or not. Very easy, and very non-intrusive!</p>

<p>So, if you want to get started with the plugin, please check out the <a href="http://www.grails.org/plugin/akismet">documentation</a> and let me know what you think!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2011-09-09 10:00:36</wp:post_date>
		<wp:post_date_gmt>2011-09-09 08:00:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-preventing-spam-with-groovy-and-grails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="akismet"><![CDATA[akismet]]></category>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="spam"><![CDATA[spam]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423095016]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:16:"81.8612518444901";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"81.10227260113436";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"78.38302037311294";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:17:"62.17005370077129";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:18:"60.658185757585514";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:17:"58.84003817386374";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>609</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-36)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=918</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-09-12 01:53:15</wp:comment_date>
			<wp:comment_date_gmt>2011-09-11 23:53:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Preventing spam with Groovy and Grails [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315785195.7589";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316782544.0823";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Groovy and Null</title>
		<link>http://www.jworks.nl/2011/08/19/friday-repost-groovy-and-null/</link>
		<pubDate>Fri, 19 Aug 2011 08:00:08 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

<p>To start, I find it surprising that there's so little information to be found about this topic. Maybe it's just me, so let's start with a test. If you pass all questions, you don't win much, but then there's no need to further read this blog I guess.</p>

<p>So, without further ado, question 1.</p>

<b>Question 1</b><br/>

<p>What's the result of the following code?</p>

<pre class="brush: groovy">
def name = null
println name.toString()
</pre>

<p>Please remember your answer. Now, question number 2.</p>

<b>Question 2</b><br />

<p>What's printed in the following code?</p>

<pre class="brush: groovy">
null.each {
   println "jworks"
}
</pre>

<p>Same here: please remember your answer! Next, question number 3. Almost there!</p>

<b>Question 3</b><br />

<p>What's the result of the following code?</p>

<pre class="brush: groovy">
class Person {
   String name = "erik"
}

def person = null
println person.name
</pre>

<p>Same here: please remember your answer! Next, last question!</p>

<b>Question 4</b><br />

<p>What's the result of the following code (tip: check question 1!)?</p>

<pre class="brush: groovy">
println null.hashCode()
</pre>


<p>Got every answer written down? Okay, here come the answers!</p>

<h3>Answers</h3>
<p>
<b>Answer 1</b>: "null"<br />
<b>Answer 2</b>: nothing!<br />
<b>Answer 3</b>: A NullPointerException. (java.lang.NullPointerException: Cannot get property 'name' on null object)<br />
<b>Answer 4</b>: Another NullPointerException.</p>

<p>All answers correct? Great, you can stop reading now, this blog doesn't teach you anything. Some errors? Well, maybe there's a chance to learn something, cause I'll explain why this happens.
</p>

<h3>Null object</h3>
<p>Groovy has the concept of "Null Objects". If you do a "null.getClass()", you will see that the class of "null" is a NullObject, or more precise, org.codehaus.groovy.runtime.NullObject. This class is a used whenever you declare a variable with null, as in "def name = null". Having a NullObject instead of a Java null reference prevents a lot of NullPointerExceptions for most common operations. However, there are some exceptions!</p>

<p><b>Answer 1</b><br />
Because the name is set to null, it's actually set to NullObject. The toString of NullObject returns "null", which makes sense, so you'll see the String "null" printed whenever you call the toString(). It might make sense, but coming from a Java background and not knowing about the NullObject, I was kinda surprised to see it work!</p>

<p><b>Answer 2</b><br />
Besides providing some good default implementations for some standard methods, the NullObject also has an iterator() method which provides an iterator over an empty list (Collections.EMPTY_LIST). This allows methods like each, but also collect, find, findAll, inject, every, any, etc (no, this is not a method, it just means etcetera) to safely work on any null collection, which is really nice!
</p>

<p><b>Answer 3</b><br />
So, while the null object works for most standard methods, there is a limit to the tolerance of it. Any properties or methods not in the NullObject class will still throw an exception when the object is null object. This is explicitly done in the NullObject by throwing an exception in the 'setProperty' and 'invokeMethod' methods. Just so you know.
</p>

<p><b>Answer 4</b><br />
Well, already the last anwer in this post. I thought, that when a toString() works, an equals works, a hashCode certainly must also work. And I expected it to return a zero (0). But it doesn't. It throws an exception as explicitly programmed in the code. To be honest, I didn't expect this, but I thought it would make sense when using it in a Hashtable, for example. It doesn't, because a Hashtable already checks if the value is null, I thought this done by the by the 'is' method in NullObject (which returns true when comparing the object to "null"), but I have been corrected by Jochen Theodorou: since Hashtable is Java, it has no knowledge about the Groovy 'is' method. Also, I haven't found out why the null object doesn't return a 0, as I expected, but rather explicitly throws a NullPointer, but at least it's something to be aware of!</p>

<h3>Conclusion</h3>
<p>Well, I hope reading this far helped a little in understanding Groovy and nulls. Using Groovy could give you some surprises, especially when you have a Java background, so I hope that after reading this, you'll have a little less unexpected surprises!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2011-08-19 10:00:08</wp:post_date>
		<wp:post_date_gmt>2011-08-19 08:00:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-groovy-and-null</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<category domain="post_tag" nicename="null"><![CDATA[null]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422694765]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:17:"72.50258956258854";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:17:"66.04744011931484";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"63.188816627042826";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"57.32817023067797";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"55.84699641949604";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"55.133646531699654";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>359</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-33)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=877</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 02:05:07</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 00:05:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Groovy and Null [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313971507.3828";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314019498.7092";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[fumokmm]]></wp:comment_author>
			<wp:comment_author_email>fumo.kmm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://d.hatena.ne.jp/fumokmm/</wp:comment_author_url>
			<wp:comment_author_IP>221.170.16.160</wp:comment_author_IP>
			<wp:comment_date>2011-09-12 23:47:08</wp:comment_date>
			<wp:comment_date_gmt>2011-09-12 21:47:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi.

Thank you for marvelous article. This is very interesting.
I'm considering translate to Japanese and introduce in my blog.
Would you give me a permission it?

Thank you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315864028.6959";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315897356.3227";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>616</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.140.137.74</wp:comment_author_IP>
			<wp:comment_date>2011-09-13 09:04:28</wp:comment_date>
			<wp:comment_date_gmt>2011-09-13 07:04:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sure, no problem at all!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>614</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1315897468.354";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Grails and Bamboo</title>
		<link>http://www.jworks.nl/2011/09/30/friday-repost-grails-and-bamboo/</link>
		<pubDate>Fri, 30 Sep 2011 08:00:34 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog</i>

<p>In our development environment, we use the complete <a href="http://www.atlassian.com">Atlassian</a> suite. We (or actually I) choose this environment because the products integrates so well together, but also because it integrates good with other products, like SpringSource Tool Suite, or, in our case, <a href="http://www.jetbrains.com">IntelliJ IDEA</a>. And finally, the Atlassian suite has excellent support for building Grails projects, which, at the moment, is all we do. Simply put, we choose Atlassian because it rocks!</p>

<p>To integrate even better with the Atlassian Build Server (Bamboo), I've created a small script which will update the version number of the application with the Build Number. This way, we always know which build is running where. To do so, I created the following script.</p>

<pre class="brush: groovy">
includeTargets << grailsScript("_GrailsEvents")

target('default': "Sets the current application version") {
    def buildNumberFile = new File('build-number.txt')
    if (buildNumberFile.exists()) {
        def props = new Properties()
        buildNumberFile.withInputStream { stream -> 
            props.load(stream)
        }

        def buildNumber = props["build.number"]
        
        metadata.'app.version' = metadata.'app.version' + ".${buildNumber}"
        metadata.persist()
        event("StatusFinal", ["Application build number updated to ${buildNumber}"])
    }
}
</pre>

<p>This script will look for a file called 'build-number.txt', which is produced by the <a href="http://confluence.atlassian.com/display/BAMBOO/Bamboo+Development+Hub">Build Number Stamper Plugin</a>, and put in the working directory. This file is read by the script, and it updates the version number in application.properties, which will result in a war file produced by the build in the following format '<name>-<version>.<buildnumber>.war', for example 'todolist.0.1.34.war'. This way you can easily relate each build which bugs you might find, and avoids confusion, for example between testers and developers.</p>

<p>As an extra, we've show the current version of the application in the source of our HTML. We do this by reading the version number from the application.properties with the following tag:

<pre class="brush: groovy">
<g:meta name="app.version"/>
</pre>

<p>This will display the version number of the application, and will allow you to relate issues to a build number, to avoid miscommunication about the deployed application!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2011-09-30 10:00:34</wp:post_date>
		<wp:post_date_gmt>2011-09-30 08:00:34</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-grails-and-bamboo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="atlassian"><![CDATA[atlassian]]></category>
		<category domain="post_tag" nicename="bamboo"><![CDATA[bamboo]]></category>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="groovy-2"><![CDATA[groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423023561]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"78.38302037311294";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:17:"78.38302037311294";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"78.38302037311294";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:18:"63.470313292048125";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:17:"55.84699641949604";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:17:"55.84699641949604";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>649</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-39)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=944</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-10-03 23:31:19</wp:comment_date>
			<wp:comment_date_gmt>2011-10-03 21:31:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Friday Repost: Grails and Bamboo [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317677479.9119";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317710570.7169";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1337</wp:comment_id>
			<wp:comment_author><![CDATA[Lee]]></wp:comment_author>
			<wp:comment_author_email>boblee1088@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://grails.asia/grails-tutorial-for-beginners-playing-with-groovy-language/</wp:comment_author_url>
			<wp:comment_author_IP>49.144.243.66</wp:comment_author_IP>
			<wp:comment_date>2013-07-27 16:12:21</wp:comment_date>
			<wp:comment_date_gmt>2013-07-27 14:12:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love the fact that you can get the atlassian suite that includes JIRA and bamboo for 10 bucks.  If of course the team is small]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775779.737689971923828125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374934341.75494098663330078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Friday Repost: Making Grails work behind an proxy server</title>
		<link>http://www.jworks.nl/2011/09/23/friday-repost-making-grails-work-behind-an-proxy-server/</link>
		<pubDate>Fri, 23 Sep 2011 08:00:24 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[<i>The Friday Repost series are copies from my earlier writings. Since I don't want to loose them, and they might prove useful to others, I'm reposting them on this blog.</i>

Making Grails work behind an NTLM firewall (or using Grails without Internet)

<p>Currently, I'm in the process of taking over an existing Grails project and migrating it to a different location. This location has been setup by me, so I have full control over it, except for one tiny detail: the Proxy Server.</p>

<p>The application used to work great, and installing plugins was a breeze: just do a good old 'grails install-plugin fitnesse', and the plugin would be installed. However, since this Proxy Server is not just any Proxy Server, but a Microsoft NTLM Proxy Server, we tried quite hard to make Java work with it, but at the moment the score is 1-0 for the Proxy Server. This gives us the following problems:</p>

<p>
1) Our dependencies cannot be downloaded<br />
2) Our plugins cannot be be downloaded<br />
3) Some plugins cannot be installed anymore
</p>

<p>
<b>Downloading dependencies</b><br />
In our BuildConfig.groovy, we specified some dependencies like joda time and xstream. These dependencies are normally downloaded, but due to our Proxy issue, that doesn't work.</p>

<p>Our solution to this is to use Nexus. Nexus is able to pass the firewall, and can download our dependencies. It serves as a transparent Maven proxy, which can also be used by Ivy, and solves our problem nicely. Besides, it's a good idea to install a local Maven proxy anyway, mostly because of reliability, but also because of speed and making sure everyone uses the same dependencies.</p>

<p>
<b>Downloading plugins</b><br />
Unfortunately, the Grails plugins are not in a Maven repository. However, a solution to this is to download the plugin zip (eg grails-fitnesse-0.2.zip), rename it (to fitnesse-0.2.zip), put it in the lib directory (even though I'm really not a fan of putting binaries in version control systems), and register it in the application.properties and BuildConfig.groovy.
</p>

<p>The BuildConfig.groovy should look like this:</p>

<pre class="brush: groovy">
grails.project.dependency.resolution = {
    inherits "global" // inherit Grails' default dependencies
    log "warn" // log level of Ivy resolver, either 'error', 'warn', 'info', 'debug' or 'verbose'
    repositories {
        mavenRepo "http://172.30.60.106:8081/nexus/content/repositories/central" // nexus repo
    }
    dependencies {
        compile ('com.thoughtworks.xstream:xstream:1.3.1') {
            excludes "stax","stax-api"
        }
    }

    plugins {
        runtime ':hibernate:1.3.2'
        runtime ':tomcat:1.3.2'
        runtime ':fitnesse:0.2'
    }
</pre>

<p>As you can see, everything is configured here: the dependencies are here, the location to nexus is configured, and there's a plugin closure. This "plugins" closure defines the plugins, and allows you to place them in the 'lib' directory. Be sure to rename the plugin zip to remove the 'grails' part, else it doesn't work. Maybe these zips are also available from a Maven repository, which would solve the issue of putting binaries in our source control system, but I haven't been able to find them yet. </p>

<p><b>Plugin installation</b><br />
Some plugins, like the jQuery plugin, but also like my own plugin, the <a href="http://www.grails.org/plugin/syntax-highlighter">syntax-highlighter</a>, download resources from the Internet when installing them. I haven't been able to work around that yet, but my current solution is to just not use those plugins. I downloaded the jQuery javascript libraries and attached them to the project myself, and since we only use jQuery which does that, this solution is also an adequate fix.</p>

<p><b>Conclusion</b><br />
So, as you can see, with some effort, it's possible to make Grails work behind a Proxy Server, or without internet at all. This is a good solution for build servers, so you can have reproducible builds without the need for an Internet connection.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2011-09-23 10:00:24</wp:post_date>
		<wp:post_date_gmt>2011-09-23 08:00:24</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friday-repost-making-grails-work-behind-an-proxy-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="friday-repost"><![CDATA[friday repost]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="post_tag" nicename="nexus"><![CDATA[nexus]]></category>
		<category domain="post_tag" nicename="proxy-server"><![CDATA[proxy server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422715784]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:18:"63.470313292048125";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"62.842998174283984";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"59.36476670290683";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:17:"59.36476670290683";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"58.84003817386374";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"207";s:5:"score";s:17:"36.56167996412195";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>693</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.28</wp:comment_author_IP>
			<wp:comment_date>2011-11-11 15:02:16</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 14:02:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Leo,

We've tried that, but it didn't work with our proxy server. Did you also use a Microsoft NTLM proxy server?

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>692</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321020136.0769";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>692</wp:comment_id>
			<wp:comment_author><![CDATA[Leo]]></wp:comment_author>
			<wp:comment_author_email>leonate@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.91.123.14</wp:comment_author_IP>
			<wp:comment_date>2011-11-11 11:56:41</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 10:56:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We are also behind corporate proxy server but common grails proxy settings work fine in our case. We have something like the following in ProxySettings.groovy

myproxy=["http.proxyHost":"companyproxyserver", "http.proxyPort":"8080", "http.proxyUserName":"myuser", "http.proxyPassword":"mypassword"]
currentProxy="myproxy"

Have you tried similar config in your case?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1321009001.861";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321019859.4846";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>710</wp:comment_id>
			<wp:comment_author><![CDATA[Sami Mäkelä]]></wp:comment_author>
			<wp:comment_author_email>smakela@iki.fi</wp:comment_author_email>
			<wp:comment_author_url>http://codeisdesign.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>84.20.129.93</wp:comment_author_IP>
			<wp:comment_date>2011-12-12 14:01:54</wp:comment_date>
			<wp:comment_date_gmt>2011-12-12 13:01:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi!

We are using Artifactory as a local Maven provy and it works great.
It speeds up building Grails apps (when it's downloading th whole internet)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323694914.3992";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323696771.4424";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>636</wp:comment_id>
			<wp:comment_author><![CDATA[Gethin James]]></wp:comment_author>
			<wp:comment_author_email>jworks@covolution.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.29.65.21</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 10:19:28</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 08:19:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I download the Grails pluglins, then manually install them in our local Maven repo - in your case Nexus.  Then you don't need to mess about with putting things in the lib directory.

Also "inherit false" works better for BuildConfig.groovy]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316765968.6344";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316768715.1995";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>637</wp:comment_id>
			<wp:comment_author><![CDATA[Gethin James]]></wp:comment_author>
			<wp:comment_author_email>jworks@covolution.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.29.65.21</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 13:45:55</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 11:45:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Also @pledbrook tweeted today that:

"an --offline option has been added to #grails HEAD. I'll be testing it soon."

See http://j.mp/n993KJ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316778355.3881";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>638</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 14:55:28</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 12:55:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Based on the tweet, it's a bit hard to say what it does. Do you have more information? Does it mean that no dependency resolution would be done? Cause that would be a nice improvement in startup time.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>637</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316782528.2532";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1376</wp:comment_id>
			<wp:comment_author><![CDATA[Siva]]></wp:comment_author>
			<wp:comment_author_email>sivacj521@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.191.246.3</wp:comment_author_IP>
			<wp:comment_date>2013-07-30 23:31:38</wp:comment_date>
			<wp:comment_date_gmt>2013-07-30 21:31:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Could you please let me know if you how to use .pac file for proxy for grails?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>692</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775782.4845330715179443359375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375219898.028789043426513671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1447</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 09:57:15</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 07:57:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Siva, I'm sorry, but I have no experience with .pac files. I know you can open them, they are just txt files, and with a bit luck, depending on the complexity of the pac, you might be able to find the correct configuration there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1376</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775835.5594499111175537109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Excluding fields and properties from marshalling using annotations in Grails</title>
		<link>http://www.jworks.nl/2011/08/15/excluding-fields-and-properties-from-marshalling-using-annotations-in-grails/</link>
		<pubDate>Mon, 15 Aug 2011 08:00:02 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[Recently the flexible and configurable marshalling system of Grails was mentioned on Twitter by Graeme Rocher as needing some more documentation. That was probably the outcome of <a href="http://jwicz.wordpress.com/" target="_blank">the interesting blog post by J-Wicz on the matter</a>. Rob Fletcher has also <a href="http://adhockery.blogspot.com/2009/08/json-rendering-your-classes.html" target="_blank">blogged about it</a> quite some time ago.

The issue got my attention because in our project I needed to exclude some fields from marshalling on a DTO. The reason for that might be various, for me it was a fact that the DTO contained some intermediate data which was then used to determine a value that is being send to the frontend in a JSON format. One of the fields had to also be formatted so I created a getter for it but the original value was still marshalled which was not desired - you're not using it then don't send it to frontend, less data means better performance. For others it might be the fact that a marshalled object contains a big data structure which is not needed in the frontend.

I wanted the solution to be reusable so that it could be applied to multiple classes without the need to create a new marshaller for every one of them. I decided to mark the fields with a <em>@DoNotMarshall</em> annotation which would be then detected in my marshaller and the fields and properties annotated with it won't be marshalled. I used the information from the abovementioned blog posts as the starting point.

So the first thing is the two annotations - one from marking the fields and accessors to be skipped from marshalling and the second to mark the class on which we want to configure the marshalling. I will explain why the second is needed later on.

The code for <em>DoNotMarshall</em> annotation:
<pre class="brush:groovy">package nl.jworks.marshalling

import java.lang.annotation.ElementType
import java.lang.annotation.Retention
import java.lang.annotation.RetentionPolicy
import java.lang.annotation.Target

@Retention(RetentionPolicy.RUNTIME)
@Target([ElementType.FIELD, ElementType.METHOD])
@interface DoNotMarshall {
}</pre>

And for the <em>ConfigureMarshalling</em> annotation:

<pre class="brush:groovy">package nl.jworks.marshalling

import java.lang.annotation.Retention
import java.lang.annotation.RetentionPolicy
import java.lang.annotation.Target
import java.lang.annotation.ElementType

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
@interface ConfigureMarshalling {
}</pre>

Next we'll need a test for our new marshaller:

<pre class="brush:groovy">package nl.jworks.marshalling

import grails.test.*
import grails.converters.JSON
import org.codehaus.groovy.grails.web.json.JSONObject

class AnnotationDrivenObjectMarshallerTests extends GrailsUnitTestCase {
    protected void setUp() {
        super.setUp()
        JSON.registerObjectMarshaller(new AnnotationDrivenObjectMarshaller&lt;JSON&gt;())
    }

    private JSONObject marshall(object) {
        JSON.parse(new JSON(object).toString())
    }

    void testNonAnnotatedClass() {
        JSONObject marshalled = marshall(new NonAnnotatedClass())
        marshalled.with {
            assert field == 'field'
            assert property == 'property'
        }
    }

    void testAnnotatedClass() {
        JSONObject marshalled = marshall(new AnnotatedClass())
        marshalled.with {
            assert !has('nonMarshalledField')
            assert !has('nonMarshalledProperty')
            assert marshalledField == 'marshalled'
            assert marshalledProperty == 'marshalled'
        }
    }

}

@ConfigureMarshalling
class AnnotatedClass {
    String marshalledField = "marshalled"
    @DoNotMarshall
    String nonMarshalledField = "non marshalled"

    String getMarshalledProperty() { "marshalled" }

    @DoNotMarshall
    String getNonMarshalledProperty() { "non marshalled" }
}

class NonAnnotatedClass {
    @DoNotMarshall
    String field = "field"

    @DoNotMarshall
    String getProperty() { "property" }
}</pre>

Few things to note about the test class:
<ul>
<li>in <em>setUp()</em> we are registering our marshaller using <em>JSON#registerObjectMarshaller(ObjectMarshaller&lt;JSON&gt;)</em> method - you will also need to do the same in the bootstrap if you want to use the marshaller in a Grails application</li>
<li><em>AnnotatedClass</em> and <em>NonAnnotatedClass</em> are our test classes for which we define which fields should be skipped when marshalling</li>
<li>there are two tests - one for testing if the fields and properties marked with <em>@DoNotMarshall</em> are not marshalled and one for testing if the <em>@DoNotMarshall</em> is ignored if the class itself wasn't marked with <em>@ConfigureMarshalling</em></li>
</ul>

And finally the marshaller implementation:
<pre class="brush:groovy">package nl.jworks.marshalling

import org.codehaus.groovy.grails.web.converters.Converter
import org.codehaus.groovy.grails.web.converters.marshaller.ClosureOjectMarshaller
import org.springframework.beans.BeanUtils
import java.beans.PropertyDescriptor
import java.lang.reflect.Field

class AnnotationDrivenObjectMarshaller&lt;T extends Converter&gt; extends ClosureOjectMarshaller&lt;T&gt; {
    private final static Closure marshallingClosure = { marshalled ->
        Class marshalledClass = marshalled.getClass()
        Field[] fields = marshalledClass.declaredFields
        PropertyDescriptor[] properties = BeanUtils.getPropertyDescriptors(marshalledClass)
        def propertiesToBeMarshalled = properties.findAll { PropertyDescriptor property ->
            List accessorAndField = [property.readMethod, fields.find { it.name == property.name}]
            boolean isAnnotationPresent = accessorAndField.any { it?.isAnnotationPresent(DoNotMarshall) }
            property.name != 'metaClass' && !isAnnotationPresent
        }
        return propertiesToBeMarshalled.inject([:]) { Map result, PropertyDescriptor property ->
            result[property.name] = property.readMethod.invoke(marshalled, null as Object[])
            result
        }
    }

    AnnotationDrivenObjectMarshaller() {
        super(GroovyObject, marshallingClosure.clone())
    }

    @Override
    boolean supports(Object object) {
        super.supports(object) && object.class.isAnnotationPresent(ConfigureMarshalling)
    }
}</pre>

I decided to extend from <em>ClosureOjectMarshaller</em> (yes, it's an 'Oject' marshaller, apparently a typo) which allows to specify a closure which is called with the marshalled object as the parameter and shall return another object (in my case a map) that will be marshalled. Thanks to that I don't have to worry about any JSON building. I'm just returning a map from the closure where keys are property names and values are the respective property values and the result is later on JSONified for me.

The code inside the closure is a modified version of the code from <em>GroovyBeanMarshaller</em> with the sole difference in not marshalling the fields and properties on which the <em>DoNotMarshall</em> annotation is detected.

Finally note that I've overridden the <em>supports</em> method - thanks to that the marshaller will be used for any class that bears the <em>ConfigureMarshalling</em> and is a GroovyObject but for non annotated classes the original (in most cases the <em>GroovyBeanMarshaller</em>) marshaller will be used. As the <em>AnnotationDrivenObjectMarshaller</em> creates a map which is then marshalled it has the performance penalty of that extra step so if all the fields are to be marshalled it's better to let the framework use the original marshaller.

To use this marshaller you need to drop it together with the annotations in the src/groovy directory of your Grails application and register it in the bootstrap as previously mentioned in the description of the test class. As the bootstrap is not available in test classes it might be a good idea to register marshallers in a static method of some utility class. You can then call it both from the bootstap as well as from the unit tests - this way you can easily replicate the marshalling configuration of a running application in the tests.

Happy annotating and marshalling!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date>2011-08-15 10:00:02</wp:post_date>
		<wp:post_date_gmt>2011-08-15 08:00:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>excluding-fields-and-properties-from-marshalling-using-annotations-in-grails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="marshalling"><![CDATA[marshalling]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422629341]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:17:"74.38082364355651";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"40.31795227181216";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:17:"38.27164451711426";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"36.36062162695128";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:17:"36.11981967475084";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:18:"35.601642383595525";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>355</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-33)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=877</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-21 23:03:34</wp:comment_date>
			<wp:comment_date_gmt>2011-08-21 21:03:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Excluding fields and properties from marshalling using annotations in Grails [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313960614.3881";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313963942.2369";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Our Grails Stats: but what are yours?</title>
		<link>http://www.jworks.nl/2011/08/22/our-grails-stats-but-what-are-yours/</link>
		<pubDate>Mon, 22 Aug 2011 07:36:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[We're currently working on a Grails project for over a year now, with, on average, around 8 people including testers. I thought it would be nice to share our project statistics, but I'm wondering how our statistics compare to yours. 

<pre>
    +----------------------+-------+-------+
    | Name                 | Files |  LOC  |
    +----------------------+-------+-------+
    | Controllers          |    73 |  8394 | 
    | Domain Classes       |   122 |  4571 | 
    | Jobs                 |     2 |    27 | 
    | Services             |   117 | 10759 | 
    | Tag Libraries        |    34 |  3031 | 
    | Groovy Helpers       |   358 | 14095 | 
    | Java Helpers         |   356 | 32977 | 
    | Unit Tests           |   258 | 23146 | 
    | Integration Tests    |    15 |  1360 | 
    | Scripts              |    12 |   268 | 
    | GSP                  |   248 | 19156 | 
    | Javascript           |  1114 | 42434 | 
    +----------------------+-------+-------+
    | Totals               |  2709 | 160218| 
    +----------------------+-------+-------+
</pre>

Some information about our project: 
<ul>
  <li><strong>Java Helpers</strong>: this is 100% generated (CXF/JAXB code).</li>
  <li><strong>Scripts</strong>: this consists of some scripts to set the build number, generate the above CXF code based on some WSDLs, and run our Javascript unit tests</li>
  <li><strong>Domain/Service</strong>: Most of our business logic is in the domain or service layer. There is still to much code in our controllers, and we are working on that to make our controller layer smaller.</li>
</ul>

I hacked the script to also display our GSP and Javascript files. The Javascript is not entirely accurate, since it also includes JQuery and some JQuery libraries. Our functional (Geb) tests are missing though. These are quite new in our application, but are taking a bigger and bigger portion of our tests. 

So, I'm curious to see what your project statistics looks like. If you run:
<blockquote>
grails stats
</blockquote>
You'll get the same format as above. Please post it as a comment, even if it's only a small project, along with some project details you might find interesting to share, and let's see if we can create some nice graphs out of this!!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2011-08-22 09:36:00</wp:post_date>
		<wp:post_date_gmt>2011-08-22 07:36:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>our-grails-stats-but-what-are-yours</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="post_tag" nicename="lines-of-code"><![CDATA[lines of code]]></category>
		<category domain="post_tag" nicename="stats"><![CDATA[stats]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422751773]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"42.382509339299304";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:17:"39.71250720578057";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"31.255293842253792";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:18:"30.582349368741095";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:18:"30.582349368741095";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:18:"29.971586069854947";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>468</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-34)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=889</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-29 12:53:56</wp:comment_date>
			<wp:comment_date_gmt>2011-08-29 10:53:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Our Grails Stats: but what are yours? [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314615236.8716";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314616230.5151";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>387</wp:comment_id>
			<wp:comment_author><![CDATA[Ted Naleid]]></wp:comment_author>
			<wp:comment_author_email>contact@naleid.com</wp:comment_author_email>
			<wp:comment_author_url>http://naleid.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>75.72.222.5</wp:comment_author_IP>
			<wp:comment_date>2011-08-23 02:26:36</wp:comment_date>
			<wp:comment_date_gmt>2011-08-23 00:26:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is from a project that's about 18 months old, started with just me and has grown to 8 devs over that period:
<pre>
    +----------------------+-------+-------+
    | Name                 | Files |  LOC  |
    +----------------------+-------+-------+
    | Controllers          |    86 | 10170 | 
    | Domain Classes       |   139 |  6142 | 
    | Jobs                 |     7 |   108 | 
    | Services             |    86 | 10535 | 
    | Tag Libraries        |    41 |  3076 | 
    | Groovy Helpers       |   136 |  7514 | 
    | Java Helpers         |     1 |    65 | 
    | Unit Tests           |   522 | 49095 | 
    | Integration Tests    |   323 | 24085 | 
    | Functional Tests     |    14 |  1034 | 
    | Scripts              |     1 |    65 | 
    +----------------------+-------+-------+
    | Totals               |  1356 | 111889 | 
    +----------------------+-------+-------+
</pre>

Looks like our projects are very similar in size.  My output doesn't show gsp and javascript (how did you get that?), but I'd guess we've got about the same ratio as you do.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314059196.6486";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314075504.9149";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>381</wp:comment_id>
			<wp:comment_author><![CDATA[Demian]]></wp:comment_author>
			<wp:comment_author_email>dekay.2323@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.18.38.241</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 19:22:00</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 17:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just running Grails Stats
<pre>
 +----------------------+-------+-------+
 | Name                 | Files |  LOC  |
 +----------------------+-------+-------+
 | Controllers          |   105 |  9333 |
 | Domain Classes       |   102 |  4104 |
 | Jobs                 |    16 |  1073 |
 | Services             |    98 | 10814 |
 | Tag Libraries        |     4 |   174 |
 | Groovy Helpers       |   113 |  3865 |
 | Java Helpers         |    86 |  6451 |
 | Unit Tests           |    24 |  1663 |
 | Integration Tests    |   223 | 26057 |
 | Scripts              |     3 |    77 |
 +----------------------+-------+-------+
 | Totals               |   774 | 63611 |
 +----------------------+-------+-------+
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314048005.5113";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314033720.8438";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>375</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas]]></wp:comment_author>
			<wp:comment_author_email>tomaslin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://fbflex.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>2a01:388:201:3681:60c5:fbdc:1839:9b48</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 14:53:51</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 12:53:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found that grails stats only works with your top level project, so if you actually use the recommended plugin-oriented architecture, you need to run grails stats on each plugin / level.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314017631.2092";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314019539.4369";s:7:"message";s:39:"erikp reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314019613.8005";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>376</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 15:30:48</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 13:30:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tomas, thanks for the tip. Our project is a bit monolithic in that however. Still, could you share some data?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>375</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314019848.0806";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>377</wp:comment_id>
			<wp:comment_author><![CDATA[Martijn]]></wp:comment_author>
			<wp:comment_author_email>martijn.thieme@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.53.87.210</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 15:39:30</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 13:39:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you share the scripts for generating the above (including the Javascript/GSP files)? Then I'll run it along some of our projects as well]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314031869.4038";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314020370.9581";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>391</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-23 08:08:50</wp:comment_date>
			<wp:comment_date_gmt>2011-08-23 06:08:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Martijn, thanks for the reply!

What I did was that I changed the 'Stats' scripts in the scripts directory, and I added these two lines: 

[name: "GSP",                path: "views",            filetype: [".gsp"]],
[name: "Javascript",         path: "js",               filetype: [".js"]],]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>377</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314079730.9953";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>392</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-23 08:11:08</wp:comment_date>
			<wp:comment_date_gmt>2011-08-23 06:11:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ted, thanks for posting your result! Interesting, and your project seems very similar to ours indeed!

To get the js and gsp output, I hacked the Grails Stats script a bit by adding the following two lines: 
[name: "GSP", path: "views", filetype: [".gsp"]],
[name: "Javascript", path: "js", filetype: [".js"]],

It's not very accurate since it includes our JQuery libraries, but a nice indication maybe.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>387</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314079868.3638";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>393</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.12.14.27</wp:comment_author_IP>
			<wp:comment_date>2011-08-23 08:14:36</wp:comment_date>
			<wp:comment_date_gmt>2011-08-23 06:14:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Demian,

Thanks for posting your stats! Interesting to see how much integration tests you have! Is there a specific reason for choosing Integration above Unit tests?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>381</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314080076.7154";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>This (two) week(s) in Discobot (30-31.2011)</title>
		<link>http://www.jworks.nl/2011/08/10/this-two-weeks-in-discobot-30-31-2011/</link>
		<pubDate>Wed, 10 Aug 2011 08:48:40 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[Each week, we work on the Discobot project, which goal it is to make Groovy run on Android. While that in itself isn't the biggest problem, as you can read in our <a href="http://www.jworks.nl/category/discobot-2/" title="Discobot Blog posts">previous blog posts</a>, making developing for Android using Groovy and making sure we are feature complete, well, let's say it's challenging.

Current efforts are twofold: one is developing a set of developer tools using Gradle, on which Marcin is focusing the most. On the other hand, we need some tools to make sure our version of Groovy works on Android, which is what I (Erik) am focusing on. 

[caption id="attachment_291" align="aligncenter" width="300" caption="Unit testing in Groovy Android"]<a href="http://www.jworks.nl/wp-content/uploads/2011/08/Screen-shot-2011-08-09-at-9.53.44-PM.png"><img src="http://www.jworks.nl/wp-content/uploads/2011/08/Screen-shot-2011-08-09-at-9.53.44-PM-300x208.png" alt="" title="IntelliJ with Android emulator running tests" width="300" height="208" class="size-medium wp-image-291" /></a>[/caption]

As you can see in the screenshot above, our project is already capable of building the project and installing it on the emulator using the Gradle plugin. Also, the start of a demo application has been built, which will allow us to run all the tests packed with Groovy. For that, we have tweaked the build process of Groovy itself, so that it produces a jar which includes all the tests. This jar is used in the Discobot project. To figure out which tests are available, an Android Classpath Scanner is used. It uses a hack by inspecting the Dex files itself, but we are currently using that to scan for files which extend from GroovyTestCase, and run those. Once that is working, we'll probably write a better UI around it.

Also, the Gradle plugin still needs some finishing touches to improve the overall user experience. Marcin is currently working on the last gradle task which will initialize the android project structure. It will call the <em>android create project</em> command-line tool from Android SDK, change the src directory structure of your project to obey Gradle conventions and create a 'Hello World' activity written in Groovy, so you can quickly get a simple working application to start out with! 

We'll try to update you again with more information next week!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2011-08-10 10:48:40</wp:post_date>
		<wp:post_date_gmt>2011-08-10 08:48:40</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-two-weeks-in-discobot-30-31-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-2"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="classloader"><![CDATA[classloader]]></category>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<category domain="post_tag" nicename="gradle"><![CDATA[gradle]]></category>
		<category domain="post_tag" nicename="intellij"><![CDATA[intellij]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423312112]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:17:"90.01114275481328";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:17:"69.88916808006141";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"551";s:5:"score";s:17:"47.67545447259131";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:18:"43.971514324682204";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:17:"41.69854919928922";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"589";s:5:"score";s:18:"38.979296971267814";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>243</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-32)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=863</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-15 17:15:55</wp:comment_date>
			<wp:comment_date_gmt>2011-08-15 15:15:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This (two) week(s) in Discobot (30-31.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313513861.2269";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313421355.5152";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>932</wp:comment_id>
			<wp:comment_author><![CDATA[Luis]]></wp:comment_author>
			<wp:comment_author_email>luismufe@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.225.118.247</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 21:25:57</wp:comment_date>
			<wp:comment_date_gmt>2012-11-18 20:25:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey guys!

What's the progress of your work? Did you run into too difficult a hurdle that you had to stop the project?

I just stumbled on this blog entry and got my hopes high until I saw the date of the post.

Anyway this is very interesting stuff, and it would be great if you could release your work into the public domain if you are not able to continue working on it.

Cheers,

Luis]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1356217455.122147083282470703125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353270357.1029";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>262</wp:comment_id>
			<wp:comment_author><![CDATA[GroovyMag - the magazine for Groovy and Grails developers about Groovy programming and Grails development]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.groovymag.com/2011/08/16-news-roundup/</wp:comment_author_url>
			<wp:comment_author_IP>2001:470:7:926::2</wp:comment_author_IP>
			<wp:comment_date>2011-08-16 17:02:12</wp:comment_date>
			<wp:comment_date_gmt>2011-08-16 15:02:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Pragt has put up another update on Discobot, the ongoing project whose end is to get Groovy running on Android. The Jworks folks [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313513338.5849";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313506932.7258";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>GStringImpl cannot be cast to java.lang.String</title>
		<link>http://www.jworks.nl/2011/08/29/gstringimpl-cannot-be-cast-to-java-lang-string/</link>
		<pubDate>Mon, 29 Aug 2011 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[Last week, we got a nasty error in our application:

<blockquote>
java.lang.ClassCastException: org.codehaus.groovy.runtime.GStringImpl cannot be cast to java.lang.String
</blockquote>

The stacktrace was not helpful at all, and showed that the error was caused by a NullPointerException in Melody, which was a false message. After some searching around, we found the following code to be the culprit:

<pre class="brush:groovy">
render(view: 'index', model: ["${command.class.simpleName}": command)
</pre>

What happens here, is that a GString is used as a map key for rendering the model in the view. It's never a good idea to use <a href="http://codenarc.sourceforge.net/codenarc-rules-basic.html" title="CodeNarc Basic Rules" target="_blank">GStrings as a Map key</a>, since the hashCode of GStrings are not guaranteed to be stable. A better approach is to use a String instead, which can be done using the following code:

<pre class="brush:groovy">
render(view: 'index', model: [(command.class.simpleName): command)
</pre>

The above is our current fix, and we changed our <a href="http://codenarc.sourceforge.net" title="CodeNarc" target="_blank">CodeNarc</a> GString as Map key to a prio 1 rule. Whenever a prio 1 error occurs, our build will fail, preventing future errors like this.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2011-08-29 10:00:00</wp:post_date>
		<wp:post_date_gmt>2011-08-29 08:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gstringimpl-cannot-be-cast-to-java-lang-string</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422762628]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:17:"25.22909770144848";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:18:"19.393556237279924";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:17:"18.00726187616003";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:17:"18.00726187616003";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"18.00726187616003";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:18:"17.560974773531612";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>644</wp:comment_id>
			<wp:comment_author><![CDATA[virtualeyes]]></wp:comment_author>
			<wp:comment_author_email>sit1way@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.174.183.150</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 18:54:05</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 16:54:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fabulous find Erik, thanks.

Truly useless stacktrace as far as quickly pinning down the error, although better than MME at line -1 of unknown class.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1317058300.284";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317056045.4281";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>561</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-35)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=908</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-09-05 16:37:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-05 14:37:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] GStringImpl cannot be cast to java.lang.String [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315233471.8586";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315236066.4693";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Testing Grails applications with Geb and JsTestDriver on a headless Bamboo CI server</title>
		<link>http://www.jworks.nl/2011/08/24/testing-grails-applications-with-geb-and-jstestdriver-on-a-headless-bamboo-ci-server/</link>
		<pubDate>Wed, 24 Aug 2011 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[In our project we are using two testing tools - Geb and JsTestDriver. <a href="http://gebish.org">Geb</a> is a tool for functional testing of web applications and is basically a layer on the top of Selenium's WebDriver so that the test you write are more groovy and more fun to write. <a href="http://code.google.com/p/js-test-driver/">JsTestDriver</a> on the other hand is a tool for unit testing javascript in your project. Together with <a href="http://sinonjs.org/">Sinon.JS</a> which is a javascript mocking framework they give you an easy solution to get your javascript code unit tested.

Both of the aforementioned frameworks need real browsers to run. This is good on one side, because you are actually testing your application in real environment in which it will be used. On the other hand it is nasty if your continuous integration server is headless. You might ask how to run a browser if there is no window management / graphical environment installed. Fortunatelly there is a solution - Xvfb which provides a virtual screen. So now, all you need is to install it, make sure that it is started during booting and configure the testing tools to use a virtual screen instead of a real one.

Xvfb is quite popular and is probably packaged for most of the mainstream Linux distros - on Ubuntu you can easily install it using apt-get. Unfortunately it doesn't come with service scripts nor is started during booting by default. After googling for a while I was able to find the folowing startup script for Xvfb which I put into '/etc/init.d/xvfbd':

<pre class="brush:bash">#!/bin/bash 
# 
# Author: Brian Connolly (LabKey.org) 
# 
# chkconfig: 345 98 90 
# description: Starts Virtual Framebuffer process to enable the  
# LabKey server to use R. 
# 
#

XVFB_OUTPUT=/tmp/Xvfb.out
XVFB=/usr/bin/Xvfb
XVFB_OPTIONS=":99 -ac"

start() {
        echo -n "Starting : X Virtual Frame Buffer "            
        $XVFB $XVFB_OPTIONS >>$XVFB_OUTPUT 2>&1&
        RETVAL=$?
        echo            
        return $RETVAL
}

stop() {
        echo -n "Shutting down : X Virtual Frame Buffer"            
        echo            
        killall Xvfb
        return 0
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        *)
                echo "Usage: xvfbd {start|stop}"            
                exit 1
                ;;

esac
exit $?
</pre>

As you can see it is extremely simple as it biggest objective is to get the Xvfb running during booting. The approach to stopping is maybe not the cleanest one but my bash skills aren't the best. Nevertheless note that in XVFB_OPTIONS variable we're saying that we want Xfvb to create a screen number 99 for us. It's important as we will use that value later on. Having a service script we now just have to link it from '/etc/rc*.d' directories so it's picked up during startup and shutdown of the server.

If you use Geb for testing a Grails application then running the tests is a piece of cake - all you have to do is call: 'grails test-app functional:'. This is not the case for JsTestDriver tests which are executed using a standalone jar which is not integrated with Grails what so ever. As running the JsTestDriver involves setting a lot of switches and one of the parameters is actually the path to your browser I decided to create a bash script for it and then wrap it into a grails script so that it's easier to run from Bamboo. That's the source to the bash script which lands in 'test/js' subdirectory of your Grails application together with the JsTestDriver.jar and jsTestDriver.conf files:

<pre class="brush:bash">#!/bin/bash
FIREFOX=`which firefox`
if [ "$?" -eq 1 ];
then
  echo "Firefox not found."
  exit 1
fi

# run the tests
java -jar JsTestDriver-1.3.1.jar --port 9876 --config jsTestDriver.conf --browser $FIREFOX --tests all --testOutput "../../target/js-test-reports"
RESULT=$?

exit $RESULT
</pre>

And here comes the really simple 'RunJsTests.groovy' script:
<pre class="brush:groovy">target('default': 'Runs JsTestDriver tests') {
    ant.mkdir(dir: 'target/js-test-reports')
    ant.exec(executable: './run.sh', dir: 'test/js', failonerror: true)
}
</pre>

Finally the Bamboo configuration. Apart from running the tests the most important part is to set the 'DISPLAY' environment variable in your Bamboo Grails task to ':99'. This will tell the browsers that are started to use the display number 99 which is handled by Xvfb. The following screenshot shows where you can set the environment variables in your Bamboo Grails build task:
<a href="http://www.jworks.nl/wp-content/uploads/2011/08/Selection_045.png"><img src="http://www.jworks.nl/wp-content/uploads/2011/08/Selection_045-300x131.png" alt="Setting Bamboo for testing with Xfvb" title="Setting Bamboo for testing with Xfvb" width="300" height="131" class="aligncenter size-medium wp-image-322" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date>2011-08-24 10:00:00</wp:post_date>
		<wp:post_date_gmt>2011-08-24 08:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-grails-applications-with-geb-and-jstestdriver-on-a-headless-bamboo-ci-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423123552]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"30.08864754520298";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"23.88846296739246";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"341";s:5:"score";s:17:"23.57382948761637";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:18:"17.477557358374394";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:18:"14.650170687812437";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:18:"14.650170687812437";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-34)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=889</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-08-30 07:06:50</wp:comment_date>
			<wp:comment_date_gmt>2011-08-30 05:06:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Testing Grails applications with Geb and JsTestDriver on a headless Bamboo CI server [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314680810.3545";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314717637.9425";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Maximizing browser window for all Geb tests</title>
		<link>http://www.jworks.nl/2011/10/06/maximizing-browser-window-for-all-geb-tests/</link>
		<pubDate>Thu, 06 Oct 2011 12:10:00 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=341</guid>
		<description></description>
		<content:encoded><![CDATA[There might be different reasons for setting a browser window size for your Geb tests. For us it was simply the fact that some floating elements where overlapping with other elements rendering them unclickable when the browser window was set to occupy only the half of the screen and that's the default size of a Firefox window started by Webdriver.

There were two requirements for the solution - it had to work on every machine the tests were run without any configuration (so we had to discard all of the solutions involving changing the Firefox profile) and also the window had to be maximized for each of our tests. Unfortunately WebDriver doesn't allow to easily control browser window size, at least as long as <a href="http://code.google.com/p/selenium/issues/detail?id=174" target="_blank">this issue</a> isn't solved. Therefore we had to revert to resizing the window via Javascript which we don't like, but it seems to be the only solution for now. Thanks to putting the code into our GebConfig.groovy we got the window maximized for every test. Following is the driver closure we needed to put in our Geb config:

<pre class="brush: groovy">driver = {
    def driver = new FirefoxDriver()
    driver.executeScript("window.resizeTo(screen.width, screen.height)")
    return driver
}</pre>

Note that you can use a similar technique to not only maximize but also set the window to a certain size and to do it on a per test basis if you put the resizing code into your test instead of the GebConfig.groovy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2011-10-06 14:10:00</wp:post_date>
		<wp:post_date_gmt>2011-10-06 12:10:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maximizing-browser-window-for-all-geb-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="geb"><![CDATA[Geb]]></category>
		<category domain="post_tag" nicename="geb-2"><![CDATA[geb]]></category>
		<category domain="post_tag" nicename="geb-config"><![CDATA[geb config]]></category>
		<category domain="post_tag" nicename="maximizing-browser"><![CDATA[maximizing browser]]></category>
		<category domain="post_tag" nicename="webdriver"><![CDATA[webdriver]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422992041]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"312";s:5:"score";s:17:"23.57382948761637";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"13.133117837459718";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:17:"12.55775369261021";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:17:"9.941088053309853";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:17:"8.108506589561543";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"359";s:5:"score";s:17:"7.641276887198533";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>897</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Erdmann]]></wp:comment_author>
			<wp:comment_author_email>marcin.erdmann@proxerd.pl</wp:comment_author_email>
			<wp:comment_author_url>http://blog.proxerd.pl</wp:comment_author_url>
			<wp:comment_author_IP>80.238.1.134</wp:comment_author_IP>
			<wp:comment_date>2012-08-31 12:11:56</wp:comment_date>
			<wp:comment_date_gmt>2012-08-31 10:11:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks like comment 49 of http://code.google.com/p/selenium/issues/detail?id=174#c49 has a more up to date solution, especially for the Firefox driver.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346407916.5555";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1346412057.886";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>893</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>mkortkam@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.64.27.246</wp:comment_author_IP>
			<wp:comment_date>2012-08-30 13:42:59</wp:comment_date>
			<wp:comment_date_gmt>2012-08-30 11:42:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi.

Thanks for sharing the nice idea, but this doen't seem to resize my  window with 0.7.2 geb version.

Do you know of any other ways to affect the browsers window size?

Best regards

John]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346326979.1018";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346370264.8165";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>This week in Discobot (40.2011)</title>
		<link>http://www.jworks.nl/2011/10/14/this-week-in-discobot-40-2011/</link>
		<pubDate>Fri, 14 Oct 2011 19:41:24 +0000</pubDate>
		<dc:creator><![CDATA[marcin]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=352</guid>
		<description></description>
		<content:encoded><![CDATA[After some hectic times at work caused by very tight deadlines and me getting married in the beginning of September we finally managed with Erik to get back to working on Discobot last week.

Some of you have probably already noticed that we have a <a href="http://skillsmatter.com/podcast/groovy-grails/groovy-android" target="_blank">talk</a> on Discobot scheduled at Groovy & Grails Exchange 2011 in London which takes place in early December. Although the progress is good there is still quite a lot of work to be done on Discobot and we decided that probably one evening a week will not be enough. On the other hand knowing about the talk gives us an even stronger motivation to succeed!

Last week Erik continued his work on getting all Groovy tests running in the emulator. We found out that 'on the fly generated' classes which are created by Groovy when you for example cast a map of closure into a class using 'as' keyword cannot be loaded by the classloader. The reason is simple - classloader looks for class files but it should be looking for dex files. This is our main concern at the moment as it causes exceptions all over the place and breaks anything more complex than a 'hello world'. From the code written by Hjalmar we've noticed that he also encountered the problem and we're trying to apply his solution to see if it will work. So, it looks like there's a lot of class loading fun ahead of us!

We've also got a response from guys behind Gradle plugin for Android about our pull request. They had several small remarks which I managed include in my second pull request. From what they said it looks like they should accept it in the coming days.

I've also looked for options regarding a repository in which to put our artefacts (Gradle plugin and the modyfied version of Groovy). I've found a nice blog about creating a a github based Maven repository and using it with Gradle. It seems easy and straightforward so probably we will go for this solution for now.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2011-10-14 21:41:24</wp:post_date>
		<wp:post_date_gmt>2011-10-14 19:41:24</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-discobot-40-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423142223]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:17:"47.31692348548731";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:17:"44.64692135196857";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"35.68684951132044";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"359";s:5:"score";s:18:"26.462793792999392";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:17:"19.58766374071171";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"19.58766374071171";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>672</wp:comment_id>
			<wp:comment_author><![CDATA[&raquo; Blog Archive]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.luca-canducci.com/2011/10/questa-settimana-in-grails-2011-41/</wp:comment_author_url>
			<wp:comment_author_IP>62.149.141.127</wp:comment_author_IP>
			<wp:comment_date>2011-10-16 21:36:49</wp:comment_date>
			<wp:comment_date_gmt>2011-10-16 19:36:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This week in Discobot (40.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1318797301.9436";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>673</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-41)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=961</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-10-17 07:52:12</wp:comment_date>
			<wp:comment_date_gmt>2011-10-17 05:52:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This week in Discobot (40.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1318830732.2151";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1319318653.8462";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>690</wp:comment_id>
			<wp:comment_author><![CDATA[doti]]></wp:comment_author>
			<wp:comment_author_email>iamdoti@yopmail.fr</wp:comment_author_email>
			<wp:comment_author_url>http://ss.deviatenow.com</wp:comment_author_url>
			<wp:comment_author_IP>80.214.9.43</wp:comment_author_IP>
			<wp:comment_date>2011-11-08 20:02:24</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 19:02:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As a user of Groovy, and developper on Android, let me say you that some (As I could see, I'm far from alone) are waiting eagerly for some beta releases of your work. 

Good luck for those hurdles !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320779129.0247";s:7:"message";s:45:"marcin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"marcin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320778944.5392";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>This week in Discobot (45.2011)</title>
		<link>http://www.jworks.nl/2011/11/11/this-week-in-discobot-45-2011/</link>
		<pubDate>Fri, 11 Nov 2011 08:07:42 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[Another night of coding, another update on the Discobot project! For those unfamiliar with the Discobot project: it's the project name for running Groovy on Android. We (Marcin Erdmann and Erik Pragt) are working towards an easy to use framework to run the newest version of Groovy on the newest version of Android. Currently, we're not there yet, but we will demonstrate our progress at the next <a href="http://skillsmatter.com/event/groovy-grails/groovy-grails-exchange-2011" target="_blank">Groovy and Grails Exchange</a> in London.

A small update though on our current progress, since it has been a while since our last update, and we've gotten a few requests to update you all. To start with: the project is still very alive, and we are working hard to create a streamlined environment for developing Groovy Android applications, including <a href="http://www.gradle.org">Gradle</a> support, with some tasks to easily deploy your Groovy application on the Android emulator.

The last couple of weeks we've been struggling to work with the dynamics provided by Groovy. Groovy works a bit different compared to the standard Java runtime in Android. A small example:

<pre class="brush: groovy">
class B { 
  def pub() {'a'} 
} 

def x = [pub: {'b'}] as B
</pre>

This code dynamically creates a class at runtime. We have to make the Android environment aware of these classes, which is done by the DiscobotClassloader. This is quite tricky to accomplish, but the good news is, that after some days and nights of coding, it works now. Basic Groovy code, like 
<pre class='brush: groovy'>[1,2,3].each { println it }</pre> was already working for quite some time, but now we support a great deal of the features provided by Groovy already at the moment. Even though we haven't measured yet how far we are exactly in terms of features, but we're on the right way.

<iframe width="560" height="315" src="http://www.youtube.com/embed/NRiISubrnQg?hd=1" frameborder="0" allowfullscreen></iframe>

What we'll do now though, is to create an Android application which will run all Groovy unit tests. We've done it before, and around 30% of the unit tests worked on the Android emulator. Now, with the support for dynamically generating classes, which was one of the biggest problem, we should get far above this 30%. So, please bear with us and we'll keep update you on the progress we'll make. In the meantime, you can follow the progress we're making in our <a href="https://github.com/disco-bot/disco-bot/tree/discobot-patches" target="_blank">Git repository</a>!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2011-11-11 09:07:42</wp:post_date>
		<wp:post_date_gmt>2011-11-11 08:07:42</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-discobot-45-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="discobot-2"><![CDATA[Discobot]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423142203]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:17:"38.78197615487912";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"37.28754735121867";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:18:"31.584985369695893";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"128";s:5:"score";s:17:"28.75759869913393";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"352";s:5:"score";s:18:"26.462793792999392";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"18.979213415370506";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>707</wp:comment_id>
			<wp:comment_author><![CDATA[Christian Paulsen]]></wp:comment_author>
			<wp:comment_author_email>c-w-p@t-online.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.23.27.10</wp:comment_author_IP>
			<wp:comment_date>2011-12-09 09:16:56</wp:comment_date>
			<wp:comment_date_gmt>2011-12-09 08:16:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good news for all. who like to use groovy also for development of Android Apps!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323418616.8004";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>698</wp:comment_id>
			<wp:comment_author><![CDATA[&raquo; Blog Archive]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.luca-canducci.com/2011/11/questa-settimana-in-grails-2011-45/</wp:comment_author_url>
			<wp:comment_author_IP>62.149.141.127</wp:comment_author_IP>
			<wp:comment_date>2011-11-14 14:33:03</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 13:33:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This week in Discobot (45.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321286593.2227";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>824</wp:comment_id>
			<wp:comment_author><![CDATA[Robert James]]></wp:comment_author>
			<wp:comment_author_email>robert.james@metasystems.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.34.191.186</wp:comment_author_IP>
			<wp:comment_date>2012-07-12 22:28:46</wp:comment_date>
			<wp:comment_date_gmt>2012-07-12 20:28:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just wondering if there has been any further progress?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342165366.0113";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342124926.3315";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>825</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.58.16.80</wp:comment_author_IP>
			<wp:comment_date>2012-07-13 09:44:08</wp:comment_date>
			<wp:comment_date_gmt>2012-07-13 07:44:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Robert,

Unfortunately not. We sort of lost interest in the project, and are busy with other things. If you want to contribute, checkout the discobot source on GitHub. The code is (mostly) working, and you should be able to run the GroovyConsole on your phone, if you want.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>824</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342165448.3162";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>709</wp:comment_id>
			<wp:comment_author><![CDATA[javaguy44]]></wp:comment_author>
			<wp:comment_author_email>javaguy44@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.158.113.111</wp:comment_author_IP>
			<wp:comment_date>2011-12-10 21:49:08</wp:comment_date>
			<wp:comment_date_gmt>2011-12-10 20:49:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great effort guys!  Count me as someone else who is really looking forward to writing in Groovy for Android apps...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1323552535.771";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323550148.2567";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>699</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2011-45)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=1016</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2011-11-14 16:47:31</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 15:47:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This week in Discobot (45.2011) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321285651.2786";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321385455.8009";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Testing Command Objects in Grails 2.0</title>
		<link>http://www.jworks.nl/2012/04/12/testing-command-objects-in-grails-2-0/</link>
		<pubDate>Thu, 12 Apr 2012 14:24:35 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[In Grails 2.0, you need to use mockCommandObject to test command objects. However, what the <a href="http://grails.org/doc/latest/guide/testing.html#unitTestingControllers" title="Unit testing controllers" target="_blank">Grails documentation</a> doesn't mention is how to use the mockCommandObject method. The mockCommandObject method is located in the ControllerUnitTestMixin. To use the method, you can use the following example:
 
<pre class="brush:groovy">
package nl.jworks.test

import grails.test.mixin.TestMixin
import grails.test.mixin.web.ControllerUnitTestMixin

@TestMixin(ControllerUnitTestMixin)
class CreatePersonCommandTests {
    
    void testInvalidConstraints() {
        CreatePersonCommand command = mockCommandObject CreatePersonCommand
        command.name = ''

        assert !command.validate()
    }
}
</pre>

This is a little inconvenient if your class needs a lot of properties. To make things a little easier, you can mock the command object in the setup method (using JUnit's @Before annotation), and use the default constructor (with Map support), as you would normally:

<pre class="brush:groovy">
package nl.jworks.test

import grails.test.mixin.TestMixin
import grails.test.mixin.web.ControllerUnitTestMixin
import org.junit.Before

@TestMixin(ControllerUnitTestMixin)
class CreatePersonCommandTests {

    @Before
    void setup() {
        mockCommandObject CreatePersonCommand
    }
    
    void testInvalidConstraints() {
        CreatePersonCommand command = new CreatePersonCommand(name:  '')

        assert !command.validate()
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2012-04-12 16:24:35</wp:post_date>
		<wp:post_date_gmt>2012-04-12 14:24:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-command-objects-in-grails-2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="command-objects"><![CDATA[command objects]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2-0"><![CDATA[grails 2.0]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422869910]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:17:"47.72758386015025";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:17:"46.14412784106385";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"43.835763561634224";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:18:"28.569593694291207";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:18:"28.569593694291207";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:18:"28.364108543863228";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>860</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2012-08-12 10:13:07</wp:comment_date>
			<wp:comment_date_gmt>2012-08-12 08:13:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sure, but the CreatePersonCommand is not much more than:

<pre class="brush: java">
class CreatePersonCommand {
    String name

    static constraints = {
        name blank:false
    }
}
</pre>

Hope that helps!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>852</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344759187.6416";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>852</wp:comment_id>
			<wp:comment_author><![CDATA[j4y]]></wp:comment_author>
			<wp:comment_author_email>jayprall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://j4y.net</wp:comment_author_url>
			<wp:comment_author_IP>24.147.191.24</wp:comment_author_IP>
			<wp:comment_date>2012-08-10 02:49:30</wp:comment_date>
			<wp:comment_date_gmt>2012-08-10 00:49:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks.  It would be useful to show the definition of CreatePersonCommand.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344759104.2554";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344559770.3173";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>951</wp:comment_id>
			<wp:comment_author><![CDATA[JMorris]]></wp:comment_author>
			<wp:comment_author_email>jmorrispa@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.219.1.1</wp:comment_author_IP>
			<wp:comment_date>2013-01-11 17:34:33</wp:comment_date>
			<wp:comment_date_gmt>2013-01-11 16:34:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357922988.0826900005340576171875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357922073.731689929962158203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Printing output in Grails 2.0 ant scripts</title>
		<link>http://www.jworks.nl/2012/04/16/printing-output-in-grails-2-0-ant-scripts/</link>
		<pubDate>Mon, 16 Apr 2012 08:12:18 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=398</guid>
		<description></description>
		<content:encoded><![CDATA[When developing plugins, in my case the <a href="http://grails.org/plugin/fitnesse" target="_blank">Grails Fitnesse</a> plugin, it's sometimes handy to produce output to the user. In my case, I had a use case to give the user some information that Fitnesse had started up succesfully, and wanted to indicate the location Fitnesse was running on.

In previous versions of Grails (1.3.x), you could do ant ant.echo. However, as described in the <a href="http://grails.org/doc/latest/guide/gettingStarted.html#upgradingFromPreviousVersionsOfGrails" title="Upgrading from previous versions of Grails" target="_blank">Grails 2.0 release notes</a>, the ant.echo doesn't work anymore, and you'll have to use 'alternative mechanisms for output'. 

Well, <a href="grails.org/plugin/spring-security-core" title="Spring Security Core Plugin" target="_blank">Spring Security Core</a> had this already figured out. Just send a StatusUpdate event, which will be printed to the console automatically.

<pre class="brush: groovy">
target('default': 'Starts Fitnesse Server') {
    printMessage "hello world!"
}

printMessage = { String message -> event('StatusUpdate', [message]) }
errorMessage = { String message -> event('StatusError', [message]) }
</pre>

This be handy in the future for other plugin developers.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2012-04-16 10:12:18</wp:post_date>
		<wp:post_date_gmt>2012-04-16 08:12:18</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>printing-output-in-grails-2-0-ant-scripts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423008073]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:18:"17.928235241670226";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:17:"17.56359212802826";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"865";s:5:"score";s:17:"15.07383374374858";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"414";s:5:"score";s:18:"14.450003770293067";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:18:"14.450003770293067";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:18:"13.274430440434775";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>722</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Follett]]></wp:comment_author>
			<wp:comment_author_email>matt.follett@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfollett.com</wp:comment_author_url>
			<wp:comment_author_IP>209.135.144.234</wp:comment_author_IP>
			<wp:comment_date>2012-04-16 22:34:45</wp:comment_date>
			<wp:comment_date_gmt>2012-04-16 20:34:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I didn't know that you could do it like that. I have been using a different approach which is to use the methods provided by grailsConsole, e.g.:
`grailsConsole.addStatus "message"`
or
`grailsConsole.updateState "message"`]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334608485.4188";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334608692.2198";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>723</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.73.97.122</wp:comment_author_IP>
			<wp:comment_date>2012-04-16 22:38:58</wp:comment_date>
			<wp:comment_date_gmt>2012-04-16 20:38:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Matt,
Thanks for the reply. You are right, I actually only discovered that today while checking out _GrailsTest.groovy. I'll update the code!
Thanks, Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>722</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334608738.5595";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>731</wp:comment_id>
			<wp:comment_author><![CDATA[Burt Beckwith]]></wp:comment_author>
			<wp:comment_author_email>beckwithb@vmware.com</wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>98.216.108.231</wp:comment_author_IP>
			<wp:comment_date>2012-04-18 05:43:41</wp:comment_date>
			<wp:comment_date_gmt>2012-04-18 03:43:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[grailsConsole is new for 2.0, so if you're targeting 2.0+ you can use that, but using events works with all versions of Grails.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334728835.7497";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334720621.8969";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Grails in the Cloud - NLGUG meetup</title>
		<link>http://www.jworks.nl/2012/04/19/grails-in-the-cloud-nlgug-meetup/</link>
		<pubDate>Thu, 19 Apr 2012 08:22:29 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://www.jworks.nl/wp-content/uploads/2012/04/Cloud-words.jpg" alt="" title="Cloud-words" width="500" height="325" class="aligncenter size-full wp-image-406" />

At Tuesday, May the 8th, The NLGUG is organizing a new meetup about <a href="http://www.meetup.com/nl-gug/events/59221612/" target="_blank">Grails in the Cloud</a>. 

The meetup will consist of a talk by Maikel Alderhout, who is an expert on the topic, and will be followed up by Pair Deploying, in which pairs will deploy an existing Grails application to a PaaS of their choice, for example <a href="http://www.cloudbees.com" target="_blank">CloudBees</a>, <a href="http://www.cloudfoundry.com" target="_blank">CloudFoundry</a>, <a href="http://www.heroku.com" target="_blank">Heroku</a>, <a href="http://www.openshift.com" target="_blank">OpenShift</a> or <a href="http://www.jelastic.com" target="_blank">JElastic</a>.

The meetup is free, and will be kindly hosted by <a href="http://www.quince.nl" title="Quince.nl" target="_blank">Quince</a>, who will also be providing food and drinks! So if you want to join, checkout the <a href="http://www.meetup.com/nl-gug/events/59221612/" title="NLGUG Meetup page" target="_blank">meetup page</a> and join us!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2012-04-19 10:22:29</wp:post_date>
		<wp:post_date_gmt>2012-04-19 08:22:29</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grails-in-the-cloud-nlgug-meetup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422931402]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"18.904486754175355";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"107";s:5:"score";s:18:"18.904486754175355";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:17:"14.69080572249351";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:17:"14.69080572249351";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:17:"14.69080572249351";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:17:"14.69080572249351";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Using GitHub behind a proxy</title>
		<link>http://www.jworks.nl/2012/04/20/using-github-behind-a-proxy/</link>
		<pubDate>Fri, 20 Apr 2012 10:55:03 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[At my customer, we are using a proxy server, and sometimes it's handy to have access to GitHub, for example to the Grails repository, or my own Grails Fitnesse repo. I struggled a while to get this to work, but apparently, it couldn't be easier:

<code>
export HTTPS_PROXY='http://10.0.0.1:3128'
git clone https://bodiam@github.com/bodiam/grails-fitnesse.git
</code>

Using the https protocol, you can commit your changes over https instead of using the git protocol, and it's still really fast.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2012-04-20 12:55:03</wp:post_date>
		<wp:post_date_gmt>2012-04-20 10:55:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-github-behind-a-proxy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[using-github-begind-a-proxy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423472092]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"36.10917912644224";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:18:"25.310156482359805";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"398";s:5:"score";s:18:"14.450003770293067";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:18:"14.450003770293067";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"13.632741434306514";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:18:"13.509996511801596";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Debugging Tomcat SEVERE: Error filterStart or listenerStart</title>
		<link>http://www.jworks.nl/2012/05/21/debugging-tomcat-severe-error-filterstart-or-listenerstart/</link>
		<pubDate>Mon, 21 May 2012 15:26:20 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[Today, we spent quite some time debugging our Grails application to find out why in 'grails run-app', the application worked fine, however, when running the application in Tomcat (6.0.35), an error popped up. The error not quite helpful indeed: SEVERE: Error filterStart.

To debug this, after some Googling, which pointed us into the wrong direction, I downloaded the Tomcat source and found the issue. All you have to do is change the <strong>logging.properties</strong> file in your TOMCAT_HOME/conf directory, and add the following:

<pre>
org.apache.catalina.core.StandardContext.[Catalina].level = ALL
org.apache.catalina.core.StandardContext.[Catalina].handlers = java.util.logging.ConsoleHandler
</pre>

This showed us the stacktrace, and pointed us in the direction of Spring Security Core (org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'springSecurityFilterChain' is defined), which will hopefully be a blog for tomorrow ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2012-05-21 17:26:20</wp:post_date>
		<wp:post_date_gmt>2012-05-21 15:26:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugging-tomcat-severe-error-filterstart-or-listenerstart</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debug"><![CDATA[debug]]></category>
		<category domain="post_tag" nicename="error"><![CDATA[error]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="tomcat"><![CDATA[tomcat]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422582830]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"475";s:5:"score";s:16:"49.5885514118652";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"189";s:5:"score";s:18:"28.402582246641654";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:18:"27.121575352600715";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"218";s:5:"score";s:17:"26.09992410512279";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:18:"24.924350775264493";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:18:"24.188901214959806";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>876</wp:comment_id>
			<wp:comment_author><![CDATA[Questa settimana in Grails (2012-21) - luca-canducci.com - Il blog di Luca Canducci: notizie, tips e nuove tecnologie dal mondo dell’IT.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.luca-canducci.com/2012/05/questa-settimana-in-grails-2012-21/</wp:comment_author_url>
			<wp:comment_author_IP>62.149.141.129</wp:comment_author_IP>
			<wp:comment_date>2012-08-17 14:36:45</wp:comment_date>
			<wp:comment_date_gmt>2012-08-17 12:36:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Debugging Tomcat SEVERE: Error filterStart or listenerStart [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345207005.9757";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345228581.7065";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>799</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2012-21)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://burtbeckwith.com/blog/?p=1387</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2012-05-28 18:51:17</wp:comment_date>
			<wp:comment_date_gmt>2012-05-28 16:51:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Debugging Tomcat SEVERE: Error filterStart or listenerStart [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338223877.7749";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339426353.2445";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Calling Oracle Functions using the Spring Framework</title>
		<link>http://www.jworks.nl/2012/07/23/calling-oracle-functions-using-the-spring-framework/</link>
		<pubDate>Mon, 23 Jul 2012 13:48:44 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=430</guid>
		<description></description>
		<content:encoded><![CDATA[Consider you have a function like this:

<code>
  function get_content_value ( p_type     numberic(10,0)
                             , p_name     varchar2
                             )
  return clob;
</code>

And you want to call this function using Spring. One of the easiest way to do this is by using the Spring StoredProcedure. There are some small things to consider though, when using this class to call Oracle Functions.

Calling the above function can be done like this:

<pre class="brush:java">
public class OracleStoredProcedure extends StoredProcedure {
    private static final String SQL = "company_package.get_content_value";

    /** Parameter declared for the SQL input. */
    private static final String SQL_PARAMETER2 = "p_type";
    private static final String SQL_PARAMETER3 = "p_name";

    /** Parameter declared for the SQL output. */
    private static final String SQL_OUT_PARAMETER = "RETURN_VALUE";

    public JdbcOrderContentStoredProcedure(final DataSource dataSource) {
        super(dataSource, SQL);

        /** important that the out parameter is defined before the in parameter. */
        declareParameter(new SqlOutParameter(SQL_OUT_PARAMETER, Types.CLOB));  

        declareParameter(new SqlParameter(SQL_PARAMETER1, Types.NUMERIC));
        declareParameter(new SqlParameter(SQL_PARAMETER2, Types.VARCHAR));
        declareParameter(new SqlParameter(SQL_PARAMETER3, Types.VARCHAR));
        declareParameter(new SqlParameter(SQL_PARAMETER4, Types.NUMERIC));

        /** use function instead of stored procedure */
        setFunction(true);   

        compile();
    }
}
</pre>

So, in short, the trick is to:
<ul>
<li>Define output parameters before the input parameters</li>
<li>Call the setFunction(true) method</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date>2012-07-23 15:48:44</wp:post_date>
		<wp:post_date_gmt>2012-07-23 13:48:44</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calling-oracle-functions-using-the-spring-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="functions"><![CDATA[functions]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="oracle"><![CDATA[oracle]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422904226]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"446";s:5:"score";s:17:"45.95288419761066";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"42.061063899229765";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:17:"38.73104837232221";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"475";s:5:"score";s:18:"34.014738484105585";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"437";s:5:"score";s:18:"29.055834885544158";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:17:"14.29030250169334";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>906</wp:comment_id>
			<wp:comment_author><![CDATA[Marcel]]></wp:comment_author>
			<wp:comment_author_email>fjacome@iess.gob.ec</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.24.215.217</wp:comment_author_IP>
			<wp:comment_date>2012-10-11 19:51:43</wp:comment_date>
			<wp:comment_date_gmt>2012-10-11 17:51:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
How can a call a function that has in and out parameters

   FUNCTION fr_validarcausante_fun (ai_cedula IN frsafitsolafi.numafi%TYPE, ao_men OUT VARCHAR2)
      RETURN NUMBER;

Thanks in advance,]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349977904.2076";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1350478807.4024";s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>907</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2012-10-17 15:03:05</wp:comment_date>
			<wp:comment_date_gmt>2012-10-17 13:03:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Marcel,

Instead of using the SqlParameters, you need to use SqlOutParameters, and you get the result of them using the 'execute()' method of the StoredProcedure. Hope that helps!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>906</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1350478985.2973";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1308</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.38</wp:comment_author_IP>
			<wp:comment_date>2013-06-25 14:50:03</wp:comment_date>
			<wp:comment_date_gmt>2013-06-25 12:50:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Christian,

Not that I know of. I think I found this out by trial and error, and also spent quite some time on this. I hope this blogpost helped you out bit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1307</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372164603.40266895294189453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1307</wp:comment_id>
			<wp:comment_author><![CDATA[Cristian]]></wp:comment_author>
			<wp:comment_author_email>cristian.chiovari@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>158.169.9.14</wp:comment_author_IP>
			<wp:comment_date>2013-06-25 13:37:40</wp:comment_date>
			<wp:comment_date_gmt>2013-06-25 11:37:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I noticed the same thing
"important that the out parameter is defined before the in parameter"

Do you know if this 'feature' who eat half of my day is documented somewhere ?

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372160260.9260470867156982421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372164458.5543239116668701171875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Retrieving Clob Data From Oracle Stored Procedures using Spring</title>
		<link>http://www.jworks.nl/2012/07/25/retrieving-clob-data-from-oracle-stored-procedures-using-spring/</link>
		<pubDate>Wed, 25 Jul 2012 14:01:02 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[Whenever you've got a Function or Stored Procedure in Oracle which returns a Clob, you may have to convert it to a String. This can be done by registering a new SqlReturnType for the SqlParameter.

For example, when using the following function as seen in a <a href="http://www.jworks.nl/2012/07/23/calling-oracle-functions-using-the-spring-framework/" title="Calling Oracle Functions using the Spring Framework">previous blog post</a>:

<code>
function get_content_value ( p_type numberic(10,0)
, p_name varchar2
)
return clob;
</code>

The Clob can be mapped by using the following:

<pre class="brush:java">
declareParameter(new SqlOutParameter(SQL_OUT_PARAMETER, Types.CLOB, null, new ClobReturnType() ));
</pre>

The ClobReturnType looks like this:

<pre class="brush:java">
class ClobReturnType implements SqlReturnType {
    public Object getTypeValue(CallableStatement cs, int paramIndex, int sqlType, String typeName) throws SQLException {
        try {
            final Clob clob= cs.getClob(paramIndex);
            return org.apache.commons.io.IOUtils.toString(clob.getCharacterStream());
        } catch (IOException e) {
            throw new SQLException(e.toString());
        }
    }
}
</pre>

It might help someone in the future.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2012-07-25 16:01:02</wp:post_date>
		<wp:post_date_gmt>2012-07-25 14:01:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>retrieving-clob-data-from-oracle-stored-procedures-using-spring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423030722]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:18:"29.055834885544158";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"904";s:5:"score";s:18:"20.701208110711406";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"17.174030926161663";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"422";s:5:"score";s:18:"15.263008035998679";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:18:"12.457721037945028";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:18:"11.784776564621522";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Getting started with Spring, RabbitMQ and Maven on MacOS</title>
		<link>http://www.jworks.nl/2012/08/06/getting-started-with-spring-rabbitmq-and-maven-on-macos/</link>
		<pubDate>Mon, 06 Aug 2012 18:52:54 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=446</guid>
		<description></description>
		<content:encoded><![CDATA[So, you want to get started with RabbitMQ in a Maven project as soon as possible? Well, bear with me here, and we'll get you up and running in no time!

First things first: you need to install RabbitMQ. You can do this by using <a href="http://www.macports.org" title="MacPorts" target="_blank">MacPorts</a>:
<code>sudo port install rabbitmq-server</code>

After RabbitMQ has been installed and is running, it's time to create the project. Using the following Maven POM and standard Maven structure, we create our project:

<pre class="brush:xml">
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>epub-organizer</artifactId>
        <groupId>epub-organizer</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>epub-organizer-amqp-rabbitmq</artifactId>

    <properties>
        <spring.amqp.version>1.1.1.RELEASE</spring.amqp.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-amqp</artifactId>
            <version>${spring.amqp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
            <version>${spring.amqp.version}</version>
        </dependency>
    </dependencies>
</project>
</pre>

This pom.xml includes all the dependencies needed to make the client connect with RabbitMQ

Next up, is the code to receive some messages, and to produce some messages. We'll call them the Producer and Consumer.

<pre class="brush: java">
package nl.jworks.epub.organizer.amqp.rabbitmq;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class Producer {
    public static void main(String[] args) throws Exception {
        ApplicationContext context = new GenericXmlApplicationContext("applicationContext.xml");
        AmqpTemplate amqpTemplate = context.getBean(AmqpTemplate.class);

        amqpTemplate.convertAndSend("helloworld.queue", "Hello RabbitMQ");
    }
}
</pre>

and the consumer:

<pre class="brush:java">
package nl.jworks.epub.organizer.amqp.rabbitmq;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class Consumer {
    public static void main(String[] args) throws Exception{
        ApplicationContext context = new GenericXmlApplicationContext("applicationContext.xml");
        AmqpTemplate amqpTemplate = context.getBean(AmqpTemplate.class);

        System.out.println(amqpTemplate.receiveAndConvert("helloworld.queue"));
    }
}
</pre>

and we're almost done. All we need now is the Spring applicationContext.xml, which will create the RabbitMQ queue, and wire everything together:

<pre class="brush:xml">
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- A reference to the org.springframework.amqp.rabbit.connection.ConnectionFactory -->
    <rabbit:connection-factory id="connectionFactory"/>

    <!-- Creates a org.springframework.amqp.rabbit.core.RabbitTemplate for access to the broker -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />

    <!-- Creates a org.springframework.amqp.rabbit.core.RabbitAdmin    to manage exchanges, queues and bindings -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- Creates a queue for consumers to retrieve messages -->
    <rabbit:queue name="helloworld.queue"/>
</beans>
</pre>

If you start the Producer now, the Producer will send a message to the automatically created queue (you can see this in the <a href="http://localhost:55672/#/queues" target="_blank">web console</a>). When running the Consumer, it will get the message from the RabbitMQ queue, and will convert and display it in the console. Now you've sent your first message on RabbitMQ!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2012-08-06 20:52:54</wp:post_date>
		<wp:post_date_gmt>2012-08-06 18:52:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-spring-rabbitmq-and-maven-on-macos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="macos"><![CDATA[macos]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="rabbitmq"><![CDATA[rabbitmq]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ebf4e5c7ef3a939fe9deb8b020ba0a1f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4c68db14b123d1bcae27197044a05505</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_55b5a06a8accff2cc30e2b1e2970e0ba</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d5b688d06a57b08b0973631bda73da47</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422765991]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:16:"98.8755488760505";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"460";s:5:"score";s:18:"46.558556837733256";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:17:"45.95288419761066";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"41.450300600343624";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"475";s:5:"score";s:18:"34.014738484105585";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:18:"16.809387812519695";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Getting started with Camel, Spring and Maven</title>
		<link>http://www.jworks.nl/2012/08/08/getting-started-with-camel-spring-and-maven/</link>
		<pubDate>Wed, 08 Aug 2012 18:53:52 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[Getting up and running with Camel is not so hard, once you know how to do it. It took me a little more time than I wanted despite the extensive amount of examples provides by Camel. This post should help you get an up and running example in no time!

To start, I'll start with the pom.xml:

<pre class="brush:xml">
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>epub-organizer</artifactId>
        <groupId>epub-organizer</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>camel</artifactId>

    <properties>
            <camel.version>2.10.0</camel.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.version}</version>
        </dependency>
    </dependencies>
</project>
</pre>

This setups a simple application. Next, we'll create a Camel route:

<pre class="brush:java">
package nl.jworks.epub.organizer.routes;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.spring.Main;

public class MyRouteBuilder extends RouteBuilder {
    public static void main(String[] args) throws Exception {
        new Main().run(args);
    }

    public void configure() {
        // set up a listener on the file component
        from("file://target/test?noop=true").beanRef("myProcessor", "process");
    }
}
</pre>

The nice thing here is that a route is also executable, which makes testing of the route really easy. As you can see here, the application is looking into the target location, and will process everything found there by giving an Exchange to the process method of the myProcessor bean. This bean is wired in the camel-context.xml, which should be placed in the <code>src/main/resources/META-INF/spring</code> directory.

<pre class="brush:xml">
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <package>nl.jworks.epub.organizer.routes</package>
    </camelContext>

    <bean id="myProcessor" class="nl.jworks.epub.organizer.routes.MyProcessor">

    </bean>
</beans>
</pre>

And the MyProcessor bean:

<pre class="brush:java">
package nl.jworks.epub.organizer.routes;

import nl.siegmann.epublib.domain.Book;
import nl.siegmann.epublib.epub.EpubReader;
import org.apache.camel.Exchange;
import org.apache.camel.Message;

import javax.activation.DataHandler;
import java.io.ByteArrayInputStream;
import java.io.IOException;

public class MyProcessor {
    public void process(Exchange exchange) {
        try {
            System.out.println("process");
            Message in = exchange.getIn();
            byte[] file = in.getBody(byte[].class);
            System.out.println("bytes found:" + file.length);
        } catch (IOException e) {
            System.out.println("could not read file: " + e.getMessage());
        }
    }
}
</pre>

And that's it. That should get you up to speed with using Camel, Spring and Maven!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2012-08-08 20:53:52</wp:post_date>
		<wp:post_date_gmt>2012-08-08 18:53:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-camel-spring-and-maven</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="camel"><![CDATA[camel]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422839853]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"446";s:5:"score";s:16:"98.8755488760505";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"460";s:5:"score";s:17:"43.83930460971185";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"475";s:5:"score";s:17:"41.23657430939403";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:17:"38.73104837232221";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:17:"38.73104837232221";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:18:"16.809387812519695";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Getting started with Maven, GXT 3 and GWT 2.5</title>
		<link>http://www.jworks.nl/2012/08/13/getting-started-with-maven-gxt-3-and-gwt-2-5/</link>
		<pubDate>Mon, 13 Aug 2012 19:59:19 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=460</guid>
		<description></description>
		<content:encoded><![CDATA[This guide covers the step by step creation of a Maven GXT 3 project with GWT 2.5. It's based on <a href="http://www.sencha.com/learn/ext-gwt-and-maven/">this</a>, <a href="http://www.sencha.com/learn/sencha-gxt-2x-to-300-migration-guide/">this</a> and <a href="http://neiliscoding.blogspot.nl/2012/05/getting-started-quick-setup-for-gxt-3.html">this</a> document, so thanks for that!

<h5>Step 1: Create the Maven project</h5>

Since we don't want to depend on any Eclipse or IntelliJ features, we'll create a simple project using Maven. The Maven Archetype is really handy in this, and is it's current version, 2.5-rc1 is stable enough to get our HelloWorld application running.

Open the command prompt in the directory you want to create your project in and use the GWT archetype by executing the following command:

<code>
mvn archetype:generate \
    -DarchetypeGroupId=org.codehaus.mojo \
    -DarchetypeArtifactId=gwt-maven-plugin \
    -DarchetypeVersion=2.5.0-rc1 \
    -DgroupId=com.foo.gwt \
    -DartifactId=demo \
    -Dversion=1.0-SNAPSHOT
</code>

I used <b>MyModule</b> as the module name.

<h5>Step 2: Add the GXT dependency</h5>

Open the pom.xml, and add the Sencha repository, the GXT version (3.0), and the GXT dependency:

<pre class="brush:xml">
<properties>
    <gwt.version>2.5.0-rc1</gwt.version>
    <gxt.version>3.0.0</gxt.version>
</properties>

<repositories>
    <repository>
        <id>sencha-commercial-release</id>
        <name>Sencha commercial releases</name>
        <url>https://maven.sencha.com/repo/commercial-release/</url>
    </repository>
</repositories>

<dependencies>
    <dependency>
        &lt;groupId&gt;com.sencha.gxt&lt;/groupId&gt;
        &lt;artifactId&gt;gxt&lt;/artifactId&gt;
        &lt;version&gt;${gxt.version}&lt;/version&gt;
    </dependency>

    <!-- other dependencies here... -->
</dependencies>
</pre>

At this point you should be able to execute
<code>
mvn verify
</code>

After that, verify that GWT specific tasks can be run:
<code>
mvn gwt:run
</code>

<h5>Step 3: Add GXT to the project</h5>

From the <a href="http://www.sencha.com/learn/sencha-gxt-2x-to-300-migration-guide/">migration guide</a>:
<blockquote>The resources required to use GXT are all managed internally now - it is no longer necessary to keep a resources directory up to date. Instead, the GWT ClientBundle feature is used to manage images and stylesheets, making sure they are present as part of the compiled project. It is still necessary to link to a stylesheet from the main html page however - every compiled project will have a reset.css file, used to normalize differences between browsers.</blockquote>

So, open the $MODULE_NAME.html file, and add the following line as the first stylesheet in the file:
<code>
<link rel="stylesheet" type="text/css" href="$MODULE_NAME/reset.css" />
</code>

For example, if your module is called MyModule, add the following:
<pre class="brush: xml">
<link rel="stylesheet" type="text/css" href="MyModule/reset.css" />
</pre>

Remove the table for the Web Application Starter project. We don't need it for this guide.

Add the line below to the module.gwt.xml, in src/main/resources/com/foo/gwt/MyModule.gwt.xml.
<pre class="brush: xml">
<inherits name='com.sencha.gxt.ui.GXT' />
</pre>

And remove the following line from the same file:
<pre class="brush: xml">
<inherits name='com.google.gwt.user.theme.standard.Standard' />
</pre>

Now, on to the final part, the actual application. Replace the MyModule.java in src/main/java/com/foo/gwt/client/MyModule.java with the following code:

<pre class="brush: java">
package com.foo.gwt.client;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.user.client.ui.RootPanel;

/**
 * Entry point classes define <code>onModuleLoad()</code>.
 */
public class MyModule implements EntryPoint {
    public void onModuleLoad() {
        BasicTabExample tabs = new BasicTabExample();
        RootPanel.get().add(tabs);
    }
}
</pre>

Also, in the same directory, add a file called <a href="http://www.sencha.com/examples/#ExamplePlace:basictabs">BasicTabExample.java</a>, with the following contents:

<pre class="brush: java">
package com.foo.gwt.client;

import com.google.gwt.event.logical.shared.SelectionEvent;
import com.google.gwt.event.logical.shared.SelectionHandler;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.VerticalPanel;
import com.google.gwt.user.client.ui.Widget;
import com.sencha.gxt.widget.core.client.PlainTabPanel;
import com.sencha.gxt.widget.core.client.TabItemConfig;
import com.sencha.gxt.widget.core.client.TabPanel;
import com.sencha.gxt.widget.core.client.container.FlowLayoutContainer;
import com.sencha.gxt.widget.core.client.info.Info;

public class BasicTabExample extends FlowLayoutContainer {

    public BasicTabExample() {
        VerticalPanel vp = new VerticalPanel();
        vp.setSpacing(10);

        String txt = "Test";

        SelectionHandler&lt;Widget&gt; handler = new SelectionHandler&lt;Widget&gt;() {
          public void onSelection(SelectionEvent&lt;Widget&gt; event) {
            TabPanel panel = (TabPanel) event.getSource();
            Widget w = event.getSelectedItem();
            TabItemConfig config = panel.getConfig(w);
            Info.display("Message", "'" + config.getText() + "' Selected");
          }
        };

        TabPanel folder = new TabPanel();
        folder.addSelectionHandler(handler);
        folder.setWidth(450);

        HTML shortText = new HTML(txt);
        shortText.addStyleName("pad-text");
        folder.add(shortText, "Short Text");

        HTML longText = new HTML(txt + "&lt;br&gt;&lt;br&gt;" + txt);
        longText.addStyleName("pad-text");
        folder.add(longText, "Long Text");

        final PlainTabPanel panel = new PlainTabPanel();
        panel.setPixelSize(450, 250);
        panel.addSelectionHandler(handler);

        Label normal = new Label("Just a plain old tab");
        normal.addStyleName("pad-text");
        panel.add(normal, "Normal");

        Label iconTab = new Label("Just a plain old tab with an icon");
        iconTab.addStyleName("pad-text");

        TabItemConfig config = new TabItemConfig("Icon Tab");
        panel.add(iconTab, config);

        Label disabled = new Label("This tab should be disabled");
        disabled.addStyleName("pad-text");

        config = new TabItemConfig("Disabled");
        config.setEnabled(false);
        panel.add(disabled, config);

        vp.add(folder);
        vp.add(panel);
        add(vp);
        }
}
</pre>

Now, type the following:
<code>
mvn gwt:run
</code>

And browse to <a href="http://127.0.0.1:8888/MyModule.html?gwt.codesvr=127.0.0.1:9997">http://127.0.0.1:8888/MyModule.html?gwt.codesvr=127.0.0.1:9997</a>. Wait a little to see your application up and running!

<h5>Resources</h5>
<ul>
  <li><a href="http://www.sencha.com/examples/#ExamplePlace:basictabs">http://www.sencha.com/examples/#ExamplePlace:basictabs</a></li>
  <li><a href="http://www.sencha.com/learn/ext-gwt-and-maven/">http://www.sencha.com/learn/ext-gwt-and-maven/</a></li>
  <li><a href="http://www.sencha.com/learn/sencha-gxt-2x-to-300-migration-guide/">http://www.sencha.com/learn/sencha-gxt-2x-to-300-migration-guide/</a></li>
  <li><a href="https://developers.google.com/web-toolkit/tools/gwtdesigner/features/gwt/gxt">https://developers.google.com/web-toolkit/tools/gwtdesigner/features/gwt/gxt</a></li>
  <li><a href="http://mojo.codehaus.org/gwt-maven-plugin/user-guide/archetype.html">http://mojo.codehaus.org/gwt-maven-plugin/user-guide/archetype.html</a></li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2012-08-13 21:59:19</wp:post_date>
		<wp:post_date_gmt>2012-08-13 19:59:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-maven-gxt-3-and-gwt-2-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gwt"><![CDATA[gwt]]></category>
		<category domain="post_tag" nicename="gxt"><![CDATA[gxt]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422688810]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"446";s:5:"score";s:18:"46.558556837733256";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:17:"43.83930460971185";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:17:"26.90384501471311";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"422";s:5:"score";s:18:"17.693053317104805";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"872";s:5:"score";s:18:"14.504028792642927";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:18:"11.784776564621522";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Reloading Log4j Configuration in Tomcat</title>
		<link>http://www.jworks.nl/2012/10/22/reloading-log4j-configuration-in-tomcat/</link>
		<pubDate>Mon, 22 Oct 2012 10:24:41 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[When you're in production environment and you want to diagnose some problems, it's often handy to have some more logging available. So, when you're using Log4j, and you want to have your log4j.xml reloaded, you can use <a href="http://static.springsource.org/spring/docs/1.2.x/api/org/springframework/web/util/Log4jWebConfigurer.html">Log4jWebConfigurer</a> to make this happen.

To use it, you need to add a listener your web.xml. Be careful to place this before the ContextLoaderListener entry. Also important is to add a log4jRefreshInterval (in milliseconds), else Log4j won't start it's deamon thread.

<b>web.xml</b>
<pre class="brush:xml">
&lt;context-param>
  &lt;param-name>log4jConfigLocation</param-name>
  &lt;param-value>classpath:log4j.xml</param-value> 
&lt;/context-param>
&lt;context-param>
  &lt;param-name>log4jRefreshInterval</param-name>
  &lt;param-value>1000</param-value>
&lt;/context-param>

&lt;context-param>
  &lt;param-name>contextConfigLocation</param-name>
  &lt;param-value>classpath:/application-context.xml</param-value>
&lt;/context-param>

&lt;listener>
  &lt;listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
&lt;/listener>

&lt;listener>
  &lt;listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
&lt;/listener>

</pre>

This should reload your log4j.xml changes whenever they occur.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date>2012-10-22 12:24:41</wp:post_date>
		<wp:post_date_gmt>2012-10-22 10:24:41</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reloading-log4j-configuration-in-tomcat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="log4j"><![CDATA[log4j]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<category domain="post_tag" nicename="tomcat"><![CDATA[tomcat]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422816090]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"422";s:5:"score";s:16:"49.5885514118652";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:17:"41.23657430939403";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"34.014738484105585";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"446";s:5:"score";s:18:"34.014738484105585";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:18:"34.014738484105585";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"904";s:5:"score";s:17:"14.29030250169334";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Hamcrest Matchers in JUnit tests</title>
		<link>http://www.jworks.nl/2013/01/06/hamcrest-matchers-in-junit-tests/</link>
		<pubDate>Sun, 06 Jan 2013 12:28:04 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=489</guid>
		<description></description>
		<content:encoded><![CDATA[With JUnit being the dominant Test framework, chances are high that during your career as a software engineer, you've encountered the JUnit framework in one or more projects. Therefor, code like this:

<pre class="brush:java">
assertEquals("Result doesn't match hello", "hello", result.getValue())
</pre>

Should not be unfamiliar to you. This blogpost is on improving the example above. There are good alternatives in writing your tests, like <a href="http://www.spockframework.org">Spock</a>, but these take a little more effort to setup, since it's mostly used in Groovy projects. The goal of this blogpost is to improve the above Java test with little effort, and for that, we're going to use <a href="http://hamcrest.org/">Hamcrest</a>.

Hamcrest is (in our case) a set of Java matchers which improve the readability of the code and error messages shown when assertions do not match. So, let's get back to our original example: what does it really say?

<pre class="brush:java">
assertEquals("Result doesn't match hello", "hello", result.getValue())
</pre>

Means something like: verify that the getValue method of result should return the String hello, and if not, print the message 'result doesn't match hello'. Wouldn't it be more understandable if we could write something like this in a more natural language? Well, with Hamcrest we can:

<pre class="brush:java">
assertThat(result.getValue(), is(equalsTo("hello"))
</pre>

In this example, we're using 'assertThat', which is a method coming from JUnit. JUnit itself supports a random amount of Matchers, but I would recommend on forgetting those, and just use only the Matchers from Hamcrest itself (which means, adding the Hamcrest library to the project, version 1.3 at this moment), since the Hamcrest library contains a much bigger set of Matchers. Also, note that the 'is' method here is optional, but I added it to improve readability. 

Hamcrest can be added to your Maven project by including the following dependency:

<pre class="brush:xml">
<dependency>
  <groupId>org.hamcrest</groupId>
  <artifactId>hamcrest-all</artifactId>
  <version>1.3</version>
</dependency>
</pre>

And using this library, you'll get many matchers, supporting String, Collections, Maps, Numbers, and even XML elements, but more on that in my next blog!

One last note: be aware to use the latests version of JUnit though (currently 4.11). When using an older version you might (read: will) run into dependency issues. Don't say I didn't warn you!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2013-01-06 13:28:04</wp:post_date>
		<wp:post_date_gmt>2013-01-06 12:28:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hamcrest-matchers-in-junit-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hamcrest"><![CDATA[hamcrest]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="junit"><![CDATA[junit]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422848708]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:18:"107.43217998757225";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:17:"74.43929009727717";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:17:"73.62835988100679";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:17:"42.28062961071035";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:18:"30.897356768006365";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:18:"30.897356768006365";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>938</wp:comment_id>
			<wp:comment_author><![CDATA[Marc Philipp]]></wp:comment_author>
			<wp:comment_author_email>mail@marcphilipp.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.marcphilipp.de</wp:comment_author_url>
			<wp:comment_author_IP>89.204.135.243</wp:comment_author_IP>
			<wp:comment_date>2013-01-08 16:12:52</wp:comment_date>
			<wp:comment_date_gmt>2013-01-08 15:12:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IMHO even easier to read:

<code>assertThat(result.getValue(), is("hello"));</code>

Cheers, Marc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357657972.4486560821533203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357658841.9994881153106689453125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>939</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>62.58.16.80</wp:comment_author_IP>
			<wp:comment_date>2013-01-08 16:28:59</wp:comment_date>
			<wp:comment_date_gmt>2013-01-08 15:28:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're right! I added it to the examples in this post: http://www.jworks.nl/2013/01/08/introduction-to-hamcrest-core-matchers/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>938</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357658939.970511913299560546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Generate a toString using Guava Objects.toStringhelper with IntelliJ</title>
		<link>http://www.jworks.nl/2013/01/10/generate-a-tostring-using-guava-objects-tostringhelper-with-intellij/</link>
		<pubDate>Thu, 10 Jan 2013 12:00:11 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[In <a href="http://www.jetbrains.com/idea">IntelliJ</a> it's possible to generate a toString using Alt+Insert (Windows) or Ctrl+N (Mac). In this dialog, you can choose to use different implementations, like a StringBuffer, a StringBuilder, <a href="http://commons.apache.org/lang/api-2.3/org/apache/commons/lang/builder/ToStringBuilder.html" target="_blank">Apache Commons ToStringBuilder</a>, and more. But if you're using <a href="http://code.google.com/p/guava-libraries/" target="_blank">Google Guava</a>, you can create your own template in IntelliJ. To do so, do the following:

<ul>
<li>Open a class file
<li>Press Alt + Insert or Ctrl + N to popup the 'Generate' menu
<li>Choose toString()
<li>Click the button named 'Settings'
<li>Go to the 'Templates' tab
<li>Create a new template named
<li>Add the following in the template:
</ul>

<pre class="brush:java">
public String toString() {
#set ($autoImportPackages = "com.google.common.base.Objects")
   return Objects.toStringHelper(this)
#foreach ($member in $members)
   .add("$member.name", $member.accessor)
#end
   .toString();
}
</pre>

[caption id="attachment_503" align="aligncenter" width="300"]<a href="http://www.jworks.nl/?attachment_id=503" rel="attachment wp-att-503"><img src="http://www.jworks.nl/wp-content/uploads/2013/01/Screen-Shot-2013-01-06-at-21.30.43--300x209.png" alt="IntelliJ toString settings window" width="300" height="209" class="size-medium wp-image-503" /></a> IntelliJ toString settings window[/caption]

This template is based on the Apache Commons toStringBuilder, and will generate a consistent toString for you using Google Guava.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2013-01-10 13:00:11</wp:post_date>
		<wp:post_date_gmt>2013-01-10 12:00:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generate-a-tostring-using-guava-objects-tostringhelper-with-intellij</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="guava"><![CDATA[guava]]></category>
		<category domain="post_tag" nicename="intellij"><![CDATA[intellij]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423281443]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"904";s:5:"score";s:18:"53.517232318332475";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:17:"49.98314743356195";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"872";s:5:"score";s:18:"44.147605969393396";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:18:"34.202318568740964";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"29.17770732084279";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:18:"14.036799089928564";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Introduction to Hamcrest Core Matchers</title>
		<link>http://www.jworks.nl/2013/01/08/introduction-to-hamcrest-core-matchers/</link>
		<pubDate>Tue, 08 Jan 2013 09:00:30 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.jworks.nl/2013/01/15/introduction-to-hamcrest-core-matchers/photo-3/" rel="attachment wp-att-519"><img src="http://www.jworks.nl/wp-content/uploads/2013/01/photo-e1357509256680-150x150.jpg" title="I didn't write the post, but was involved a great deal" alt="I didn't write the post, but was involved a great deal" width="150" height="150" class="alignleft size-thumbnail wp-image-519" /></a>

In our <a href="http://www.jworks.nl/2013/01/06/hamcrest-matchers-in-junit-tests/" title="Hamcrest Matchers in JUnit tests">previous post</a>, we got a small introduction into Hamcrest, a framework for writing test matcher objects, and why you should use them. This post will dive deeper into Hamcrest Matchers. A Matcher is a 'match' rule to be defined declaratively. The Hamcrest library comes with numerous matchers included, and it's of course possible to write your own Matcher. 

The topic of this week: the Core Matchers.

The common Matchers of Hamcrest are the following:
<em>is, equalTo, not, anything, instanceOf, any, isA, nullValue, notNullValue, sameInstance, theInstance, isIn, isOneOf</em> and <em>hasToString</em>.

I will give an example of all of them in the code block below:

<pre class="brush:java">
    @Test
    public void testMovie() {
        // Creation of class under test.
        Movie movie = new Movie("Charlies Angels");
        movie.setInStock(false);
        movie.addGenre(ACTION);
        movie.addGenre(COMEDY);

        Movie otherMovie = movie;

        // This is method takes just a value, instead of a matcher.
        assertThat(movie.isRentable(), is(false));

        // This not method also just takes a value
        assertThat(movie.isRentable(), not(true));
        // This is a chained example for better readability, where the 'is' method takes the not matcher as an argument
        assertThat(movie.isRentable(), is(not(true)));

        // This is a simple String comparison
        assertThat(movie.getTitle(), equalTo("Charlies Angels"));
        // And can also be done this way:
        assertThat(movie.getTitle(), is("Charlies Angels"));

        // Anything always matches. Seriously, no idea what to use this for.
        assertThat(movie, is(anything()));

        // Checks the type of the object. Movie implements the Rentable interface
        assertThat(movie, is(instanceOf(Rentable.class)));

        // Matches when the examined object is an instance of the specified type, used eg. by JMock's with method.
        assertThat(movie, any(Movie.class));

        // Shortcut for is(instanceOf(SomeClass.class))
        assertThat(movie, isA(Rentable.class));

        // Checks if the object is null
        assertThat(new Movie(null).getTitle(), is(nullValue()));
        // Checks if the object is not null
        assertThat(movie.getTitle(), is(notNullValue()));

        // Check that the objects are the same instance
        assertThat(movie, is(sameInstance(otherMovie)));
        // Check that the objects are the same instance. Same as 'sameInstance'.
        assertThat(movie, is(theInstance(otherMovie)));

        // Checks if the examined object is found within the specified array.
        assertThat(movie.getMainGenre(), isIn(Arrays.asList(ACTION, DRAMA)));
        // Seems the same as 'isIn', but this is the varargs variant.
        assertThat(movie.getMainGenre(), isOneOf(ACTION, DRAMA));

        // Checks the toString of the tested object.
        assertThat(movie, hasToString("Movie{inStock=false, title=Charlies Angels, ratings=[]}"));
    }
</pre>

As you can see, the Hamcrest assertions are very readable, and makes your testcode a bit easier to maintain.

PS: I always wanted to write some posts about Hamcrest, but the thing which really triggered me was the <a href="http://www.marcphilipp.de/downloads/posts/2013-01-02-hamcrest-quick-reference/Hamcrest-1.3.pdf">Hamcrest cheat sheet</a> created by Marc Philipp. Be sure to check it out, it's a great piece of work!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2013-01-08 10:00:30</wp:post_date>
		<wp:post_date_gmt>2013-01-08 09:00:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-hamcrest-core-matchers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="core"><![CDATA[core]]></category>
		<category domain="post_tag" nicename="hamcrest"><![CDATA[hamcrest]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="unit"><![CDATA[unit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422828093]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:18:"121.51285393779389";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:17:"74.43929009727717";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:17:"69.41467884937899";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:17:"54.78858027521298";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:17:"43.56433738310919";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"391";s:5:"score";s:18:"28.569593694291207";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Introduction to Hamcrest String Matchers</title>
		<link>http://www.jworks.nl/2013/01/15/introduction-to-hamcrest-string-matchers/</link>
		<pubDate>Tue, 15 Jan 2013 09:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=522</guid>
		<description></description>
		<content:encoded><![CDATA[Another week, another blogpost. For those catching on just now, or finding this post using a search engine; I'm writing a series of posts about Hamcrest, a framework for writing test matcher objects, and showing you how to use Hamcrest. While the previous post was about the Core Matchers, the topic of this week is Hamcrest String Matchers.

The Hamcrest String Matchers are the following:
<em>containsString, startsWith, endsWith, equalToIgnoringCase, equalToIgnoringWhitespace, isEmpty, isEmptyOrNull</em> and <em>stringContainsInOrder</em>

Also in this post, I will give an example of all of them in the code block below:

<pre class="brush:java">
    @Test
    public void testMovieStringMatchers() {
        // Setting up our class to test here.
        Movie movie = new Movie("Charlies Angels");
        movie.setDescription("");
        movie.setDirector(null);
        movie.setStoryLine("The captivating crime-fighting trio who are the masters of disguise, espionage and martial arts.");

        // Checks that the actual result contains the specified String
        assertThat(movie.getTitle(), containsString("Angels"));
        // Checks that the actual result starts with the specified String
        assertThat(movie.getTitle(), startsWith("Charlies"));
        // Checks that the actual result ends with the specified String
        assertThat(movie.getTitle(), endsWith("Angels"));

        // Checks that the actual result equals the specified String, ignoring casing
        assertThat(movie.getTitle(), equalToIgnoringCase("charlies angels"));
        // Beware: this method work different than you would expect, since it doesn't ignore whitespaces: it ignores most of them. Check the Javadoc.
        assertThat(movie.getTitle(), equalToIgnoringWhiteSpace(" charlies  angels   "));

        // Checks that the actual result is an empty String
        assertThat(movie.getDescription(), isEmptyString());
        // Checks that the actual result is null or an empty String
        assertThat(movie.getDirector(), isEmptyOrNullString());

        // Checks that the actual result contains the specified Strings in this sequence
        assertThat(movie.getStoryLine(), stringContainsInOrder(Arrays.asList("The", "trio", "arts")));
    }
</pre>

Again, the Hamcrest assertions are very clear, and makes your testcode a easier to read an maintain. Enjoy!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date>2013-01-15 10:00:00</wp:post_date>
		<wp:post_date_gmt>2013-01-15 09:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-hamcrest-string-matchers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hamcrest"><![CDATA[hamcrest]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="matchers"><![CDATA[matchers]]></category>
		<category domain="post_tag" nicename="string"><![CDATA[string]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="unit"><![CDATA[unit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422635240]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:18:"121.51285393779389";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:17:"73.62835988100679";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:16:"66.1958030245108";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"145";s:5:"score";s:17:"54.78858027521298";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"644";s:5:"score";s:17:"39.74749601305837";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:18:"39.561377382688946";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Introduction to Hamcrest Collection Matchers</title>
		<link>http://www.jworks.nl/2013/01/22/introduction-to-hamcrest-collection-matchers/</link>
		<pubDate>Tue, 22 Jan 2013 10:00:48 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=538</guid>
		<description></description>
		<content:encoded><![CDATA[Another post in the series of Hamcrest Matchers, a framework for writing test matcher objects. This week we'll dive into collections and iterables, and we'll see how we can use Hamcrest for making those asserts even more readable.

In many software projects I encounter code like the following:

<pre class="brush:java">
assertEquals("Collection size doesn't match", 4, reds.size());
</pre>
Or, even worse:
<pre class="brush:java">
assertTrue(greens.size() == 0);
</pre>
The second loses context by not knowning the expected value and the actual value; it knows only that they are not equal.

So, while this above might be a valid asserts, their readability and error feedback can be improved by using a framework like Hamcrest. This can be done in the following way:

<pre class="brush:java">
assertThat(reds, hasSize(4));
assertThat(greens, is(empty()));
</pre>

In my opinion, this increases readability quite a bit, and makes it easier to maintain tests like this. Check the following piece of code for more examples:

<pre class="brush:java">

    @Test
    public void testIterablesMatchers() {
        Catalogue catalogue = new Catalogue();

        catalogue.addMovie(new Movie("Lord of the Rings"));
        catalogue.addMovie(new Movie("The Ring"));
        catalogue.addMovie(new Movie("The Bling Ring"));

        List movies = catalogue.getMovies();

        // Check each item for a certain condition
        assertThat(movies, everyItem(Matchers.hasProperty("title", containsString("Ring"))));

        // Checks that the collection has at least one item which matches the specified matcher.
        assertThat(movies, hasItem(new Movie("The Ring")));
        // Checks that the collection has at least one or multiple items which match the specified matcher.
        assertThat(movies, hasItems(new Movie("The Ring"), new Movie("Lord of the Rings")));

        // Creates a matcher matching examined iterables that yield no items.
        assertThat(new ArrayList(), emptyIterable());

        // Checks that all of the items match the expected items, in the same order.
        assertThat(movies, contains(new Movie("Lord of the Rings"), new Movie("The Ring"), new Movie("The Bling Ring")));
        // Checks that all of the items match the expected items, in any order.
        assertThat(movies, containsInAnyOrder(new Movie("The Ring"), new Movie("The Bling Ring"), new Movie("Lord of the Rings")));

        // Beware here: iterableWithSize is a bit funky with Generics, so the bast (and only) way to solve this is to be explicit about the generics
        assertThat(Arrays.asList("foo", "bar"), IsIterableWithSize.iterableWithSize(2));

        // Matches when the size() method returns a value equal to the specified size.
        assertThat(movies, hasSize(3));

        // Checks that the examined collections whose isEmpty method returns true.
        assertThat(new ArrayList(), is(empty()));
        // Checks that the examined collections whose isEmpty method returns true.
        assertThat(new ArrayList(), is(emptyCollectionOf(Movie.class)));
    }
</pre>


<h5>Error messages</h5>

Whenever a assertion fails, you get a pretty clear error message, which will help you quickly solve issues you run into. For example, if in the above code example I would have made a wrong assumption, and instead of:

<pre class="brush:java">
        assertThat(movies, hasSize(3));
</pre>

If would have typed:

<pre class="brush:java">
        assertThat(movies, hasSize(2));
</pre>

The following error message would have shown up:
<pre class="brush:java">
java.lang.AssertionError:
Expected: a collection with size 
     but: collection size was 
</pre>

Whereas the the JUnit equivalent:
<pre class="brush:java">
assertEquals(2, movies.size());
</pre>

Would have resulted in the following:
<pre class="brush:java">
junit.framework.AssertionFailedError:
Expected :2
Actual   :3
</pre>

Which would have helped a great deal also, but it's just that the Hamcrest one is a bit more clear, and a bit more elaborate on the error message. 

I hope this helps in picking up Hamcrest and that it helps in writing clear, consistent tests. See you next week!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>538</wp:post_id>
		<wp:post_date>2013-01-22 11:00:48</wp:post_date>
		<wp:post_date_gmt>2013-01-22 10:00:48</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-hamcrest-collection-matchers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="collections"><![CDATA[collections]]></category>
		<category domain="post_tag" nicename="hamcrest"><![CDATA[hamcrest]]></category>
		<category domain="post_tag" nicename="iterables"><![CDATA[iterables]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="junit"><![CDATA[junit]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1424388848]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:18:"107.43217998757225";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:17:"69.41467884937899";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:16:"66.1958030245108";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:17:"44.53265213620658";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"202";s:5:"score";s:17:"32.18106454040521";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"32.18106454040521";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1312</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen]]></wp:comment_author>
			<wp:comment_author_email>steve@vance.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.6.14.116</wp:comment_author_IP>
			<wp:comment_date>2013-07-05 01:29:29</wp:comment_date>
			<wp:comment_date_gmt>2013-07-04 23:29:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there one that compares all elements of an array or collection to another, even for ones with guaranteed ordering?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373000867.6277730464935302734375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372980569.132996082305908203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1097</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>lierorules@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>184.70.244.85</wp:comment_author_IP>
			<wp:comment_date>2013-04-15 21:05:29</wp:comment_date>
			<wp:comment_date_gmt>2013-04-15 19:05:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey! Heads up, you have to Override equals for any of this to work. Also heads up. If you want good errors on failed assertions, you should override toString.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366052780.04983806610107421875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366052729.6867249011993408203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1098</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-04-15 21:07:02</wp:comment_date>
			<wp:comment_date_gmt>2013-04-15 19:07:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello Alex,

You're completely right! I had it in my source code, but I forgot to mention it on the blog. Thanks for mentioning it!

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1097</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366052822.8424789905548095703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2071</wp:comment_id>
			<wp:comment_author><![CDATA[Alexandru Repede]]></wp:comment_author>
			<wp:comment_author_email>alexandrurepede@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>91.209.84.250</wp:comment_author_IP>
			<wp:comment_date>2013-11-20 17:27:49</wp:comment_date>
			<wp:comment_date_gmt>2013-11-20 16:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[quoting from <a href="http://java.dzone.com/articles/hamcrest-containing-matchers" rel="nofollow">this tutorial/blog:

<cite>the contains() matcher does not test simply for a given element being in a collection: it tests for all specified elements being present and in the specified order.</cite>

this is in version 1.3]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1312</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385452046.070417881011962890625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384964869.810391902923583984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Adding an alarm to Android Alarm clock</title>
		<link>http://www.jworks.nl/2013/04/03/adding-an-alarm-to-android-alarm-clock/</link>
		<pubDate>Wed, 03 Apr 2013 14:28:33 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=551</guid>
		<description></description>
		<content:encoded><![CDATA[If you need to set an alarm from within your application, you might be guided to the android <a href="http://developer.android.com/reference/android/app/AlarmManager.html" title="Android Alarm Manager" target="_blank">AlarmManager</a>. While it's possible to use the AlarmManager to fire an alarm, sometimes you want to use the alarm application the user has installed himserver.

To do so, you can use <a href="http://developer.android.com/reference/android/provider/AlarmClock.html" title="Alarm Clock" target="_blank">AlarmClock</a>. 

This can be done in the following way:
<pre class="brush: java">
Intent openNewAlarm = new Intent(AlarmClock.ACTION_SET_ALARM);
openNewAlarm.putExtra(AlarmClock.EXTRA_HOUR, 0);
openNewAlarm.putExtra(AlarmClock.EXTRA_MINUTES, 20);
startActivity(openNewAlarm);
</pre>

You'll need to add the right security permission to your manifest though:

<pre class="brush: xml">
<uses-permission android:name="com.android.alarm.permission.SET_ALARM" />
</pre>

A small note: there's no way to cancel the alarm after the intent has been sent. If you need more control over your alarm, you'll need to to use something like the <a href="http://developer.android.com/reference/android/app/AlarmManager.html" title="Android Alarm Manager" target="_blank">AlarmManager</a> anyway, which provides more control over your set alarm, like cancelling.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>551</wp:post_id>
		<wp:post_date>2013-04-03 16:28:33</wp:post_date>
		<wp:post_date_gmt>2013-04-03 14:28:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-an-alarm-to-android-alarm-clock</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alarm"><![CDATA[alarm]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-2"><![CDATA[android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422722972]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:18:"57.278389865813296";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"47.67545447259131";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:17:"47.67545447259131";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"352";s:5:"score";s:18:"18.862390265390484";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"460";s:5:"score";s:18:"10.624586640699913";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"422";s:5:"score";s:18:"10.049222495850405";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Reviving Groovy in Action</title>
		<link>http://www.jworks.nl/2013/04/13/reviving-groovy-in-action/</link>
		<pubDate>Sat, 13 Apr 2013 21:10:30 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=558</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://amzn.to/Zte3KJ"><img src="http://www.jworks.nl/wp-content/uploads/2013/04/9781932394849-150x150.jpg" alt="Groovy in Action" width="150" height="150" class="alignleft size-thumbnail wp-image-561" /></a>
Some time ago, Dierk Koenig decided to write <a href="http://amzn.to/Zte3KJ" title="Groovy in Action" target="_blank">Groovy in Action</a>, THE bible for learning the Groovy language and some libraries around it. The book was written for Groovy 1.0, and it was a great reference (I learned my first Groovy from that book), and though outdated, it still is a great book. Then, some years later, Groovy 1.5 came out. So it was time for an updated version of the Groovy in Action book, now the second edition. So, the musketeers got back together and investigated what the new features were, made some split who would write about what, and off they went. Only forgetting one small thing: this was not their only project on hand. So, sometimes the musketeers wrote some, sometimes they provided food for their family, sometimes they rested a bit. While time passed on, Groovy 1.6 came out. And even 1.7. And 1.8. And 1... well, 2.0 actually. 

When Groovy 2.0 came out, not a lot of things had happend on the book. Sure, there were new some new chapters written, but there were also still 18 other chapters to write. So it was time for some Action. So, some time ago, just before a Grails Exchange far away, yours truly wrote Dierk, and with the famous words: "hee Dierk, wtf is going on with the book?", was he invited in joining the musketeers. Ha, he thought, this is my chance on fame and fortune! So imagining the screaming girls, the fireworks, the rains of golden coins, I signed the contract with my blood, and joined the party. And what a party it was. It was more like a pack of brigands than the musketeers! Ohohoh, what had I signed up for? So, when the Grails Exchange really came, a chat with Guillaume was needed. So we did, after a great chat, some great ideas, and full of energy, we parted and... Nothing happened. All the things I had to do, for all the great ideas we had, I did nothing. Also I was to busy to get things going! But then, a voice from the sky came, which got us all by surprise. It was our great publisher, Manning, demanding progress. And he got it.

<a href="http://www.manning.com/koenig2/"><img src="http://www.jworks.nl/wp-content/uploads/2013/04/koenig2_cover150-150x150.jpg" alt="Groovy in Action MEAP" width="150" height="150" class="alignright size-thumbnail wp-image-565" /></a>
So, after almost one year of inactivity, a great motivation, and a lot of talks, we published a new version of the <a href="http://www.manning.com/koenig2/" title="Groovy in Action, Second Edition" target="_blank">Groovy in Action MEAP</a>! There's an updated chapter on the GDK, created by yours truly! So no, the project is not dead. Really, trust us when we say we're working hard, really hard, on finishing this great book! We're all heavily motivated in delivering THE best book on Groovy, so no, the project is not dead, it was merely in hibernation, and yes, we will deliver this book. It will still take a bit of work, but another chapter is just finished (another one by me, this time about Groovy and Testing), with features about Spock, Gradle and many other improvements, and other chapters will follow soon. So keep spamming the <a href="http://www.manning-sandbox.com/forum.jspa?forumID=571">forums</a>, keep spamming the authors, keep us sharp, and shout your interested. We will deliver!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date>2013-04-13 23:10:30</wp:post_date>
		<wp:post_date_gmt>2013-04-13 21:10:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reviving-groovy-in-action</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422643751]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:18:"15.487726951893215";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:17:"12.85189213902903";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:18:"12.460402984722784";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"403";s:5:"score";s:18:"12.040961922758646";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"11.17669521232394";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"211";s:5:"score";s:17:"11.17669521232394";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1104</wp:comment_id>
			<wp:comment_author><![CDATA[Søren]]></wp:comment_author>
			<wp:comment_author_email>soeren@glasius.dk</wp:comment_author_email>
			<wp:comment_author_url>http://gr8conf.eu</wp:comment_author_url>
			<wp:comment_author_IP>89.233.1.130</wp:comment_author_IP>
			<wp:comment_date>2013-04-17 12:06:22</wp:comment_date>
			<wp:comment_date_gmt>2013-04-17 10:06:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great work, but you need Manning to update who the authors of the book  are!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366193182.74514102935791015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366198484.091854095458984375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1106</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-04-17 13:35:57</wp:comment_date>
			<wp:comment_date_gmt>2013-04-17 11:35:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! I know, but they are not taking my bribes yet. But I'm sure that will be arranged before the final version is released.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1104</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366198557.3092839717864990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1109</wp:comment_id>
			<wp:comment_author><![CDATA[GroovyMag - the magazine for Groovy and Grails developers about Groovy programming and Grails development]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.groovymag.com/2013/04/news-roundup-groovy-in-action-gr8ness-for-java-developers-and-the-future-of-grails/</wp:comment_author_url>
			<wp:comment_author_IP>199.15.248.242</wp:comment_author_IP>
			<wp:comment_date>2013-04-17 18:27:20</wp:comment_date>
			<wp:comment_date_gmt>2013-04-17 16:27:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] on the Jworks blog, Erik Pragt, famed Groovyist blogger, tells a long and tragic tale of the second edition of GinA. Mr. Pragt himself has, since work on the second edition was begun, joined the notable list of [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366216040.8676030635833740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366218032.8268210887908935546875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1336</wp:comment_id>
			<wp:comment_author><![CDATA[Lee]]></wp:comment_author>
			<wp:comment_author_email>boblee1088@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://grails.asia/grails-tutorial-for-beginners-playing-with-groovy-language/</wp:comment_author_url>
			<wp:comment_author_IP>49.144.243.66</wp:comment_author_IP>
			<wp:comment_date>2013-07-27 16:10:03</wp:comment_date>
			<wp:comment_date_gmt>2013-07-27 14:10:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hope this book get published electronically.  Paying taxes for imported books makes cost double.  Could be a good companion while working with Grails]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775736.12195110321044921875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374934203.37446498870849609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1096</wp:comment_id>
			<wp:comment_author><![CDATA[Groovy In Action book new edition coming?T. C. Mits | T. C. Mits]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://octodecillion.com/blog/groovy-in-action-book/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.24.100</wp:comment_author_IP>
			<wp:comment_date>2013-04-14 16:48:06</wp:comment_date>
			<wp:comment_date_gmt>2013-04-14 14:48:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Pragt writes that work on the next edition of GINA is resuming. About [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365956932.4956569671630859375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365950886.88982391357421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1127</wp:comment_id>
			<wp:comment_author><![CDATA[Questa settimana in Grails (2013-15) - luca-canducci.com - Il blog di Luca Canducci: notizie, tips e nuove tecnologie dal mondo dell’IT.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.luca-canducci.com/2013/04/questa-settimana-in-grails-2013-15/</wp:comment_author_url>
			<wp:comment_author_IP>62.149.141.128</wp:comment_author_IP>
			<wp:comment_date>2013-04-21 00:50:04</wp:comment_date>
			<wp:comment_date_gmt>2013-04-20 22:50:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Reviving Groovy in Action [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366498204.582357883453369140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366531838.9783871173858642578125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1128</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2013-15)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://burtbeckwith.com/blog/?p=1943</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2013-04-21 03:54:48</wp:comment_date>
			<wp:comment_date_gmt>2013-04-21 01:54:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Reviving Groovy in Action [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366531819.0198409557342529296875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366509289.0720779895782470703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1446</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 09:56:13</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 07:56:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's already available electronically. Check the ebook version at http://www.manning.com/koenig2/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1336</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775773.3543040752410888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Creating projects with Gradle</title>
		<link>http://www.jworks.nl/2013/04/16/creating-projects-with-gradle/</link>
		<pubDate>Tue, 16 Apr 2013 19:56:56 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=568</guid>
		<description></description>
		<content:encoded><![CDATA[Coming from a Maven background (Maven 1, 2, 3), I find it a bit strange that Gradle doesn't provide archetypes like Maven does. There's a template plugin, which helps a little, but besides that, you're out of luck. Or are you?

I found a pretty neat Gradle script in their <a href="http://issues.gradle.org/browse/GRADLE-1289" target="_blank">Jira</a> system, which can create a directory structure for you even when working on a Groovy or Scala project. The easiest way to do so is to add the following 'initProject' task to the Gradle build.gradle:

<pre class="brush: groovy; highlight: [14]">
apply plugin: 'java'
apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.0.5'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task initProject () << {
    if (hasProperty(initPlugins)) {
        initPlugins.split(',').each { plug -> 
            project.apply { 
                plugin(plug.trim()) 
            } 
        }
    }

    project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { dir ->
        dir.mkdirs()
    }
}
</pre>

You can call it by executing the following command:

<pre>gradle initProject -PinitPlugins=groovy,java</pre>

This works great until Hans or Luke decide to create the <pre>gradle create-project myproject -PapplyPlugin=java,groovy</pre> command, which would make our lives even easier!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>568</wp:post_id>
		<wp:post_date>2013-04-16 21:56:56</wp:post_date>
		<wp:post_date_gmt>2013-04-16 19:56:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-projects-with-gradle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gradle"><![CDATA[gradle]]></category>
		<category domain="category" nicename="gradle-2"><![CDATA[Gradle]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="task"><![CDATA[task]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422662602]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:18:"56.081917709282635";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"589";s:5:"score";s:17:"52.44891905573728";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:18:"43.703543618675965";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"41.69854919928922";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"460";s:5:"score";s:17:"26.90384501471311";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:1:"5";s:5:"score";s:16:"17.6630814773077";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1111</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek]]></wp:comment_author>
			<wp:comment_author_email>tkaczano@poczta.onet.pl</wp:comment_author_email>
			<wp:comment_author_url>http://practicalunittesting.com</wp:comment_author_url>
			<wp:comment_author_IP>195.116.242.159</wp:comment_author_IP>
			<wp:comment_date>2013-04-18 10:33:30</wp:comment_date>
			<wp:comment_date_gmt>2013-04-18 08:33:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hope they do add it at some point - it is useful

BTW. I can remember the discussions about the usefulness of such thing since the beginnings of Gradle!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366274038.2043039798736572265625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366274010.555883884429931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1112</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-04-18 10:34:44</wp:comment_date>
			<wp:comment_date_gmt>2013-04-18 08:34:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Tomek,

I agree, but apparently, it's on the Gradleware mind, so wouldn't be surprised if this shows up in due time!

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1111</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366274084.778439044952392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1215</wp:comment_id>
			<wp:comment_author><![CDATA[An Army of Solipsists &raquo; Blog Archive &raquo; This Week in Grails (2013-17)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://burtbeckwith.com/blog/?p=1951</wp:comment_author_url>
			<wp:comment_author_IP>74.208.16.10</wp:comment_author_IP>
			<wp:comment_date>2013-05-07 20:19:54</wp:comment_date>
			<wp:comment_date_gmt>2013-05-07 18:19:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Creating projects with Gradle [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1367953099.9818489551544189453125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1367950794.67261505126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Jacoco code coverage with Gradle</title>
		<link>http://www.jworks.nl/2013/06/03/jacoco-code-coverage-with-gradle/</link>
		<pubDate>Mon, 03 Jun 2013 21:40:54 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[One of the new features of Gradle 1.6, the Groovy based build tool, is Jacoco support. Jacoco is one of the few (only?) Open Source code coverage tools still in active development, and starting from Gradle 1.6, it's now a supported plugin. Enabling the task is easy, just add 

<pre class="brush: groovy">apply plugin: 'jacoco'</pre> to your build.gradle, and run <code>./gradlew jacocoTestReport</code> and it.. does nothing. For those running into the same issues, this might save you a bit of time:

After a bit of searching, it turns out the jacoco plugin is a bit broken. When using it with a Java project, as I'm doing, you need to do a couple of things to enable it, but also then, it unfortunately doesn't work as advertised, though the fix seems not to complex.

First, you need to enable the following:

<pre class="brush: groovy">
jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}
</pre>

And then, instead of running <code>./gradlew jacocoTestReport</code> as mentioned in the docs <a href="http://www.gradle.org/docs/current/userguide/jacoco_plugin.html">here</a>, you need to run <code>./gradlew test jacocoTestReport</code>. Unfortunately, no location is printed where the documentation is created, so no clickable links in your terminal, but you can find it under <code>build/reports/jacoco/test/html/index.html</code>. Well, that wasn't so bad now, was it? Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2013-06-03 23:40:54</wp:post_date>
		<wp:post_date_gmt>2013-06-03 21:40:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jacoco-code-coverage-with-gradle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gradle"><![CDATA[gradle]]></category>
		<category domain="category" nicename="gradle-2"><![CDATA[Gradle]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="jacoco"><![CDATA[jacoco]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423489919]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"872";s:5:"score";s:17:"56.59441139347828";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:18:"56.081917709282635";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"589";s:5:"score";s:17:"49.98463169301688";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:17:"45.24221625637581";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:18:"43.971514324682204";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:2:"50";s:5:"score";s:18:"23.159084760030588";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1317</wp:comment_id>
			<wp:comment_author><![CDATA[Karl Nosworthy]]></wp:comment_author>
			<wp:comment_author_email>k.nosworthy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.44.163.113</wp:comment_author_IP>
			<wp:comment_date>2013-07-12 13:29:27</wp:comment_date>
			<wp:comment_date_gmt>2013-07-12 11:29:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic, just what I was looking for and it worked like a charm.

Many thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373628759.6251471042633056640625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373628567.886557102203369140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1461</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-08-11 13:03:23</wp:comment_date>
			<wp:comment_date_gmt>2013-08-11 11:03:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Arun,

Glad you got it working, and thanks for sharing!

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1457</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376219003.595038890838623046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1314</wp:comment_id>
			<wp:comment_author><![CDATA[wlly]]></wp:comment_author>
			<wp:comment_author_email>wbalderamos@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.168.235.117</wp:comment_author_IP>
			<wp:comment_date>2013-07-09 00:19:09</wp:comment_date>
			<wp:comment_date_gmt>2013-07-08 22:19:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cobertura is still active, no? Good post, thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373321949.7022759914398193359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373323048.0463659763336181640625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1315</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-07-09 00:39:22</wp:comment_date>
			<wp:comment_date_gmt>2013-07-08 22:39:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[According to the Gradle people, Jacoco is the only open source coverage tool still under active development.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1314</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373323162.9177620410919189453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1449</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.4</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 19:44:16</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 17:44:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your quick reply Erik. For your reply to my question - bullet3: I'm running: 

gradle clean build check test JacocoTestReport 

When I run gradlew, it doesn't do anything.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1445</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375811056.0831658840179443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1450</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 20:53:07</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 18:53:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Arun,

Sure, no problem. Is that really the command you are using? Because it's: jacocoTestReport, with a lower case j, not with the upper case. That might help.

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1449</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375815187.50036907196044921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1481</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-08-14 13:55:55</wp:comment_date>
			<wp:comment_date_gmt>2013-08-14 11:55:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm, good question. I checked the documentation, but couldn't find anything about that, so I guess it's not (yet?) in. Might check the Gradle forums to be sure though!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1480</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376481355.865806102752685546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1480</wp:comment_id>
			<wp:comment_author><![CDATA[Mike DuVall]]></wp:comment_author>
			<wp:comment_author_email>mike.a.duvall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.113.4.212</wp:comment_author_IP>
			<wp:comment_date>2013-08-14 13:51:56</wp:comment_date>
			<wp:comment_date_gmt>2013-08-14 11:51:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Got it working with my project.  Thanks.

Question: Does anyone know of a way to make it fail the build if a required level of code coverage is not met? (Something like cobertura's 'cobertura-check' ant target)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376481257.5690391063690185546875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376481116.87992095947265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1485</wp:comment_id>
			<wp:comment_author><![CDATA[Mike DuVall]]></wp:comment_author>
			<wp:comment_author_email>mike.a.duvall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.113.4.212</wp:comment_author_IP>
			<wp:comment_date>2013-08-15 13:58:57</wp:comment_date>
			<wp:comment_date_gmt>2013-08-15 11:58:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks like there is a jacoco:check, but it's not supported in gradle yet:

http://issues.gradle.org/browse/GRADLE-2854]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1481</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376567937.4452838897705078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1486</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-08-15 14:11:33</wp:comment_date>
			<wp:comment_date_gmt>2013-08-15 12:11:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, thanks for sharing. Would be a nice addition to the Jacoco plugin.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1485</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376568693.6730110645294189453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1310</wp:comment_id>
			<wp:comment_author><![CDATA[Bernardo]]></wp:comment_author>
			<wp:comment_author_email>bfalese@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.2.44.73</wp:comment_author_IP>
			<wp:comment_date>2013-06-27 16:51:45</wp:comment_date>
			<wp:comment_date_gmt>2013-06-27 14:51:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the info, got it working with your post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372345459.89194393157958984375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372344705.740540981292724609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1457</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.4</wp:comment_author_IP>
			<wp:comment_date>2013-08-09 21:46:41</wp:comment_date>
			<wp:comment_date_gmt>2013-08-09 19:46:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Got it working.

Gradle 1.7 
- download the .zip which contains the binaries/src and documentation.
- Go to folder: if you unzip the above .zip at C:\gradle-1.7
  C:\gradle-1.7\samples\testing\jacoco\quickstart

- Run:
  gradle build jacocoTestReport

- You'll see a new folder "build" after the build.
  - folder jacoco gets created with classdumps and .exec if only build task is called.
  - folder jacoco and jacocoHtml gets created - if both build jacocoTestReport is called

have fun.

I also saw that it's better to include:

the following section in build.gradle


/////
tasks.withType(Compile) {
  options.debug = true
  options.compilerArgs = ["-g"]
}
////]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376077601.3155400753021240234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1444</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.4</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 00:43:06</wp:comment_date>
			<wp:comment_date_gmt>2013-08-05 22:43:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Could you please clarify the following:

1. you example shows to add the following in a project/module's build.gradle file.

jacocoTestReport {    
      group = "Reporting"
      description = "Generate Jacoco coverage reports after running tests."
      additionalSourceDirs = files( sourceSets.main.allJava.srcDirs)}


Does, the above code needs to be copied exactly or Do i have to change the value of "sourceSets.main.allJava.srcDirs" with some relative path/folder i.e. src/java/main or something similar.


2. Gradle documentation says to include this, which is different that what you have mentioned. Then, do I need to add the lines that you have specified above or just replace whatever Gradle/Jacoco documentation says?

jacocoTestReport{
    reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/jacocoHtml"
    }
}


3. I dont see jacoco folder or it's jar anywhere in the workspace, I assume enabling     apply plugin: 'jacoco'    in build.gradle should do it.


4. Im new to gradle and doc seems like pretty easy to configure but a good video based example (showing how to get a coverage report on an App or service ... where an app is dependent upon service(s) and has junit tests, integration tests within the source code tree) would help a lot.


thanks a lot.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775415.6496560573577880859375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375742587.0329449176788330078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1445</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 09:54:52</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 07:54:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Arun,

Regarding 1, it's an exact copy. Don't make changes to it, it's code which will be executed by Gradle.

Regarding 2, it's something different. If you don't want the xml and csv, use your suggestion, but you'll currently need mine to get the plugin to work.

Regarding 3: which task do you run? And what do you mean with 'workspace'?

Regarding 4: There are many good resources to be found on Gradle, including screencasts, video's, webinars, etc. Some of them can be found <a href="http://www.gradle.org/learn" rel="nofollow">here</a>

Hope that helps,

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1444</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375775692.6639239788055419921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1451</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.4</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 21:02:27</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 19:02:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Apart from that: gradle jacocoTestReport 

is working but I'm not seeing any build/reports folder getting generated.

/src/java - contains java code in the tree

/src/java-test - contains junit tests]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375815747.4329929351806640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1452</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>82.173.138.22</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 21:20:26</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 19:20:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Arun, 

It's in the build directory, not in the source directory, as specified in my post. 

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1451</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375816826.4195239543914794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1453</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.4</wp:comment_author_IP>
			<wp:comment_date>2013-08-07 02:41:13</wp:comment_date>
			<wp:comment_date_gmt>2013-08-07 00:41:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, i'm using jacocoTestReport. Tried the following:

gradle jacocoTestReport
(says build successful) but nothing under build folder for Jacoco related data.

gradle test jacocoTestReport
(fails when running from command line. In jenkins i tell to get the dependencies from Artifactory so there no problem but code coverage data is absent.. no build/... files for jacoco or report/jacoco etc.


I'm getting the following in Jenkins logs:

20:29:12 :jacocoTestReport
20:29:12 Skipping task ':jacocoTestReport' as task onlyIf is false.
20:29:12 :jacocoTestReport SKIPPED


then later for Jenkins's jacoco report publishing step... log says:


20:29:16 [JaCoCo plugin] Collecting JaCoCo coverage data...
20:29:16 [JaCoCo plugin] **/**.exec;**/classes;**/src/main/java; locations are configured
20:29:16 [JaCoCo plugin] Number of found exec files: 0
20:29:16 [JaCoCo plugin] Saving matched execfiles: 
20:29:16 [JaCoCo plugin] Saving matched class directories:  /production/jenkinsAKS/jobs/NeoApplication/workspace/bin/tomcat/webapps/NeoApplication/WEB-INF/classes /production/jenkinsAKS/jobs/NeoApplication/workspace/build/classes /production/jenkinsAKS/jobs/NeoApplication/workspace/tomcat/webapps/NeoApplication/WEB-INF/classes
20:29:16 [JaCoCo plugin] Saving matched source directories:  /production/jenkinsAKS/jobs/NeoApplication/workspace/jacoco-0.6.3.201306030806/doc/examples/build/src/main/java
20:29:16 [JaCoCo plugin] Loading inclusions files..
20:29:16 [JaCoCo plugin] inclusions: []
20:29:16 [JaCoCo plugin] exclusions: []
20:29:16 [JaCoCo plugin] Thresholds: JacocoHealthReportThresholds [minClass=0, maxClass=0, minMethod=0, maxMethod=80, minLine=0, maxLine=80, minBranch=0, maxBranch=70, minInstruction=0, maxInstruction=80, minComplexity=0, maxComplexity=0]
20:29:16 [JaCoCo plugin] Publishing the results..
20:29:16 [JaCoCo plugin] Loading packages..
20:29:16 [JaCoCo plugin] Done.
20:29:17 Finished: SUCCESS



I have an unzipped copy of "jacoco-0.6.x.x.x.x.x" folder under my workspace (i.e. source code checked out from version control) folder location, im pretty sure that folder is not even getting used. So far, coverage is 0%.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1452</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375836073.10945606231689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2587</wp:comment_id>
			<wp:comment_author><![CDATA[Arun Sangal]]></wp:comment_author>
			<wp:comment_author_email>arun_sangal@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.87.171.141</wp:comment_author_IP>
			<wp:comment_date>2014-04-04 19:41:02</wp:comment_date>
			<wp:comment_date_gmt>2014-04-04 17:41:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gargi, that's most probably because jacocoTestReport don't have anything (source data to work one which in this case would be .exec files for Unit / Integration or any other tests). Do you see .exec files generated by Gradle (when test or integrationTest etc tasks are run). See build/jacoco/.. folder tree.


   jacoco {
      //toolVersion = "0.6.2.201302030002"
      toolVersion = "0.7.0.201403182114"
      // reportsDir = file("$buildDir/customJacocoReportDir")
   }

   test {
     maxParallelForks = 5
     forkEvery = 50
     ignoreFailures = true

     testReportDir = file("$buildDir/reports/tests/UT")
     testResultsDir = file("$buildDir/test-results/UT")

     //Following Jacoco test section is required only in Jenkins instance extra common file
     jacoco {
        //The following vars works ONLY with 1.6 of Gradle
        destPath = file("$buildDir/jacoco/UT/jacocoUT.exec")
        classDumpPath = file("$buildDir/jacoco/UT/classpathdumps")

        //Following vars works only with versions &gt;= 1.7 version of Gradle
        //destinationFile = file("$buildDir/jacoco/UT/jacocoUT.exec")
        //  classDumpFile = file("$buildDir/jacoco/UT/classpathdumps")
     }
   }

   task integrationTest( type: Test) {
     //Always run tests
     outputs.upToDateWhen { false }
     ignoreFailures = true

     testClassesDir = sourceSets.integrationTest.output.classesDir
     classpath = sourceSets.integrationTest.runtimeClasspath

     testReportDir = file("$buildDir/reports/tests/IT")
     testResultsDir = file("$buildDir/test-results/IT")

     //Following Jacoco test section is required only in Jenkins instance extra common file
     jacoco {
        //This works with 1.6
        destPath = file("$buildDir/jacoco/IT/jacocoIT.exec")
        classDumpPath = file("$buildDir/jacoco/IT/classpathdumps")

        //Following works only with versions &gt;= 1.7 version of Gradle
        //destinationFile = file("$buildDir/jacoco/IT/jacocoIT.exec")
        //  classDumpFile = file("$buildDir/jacoco/IT/classpathdumps")
     }
  }

  jacocoTestReport {
      group = "Reporting"
      description = "Generate Jacoco coverage reports after running tests."
      ignoreFailures = true

      //executionData = files('build/jacoco/UT/jacocoUT.exec')
      //executionData = files('build/jacoco/IT/jacocoIT.exec')
      //executionData = files('build/jacoco/UT/jacocoUT.exec', 'build/jacoco/IT/jacocoIT.exec')

      //executionData = files(['build/jacoco/UT/jacocoUT.exec', 'build/jacoco/IT/jacocoIT.exec'])
      executionData = fileTree(dir: 'build/jacoco', include: '**/*.exec')

      reports {
             xml{
                 enabled true
                 //Following value is a file
                 destination "${buildDir}/reports/jacoco/xml/jacoco.xml"
             }
             csv.enabled false
             html{
                 enabled true
                 //Following value is a folder
                 destination "${buildDir}/reports/jacoco/html"
             }
      }


      sourceDirectories = files(sourceSets.main.allJava.srcDirs)
       classDirectories = files(sourceSets.main.output.classesDir)
       //classDirectories = fileTree(dir: 'build/classes')


      additionalSourceDirs = files(['test/java', 'src/java-test'])
      //additionalSourceDirs = files(sourceSets.test.allJava.srcDirs)
      //additionalSourceDirs += files(sourceSets.integrationTest.allJava.srcDirs)
      //additionalSourceDirs += files(sourceSets.acceptanceTest.allJava.srcDirs)
      // additionalClassDirs = files(['build/jacoco/UT/classpathdumps/com/thc', 'build/jacoco/IT/classpathdumps/com/thc'])
       //additionalClassDirs = files(['build/jacoco/UT/classpathdumps/com/thc'])


     //additionalSourceDirs = files('test/java', 'src/java-test')
     // additionalClassDirs = files('build/jacoco/UT/classpathdumps/com/thc', 'build/jacoco/IT/classpathdumps/com/thc')

     //sourceDirectories = files('src/main/java')
     // classDirectories = files('build/classes/main')

     //sourceDirectories = fileTree('src/main/java')
     // classDirectories = fileTree('build/classes/main')


     //additionalSourceDirectories = fileTree('test/java', 'test/resources', 'src/java-test')
     // additionalClassDirectories = fileTree('build/classes/test', 'build/classes/integrationTest')


     //additionalSourceDirs = files(sourceSets.test.allJava.srcDirs,sourceSets.integrationTest.allJava.srcDirs)
     //additionalSourceDirs = files(sourceSets.*.allJava.srcDirs)
     //additionalSourceDirs += files(sourceSets.test.allJava.srcDirs)
     //additionalSourceDirs += files(sourceSets.integrationTest.allJava.srcDirs)

     //additionalSourceDirs = files('src/java', 'test/java', 'test/resources', 'src/java-test', 'conf')
     //additionalClasseDirs = files('build/classes')
     //executionData = files('build/jacoco/test.exec', 'build/jacoco/integrationTest.exec', 'build/jacoco/acceptanceTest.exec')

     //additionalSourceDirs = files(sourceSets.integrationTest.allSource.srcDirs)

     //additionalSourceDirs = files('src/java', 'test/java', 'test/resources', 'src/java-test', 'conf')
     //additionalSourceDirs = files(sourceSets.test.allJava.srcDirs)
     //additionalSourceDirs = files(sourceSets.integrationTest.allJava.srcDirs)
     //additionalSourceDirs = files([sourceSets.main.allJava.srcDirs)
  }
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2549</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1396633262.94550609588623046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402987537.1737630367279052734375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160935.678668975830078125;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.754190921783447265625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2549</wp:comment_id>
			<wp:comment_author><![CDATA[Gargi Agrawal]]></wp:comment_author>
			<wp:comment_author_email>agrawalgargieic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.237.142.20</wp:comment_author_IP>
			<wp:comment_date>2014-03-13 11:50:02</wp:comment_date>
			<wp:comment_date_gmt>2014-03-13 10:50:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Erik,

I saw your post and I added the task which you had mentioned but still I am getting below logs. Please let me know where I am going wrong. 

when I run:  gradle test jacocoTestReport ----&gt;

:CCL-CACHE:jacocoTestReport SKIPPED
:CCL-CDAL-API:jacocoTestReport SKIPPED
:CCL-COMMON-VO:jacocoTestReport SKIPPED
:CCL-CORE:jacocoTestReport SKIPPED

Below is the snippet of my build.gradle:

subprojects {

    apply plugin: 'osgi'
    apply plugin: 'maven'
      apply plugin: 'jacoco'
   apply plugin: 'java'
   
      repositories {
       mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.8.2'
    }



/*
 * defines the gradle wrapper version to use for building
 */
task wrapper(type: Wrapper) {
    description = 'Installs the gradle wrapper.'
    gradleVersion = '1.10'
}

   tasks.withType(Compile) {
     options.debug = true
     options.compilerArgs = ["-g"]
   }

   
   jacoco {
      toolVersion = "0.6.2.201302030002"
      reportsDir = file("$buildDir/reports")
   }


   test {
    jacoco {
            append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpFile = file("$buildDir/jacoco/classpathdumps")
        }
   }

   sourceSets {
      main {
         java {
            srcDir 'src/main/java'
         }
      }
      test {
         java {
            srcDir 'test/main/java'
         }
      }
      
   }


   jacocoTestReport {
     group = "Reporting"
     description = "Generate Jacoco coverage reports after running tests."
     reports {
            xml{
                    enabled true
                destination "${buildDir}/reports/jacoco/jacoco.xml"
                }
                csv.enabled false
                html{
                    enabled true
                    destination "${buildDir}/jacocoHtml"
                }
        }
        additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)    
 }
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394920248.7852780818939208984375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394707802.9626190662384033203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160936.4081189632415771484375;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.759150981903076171875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Gradle: creating executable jars for DropWizard</title>
		<link>http://www.jworks.nl/2013/07/16/gradle-creating-executable-jars-for-dropwizard/</link>
		<pubDate>Tue, 16 Jul 2013 18:37:18 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[Some days ago, I created a Simple REST interface for my <a href="https://github.com/bodiam/epub-organizer">Open Source Epub organizer</a>. I used the excellent <a href="dropwizard.codahale.com">DropWizard</a> documentation, which guides you through the process. However, the DropWizard documentation uses Maven. While that's not really a problem, I'm trying to switch to <a href="www.gradle.org">Gradle</a> (with mixed success). 

For creating a executable jar in Gradle, there are some plugins available, like the FatJar, UberJar. It's also explained in a <a href="https://github.com/bodiam/dropwizard-gradle">sample DropWizard project</a>. However, if you look at the forks, all the forks are different. Some of them use FatJar, some use UberJar, some switched from one to the other, etc. It's a bit of a mess. Fortunately, there's also support from Gradle itself, and while the documentation is a bit minimal in this area, it works very nicely. 

<pre class="brush: groovy">
// The main class of the application
mainClassName = 'nl.jworks.epub.dropwizard.HelloWorldService'

// Create the executable jar and exclude some certificates
jar {

    manifest {
        attributes "Implementation-Title": "Gradle Quickstart"
        attributes "Implementation-Version": version
        attributes "Main-Class" : mainClassName
    }

    // remove the security files (from mail.jar / activation.jar) so that the jar will be executable.
    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }
}
</pre>

Running a <code>./gradlew jar</code> will create an artifact in the <code>build/libs</code> directory. You can then run <code>java -jar build/libs/epub-organizer-dropwizard-1.0.jar</code>, et voila, the executable DropWizard jar is working:

<code>
usage: java -jar epub-organizer-dropwizard-1.0.jar
       [-h] [-v] {server} ...

positional arguments:
  {server}               available commands

optional arguments:
  -h, --help             show this help message and exit
  -v, --version          show the service version and exit
</code>

If you want to test the DropWizard application without building a jar, that's also possible. For that, you can use the Gradle <code>application</code> plugin, in the following way:

<pre class="brush: groovy">
apply plugin: 'application'

// The main class of the application
mainClassName = 'nl.jworks.epub.dropwizard.HelloWorldService'

// Configure the run task to start the Dropwizard service
run {
    args 'server', './src/main/resources/hello-world.yml'
}

</pre>

You need to define the mainClass and optionally a run block, which will pass the arguments to the main application. Running <code>./gradlew run</code> will then run the DropWizard application:
<code>
    GET     /hello-world (nl.jworks.epub.dropwizard.resources.HelloWorldResource)

INFO  [2013-07-16 18:33:15,863] com.yammer.dropwizard.config.Environment: tasks =

    POST    /tasks/gc (com.yammer.dropwizard.tasks.GarbageCollectionTask)

INFO  [2013-07-16 18:33:16,457] org.eclipse.jetty.server.AbstractConnector: Started InstrumentedBlockingChannelConnector@0.0.0.0:8080
INFO  [2013-07-16 18:33:16,463] org.eclipse.jetty.server.AbstractConnector: Started SocketConnector@0.0.0.0:8081
</code>

In short, no need for extra plugins, but using the Gradle core functionality most of your requirements to create executable jars should be covered.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2013-07-16 20:37:18</wp:post_date>
		<wp:post_date_gmt>2013-07-16 18:37:18</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gradle-creating-executable-jars-for-dropwizard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="executable-jars"><![CDATA[executable jars]]></category>
		<category domain="post_tag" nicename="gradle"><![CDATA[gradle]]></category>
		<category domain="category" nicename="gradle-2"><![CDATA[Gradle]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422560852]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:17:"52.44891905573728";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:17:"49.98463169301688";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:17:"39.75014568558211";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:18:"38.979296971267814";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"603";s:5:"score";s:18:"21.290123288966292";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:18:"19.309658936961526";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1322</wp:comment_id>
			<wp:comment_author><![CDATA[Kyle Boon]]></wp:comment_author>
			<wp:comment_author_email>kyle.f.boon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kyleboon.org</wp:comment_author_url>
			<wp:comment_author_IP>208.115.83.237</wp:comment_author_IP>
			<wp:comment_date>2013-07-22 16:30:49</wp:comment_date>
			<wp:comment_date_gmt>2013-07-22 14:30:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might want to check out https://github.com/johnrengelman/shadow which was built at Bloomhealth specifically for use with dropwizard. You can see how to use it in my github example: https://github.com/kyleboon/contact_dropwizard]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374503449.777143001556396484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374504991.9228179454803466796875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1323</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>145.221.193.39</wp:comment_author_IP>
			<wp:comment_date>2013-07-22 16:57:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-22 14:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Kyle,

I checked it out already, and I commented on your blogpost before. Thanks for the reply!

Erik]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1322</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374505020.3119308948516845703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2612</wp:comment_id>
			<wp:comment_author><![CDATA[java dropwizard project with gradle | 五味编程]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.5bitcode.com/2014/06/java-project-with-gradle-in-5-mins-2</wp:comment_author_url>
			<wp:comment_author_IP>192.210.142.151</wp:comment_author_IP>
			<wp:comment_date>2014-06-17 08:35:20</wp:comment_date>
			<wp:comment_date_gmt>2014-06-17 06:35:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Gradle: creating executable jars for DropWizard  [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402986920.5840590000152587890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402987474.0164830684661865234375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160934.193399906158447265625;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.7441980838775634765625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Gradle: displaying artefact locations</title>
		<link>http://www.jworks.nl/2013/07/22/gradle-displaying-artefact-locations/</link>
		<pubDate>Mon, 22 Jul 2013 07:18:02 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=599</guid>
		<description></description>
		<content:encoded><![CDATA[Gradle's output, unlike verbose build tools like Maven, is very terse. In my opinion, a bit too terse. For example, when running <code>gradle jar</code>, this is the output:

<code>
:epub-organizer-core:compileJava UP-TO-DATE
:epub-organizer-core:processResources UP-TO-DATE
:epub-organizer-core:classes UP-TO-DATE
:epub-organizer-core:jar UP-TO-DATE
:epub-organizer-dropwizard:compileJava UP-TO-DATE
:epub-organizer-dropwizard:processResources UP-TO-DATE
:epub-organizer-dropwizard:classes UP-TO-DATE
:epub-organizer-dropwizard:jar UP-TO-DATE

BUILD SUCCESSFUL

Total time: 13.752 secs
</code>

Okay, that's nice, looks good, but now what? Where's my jar? Remembering that it's produced in <code>build/libs</code> is easy, but a less frequently used task like <code>distZip</code> will produce it's artefacts in a different location, so you'll have to remember those locations to. Luckily, Gradle is a very flexible build tool, and with the help of my friend <a href="http://blog.proxerd.pl/">Marcin Erdmann</a>, we came up with the following Gradle script, which you can put in <code>~/.gradle/init.gradle</code>, or as I did, in my <code>build.gradle</code> file. If you put it in your <code>init.gradle</code> file, please be aware that you'll have to remove the 'gradle.' prefixes.

<pre class="brush: groovy">
def artifacts = []

gradle.addListener(new TaskExecutionListener() {
        void afterExecute(Task task, TaskState state) {

                if(task in AbstractArchiveTask) {
                        artifacts << task.outputs.files.singleFile
                }
        }

        void beforeExecute(Task task) { }
})

gradle.addBuildListener(new BuildAdapter() {
        void buildFinished(BuildResult result) {
                if(artifacts) {
                        println "\nOutput location: ${artifacts.last()}\n"
                }
        }
})
</pre>

After each build, the following will now be produced:

<code>
:epub-organizer-dropwizard:classes UP-TO-DATE
:epub-organizer-dropwizard:jar UP-TO-DATE

BUILD SUCCESSFUL

Total time: 13.752 secs

Output location: /Users/erikp/User Files/Projects/epub-organizer-gradle/epub-organizer-dropwizard/build/libs/epub-organizer-dropwizard-1.0.jar
</code>

Still pretty terse, but quite useful anyway.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>599</wp:post_id>
		<wp:post_date>2013-07-22 09:18:02</wp:post_date>
		<wp:post_date_gmt>2013-07-22 07:18:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gradle-displaying-artefact-locations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gradle"><![CDATA[gradle]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="output"><![CDATA[output]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422853038]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:17:"45.24221625637581";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:18:"43.703543618675965";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"589";s:5:"score";s:17:"39.75014568558211";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"38.17106763340939";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"23.39651623770017";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:18:"20.259284401656267";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Gradle: renaming build.gradle to moduleName.gradle</title>
		<link>http://www.jworks.nl/2013/07/29/gradle-renaming-build-gradle-to-modulename-gradle/</link>
		<pubDate>Mon, 29 Jul 2013 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=603</guid>
		<description></description>
		<content:encoded><![CDATA[When working with multimodule projects, having many <code>build.gradle</code> files with the same name can be confusing. Gradle provides a way to change this behaviour by using the settings.gradle file, which you can put in your project.

An example <code>settings.gradle</code> file is listed below.

<pre class="brush:groovy">
rootProject.buildFileName = 'epub-organizer.gradle'

rootProject.children.each { project ->
    String fileBaseName = project.name.replaceAll("\\p{Upper}") { "-${it.toLowerCase()}" }
    project.buildFileName = "${fileBaseName}.gradle"
}
</pre>

As you can see here, the buildFileName of the main project is now called <code>epub-organizer.gradle</code> instead of <code>build.gradle</code>. For the sub projects (ie the children), the project name is retrieved, replacing all upper case characters with the lower case equivalent, prefixed by a dash, so that <code>epubOrganizer</code> will become <code>epub-organizer</code>. Of course, this is just an example, you can use any naming convention you'd like!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>603</wp:post_id>
		<wp:post_date>2013-07-29 10:00:00</wp:post_date>
		<wp:post_date_gmt>2013-07-29 08:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gradle-renaming-build-gradle-to-modulename-gradle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="gradle-2"><![CDATA[Gradle]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422762117]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"589";s:5:"score";s:18:"21.290123288966292";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:18:"19.560128413939033";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"568";s:5:"score";s:16:"17.3081058884428";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:16:"17.0643526778207";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:18:"15.731394810919188";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"12.039741429922527";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Register a custom Jackson ObjectMapper using Spring Javaconfig</title>
		<link>http://www.jworks.nl/2013/08/21/register-a-custom-jackson-objectmapper-using-spring-javaconfig/</link>
		<pubDate>Wed, 21 Aug 2013 09:03:32 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=611</guid>
		<description></description>
		<content:encoded><![CDATA[For a project for a client I'm working on, we are creating a JSON REST interface as a proxy for other systems. Our system collects data and transforms it to be used by the clients of our API. Most of the data we send are Strings, but for a new feature, we are migrating some of our code to <a href="http://www.joda.org/joda-money/">Joda Money</a>, a very convenient way of handling basic money operations.

To send our Money data back to our clients, we do a bit of conversion. For this, we use a Jackson Serializer, which looks a bit like this:

<pre class="brush: java">
public class JsonMoneySerializer extends JsonSerializer&lt;Money&gt; {

    @Override
    public void serialize(Money value, JsonGenerator jgen, SerializerProvider provider) throws IOException {
        //Write the amount in cents
        jgen.writeNumber(value.getAmountMinor());
    }
}
</pre>

However, finding out how to register this class was a bit a hassle, and turned out to be trivial once we found out. To register the Serializer, you'll need to have a custom ObjectMapper, like the following:

<pre class="brush: java">
public class MyObjectMapper extends ObjectMapper {
    public MyObjectMapper() {
        CustomSerializerFactory factory = new CustomSerializerFactory();
        factory.addSpecificMapping(Money.class, new JsonMoneySerializer());
        this.setSerializerFactory(factory);
   }
}
</pre>

Then we need to register the ObjectMapper in the <a href="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/beans.html#beans-java">JavaConfig </a>of our Spring application. This can be done with the following configuration:

<pre class="brush: java">
    @Bean
    public ObjectMapper jacksonObjectMapper() {
        return new MyObjectMapper();
    }

    @Bean
    public SerializationConfig serializationConfig() {
        return jacksonObjectMapper().getSerializationConfig();
    }
</pre>

And that's it. Now Jackson is automatically configured to convert all Money objects to cents using the ObjectMapper. I hope this helps for people who need this in the future so that it might save some time!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>611</wp:post_id>
		<wp:post_date>2013-08-21 11:03:32</wp:post_date>
		<wp:post_date_gmt>2013-08-21 09:03:32</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>register-a-custom-jackson-objectmapper-using-spring-javaconfig</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="javaconfig"><![CDATA[javaconfig]]></category>
		<category domain="post_tag" nicename="joda"><![CDATA[joda]]></category>
		<category domain="post_tag" nicename="money"><![CDATA[money]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422609834]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"430";s:5:"score";s:18:"42.061063899229765";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"446";s:5:"score";s:18:"41.450300600343624";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"453";s:5:"score";s:17:"38.73104837232221";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"475";s:5:"score";s:18:"34.014738484105585";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:17:"18.88701531264182";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:17:"17.48379373978484";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2517</wp:comment_id>
			<wp:comment_author><![CDATA[Matthew]]></wp:comment_author>
			<wp:comment_author_email>blogreply@webfuture.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>17.115.177.150</wp:comment_author_IP>
			<wp:comment_date>2014-02-05 18:26:31</wp:comment_date>
			<wp:comment_date_gmt>2014-02-05 17:26:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It would be really nice to see the code for CustomSerializerFactory. Are you extending SerializerFactory, BasicSerializerFactory or BeanSerializerFactory and, if so, what are you overriding?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391621191.6021668910980224609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393426630.707848072052001953125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2607</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>davideanderson@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.164.35.9</wp:comment_author_IP>
			<wp:comment_date>2014-06-03 21:30:44</wp:comment_date>
			<wp:comment_date_gmt>2014-06-03 19:30:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Prior to Jackson 2, CustomSerializerFactory was a part of Jackson, so he is just using the library provided class, not creating his own.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2517</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401823844.947247028350830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402987480.09173107147216796875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160934.7613708972930908203125;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.749279022216796875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4178</wp:comment_id>
			<wp:comment_author><![CDATA[Ben]]></wp:comment_author>
			<wp:comment_author_email>ben.green1005@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>157.83.97.242</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 16:36:32</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 14:36:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am attempting to use this to help us protect against XSS attacks, along with the solution suggested here:
https://stefanhendriks.wordpress.com/tag/objectmapper/

However, when debugging I can see that my object mapper is never used. How is the right implementation of the serializationConfiguration found? Is it all to do with the bean name?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403620592.4395830631256103515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403621430.731349945068359375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160933.4632968902587890625;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.7389240264892578125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4184</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pragt]]></wp:comment_author>
			<wp:comment_author_email>erik.pragt@jworks.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl</wp:comment_author_url>
			<wp:comment_author_IP>195.234.136.77</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 16:51:30</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 14:51:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ben, 

It's been a while, but I think you're right, and the bean name must be exactly this name. Could you try and let me know if that works for you?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4178</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403621490.6099889278411865234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160932.879540920257568359375;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.732779979705810546875;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4191</wp:comment_id>
			<wp:comment_author><![CDATA[Ben]]></wp:comment_author>
			<wp:comment_author_email>ben.green1005@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>157.83.125.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 17:01:16</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 15:01:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Erik,
Thanks for the swift response. I have the exact name that you have used, and it is still not being picked up. Do you remember if you had to add anything to the web.xml or anything like that?

Thanks in advance.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4184</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403622076.2094171047210693359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410160932.3032219409942626953125;s:7:"message";s:35:"erikp reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[erikp]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410161014.727653980255126953125;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Pure Python: Multiplying Strings</title>
		<link>http://www.jworks.nl/2013/11/01/pure-python-multiplying-strings/</link>
		<pubDate>Fri, 01 Nov 2013 13:29:38 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=621</guid>
		<description></description>
		<content:encoded><![CDATA[Whenever you want to create a repeat String in Python, you can use the overloaded <code>*</code> operator.

You can do so like this:
<pre class="brush: python">"-" * 80</pre>
or
<pre class="brush: python">'-' * 80</pre>
<!-- http://stackoverflow.com/questions/5181320/under-what-circumstances-are-rmul-called -->
(Note the difference in double and single quotes). Under the hood, when Python attempts to multiply two objects, it first tries to call the left object's <code>__mul__</code> method. The following piece of code does the same as above, but in a less readable way:
<pre class="brush: python">".".__mul__(10)</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>621</wp:post_id>
		<wp:post_date>2013-11-01 14:29:38</wp:post_date>
		<wp:post_date_gmt>2013-11-01 13:29:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pure-python-multiplying-strings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="python-3"><![CDATA[#Python]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Multiplying Strings Python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Pure Python: Multiplying Strings]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Pure Python is a blog about coding in Python.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422847209]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"834";s:5:"score";s:17:"47.27558056749392";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"19.521028215884428";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:18:"18.499376968568665";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: The or keyword</title>
		<link>http://www.jworks.nl/2013/11/05/python-goodness-the-or-keyword/</link>
		<pubDate>Tue, 05 Nov 2013 14:05:08 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=625</guid>
		<description></description>
		<content:encoded><![CDATA[The keyword <code>or</code> is used if at least one condition must be met. This can be used in the following way:

<pre class="brush: python">
winner = "Russel"

if ( name == "Danny" or name == "Frank" or name == "Russel"):
   print("You are a winner!")
</pre>

The above will print <code>You are a winner!</code> since Russel is a valid value in the if statement.

This is more useful when having default values:

<pre class="brush: python">
name = input("Type your name") or "Unknown"
print("Welcome {}".format(name)
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>625</wp:post_id>
		<wp:post_date>2013-11-05 15:05:08</wp:post_date>
		<wp:post_date_gmt>2013-11-05 14:05:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-goodness-the-or-keyword</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422770049]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"27.318228186184548";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"15.882711329268307";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"15.882711329268307";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Python&#039;s ternary operator</title>
		<link>http://www.jworks.nl/2013/11/03/pure-python-pythons-ternary-operator/</link>
		<pubDate>Sun, 03 Nov 2013 13:42:11 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=628</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- source: http://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator -->
Python is great at creating nice and consistent code and sometimes reads as a story. This is also true in the case of <a href="http://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator">Python's ternary operator</a>. The syntax used for this is as follows:

<pre>
[on_true] if [expression] else [on_false]
</pre>

For example, the following is an example usage of the ternary operator:

<pre class="brush: python">
x, y = 10, 20
smallest = x if x < y else y
assert smallest == 10
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>628</wp:post_id>
		<wp:post_date>2013-11-03 14:42:11</wp:post_date>
		<wp:post_date_gmt>2013-11-03 13:42:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pure-python-pythons-ternary-operator</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[python-goodness-pythons-ternary-operator]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422730474]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:17:"35.92635837259289";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"23.104547154556755";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"23.104547154556755";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"18.499376968568665";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"179";s:5:"score";s:17:"16.24940707360687";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: The in keyword</title>
		<link>http://www.jworks.nl/2013/11/07/python-goodness-the-in-keyword/</link>
		<pubDate>Thu, 07 Nov 2013 14:37:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=636</guid>
		<description></description>
		<content:encoded><![CDATA[The <code>in</code> keyword has a number of uses. The two most used functions to check if a value is in a range of values, the other usage is used when traversing a tuple in a for loop.

A first example of using the <code>in</code> keyword is when checking for the existence of an element in a range or tuple:

<pre class="brush: python">
keyword = "lambda"

if keyword in ["and", "del", "from", "lambda"]:
    print("{} is a keyword").format(keyword)
</pre>

Will print <code>lambda is a keyword</code> the keyword is in the (limited) set of Python keywords.

The same can be used for checking a keyword in a tuple (notice the round braces):

<pre class="brush: python">
keyword = "lambda"

if keyword in ["and", "del", "from", "lambda"]:
    print("{} is a keyword").format(keyword)
</pre>

Also, the <code>in</code> keyword can be used when traversing a loop:
<pre class="brush: python">
for i in range(10):
    print(i)
</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>636</wp:post_id>
		<wp:post_date>2013-11-07 15:37:00</wp:post_date>
		<wp:post_date_gmt>2013-11-07 14:37:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-goodness-the-in-keyword</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422941878]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"625";s:5:"score";s:18:"27.318228186184548";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:18:"23.104547154556755";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"15.882711329268307";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Reversing a String</title>
		<link>http://www.jworks.nl/2013/11/11/python-goodness-reversing-a-string/</link>
		<pubDate>Mon, 11 Nov 2013 08:20:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=642</guid>
		<description></description>
		<content:encoded><![CDATA[Except for programming examples, you almost never encounter the need to reverse a String. But if you would, how would you do it in Python? There are many ways, but there are two Pythonic ways, and depending on your taste, or if you have memory constraints, you might pick one over the other.

<pre class="brush: python">
assert "torrap daed" == "dead parrot"[::1]
</pre>

This is <a href="http://docs.python.org/release/2.3.5/whatsnew/section-slices.html">extended slice</a> syntax. It works by doing [begin:end:step] - by leaving begin and end off and specifying a step of -1, it reverses a string.

When working with larger strings or when you just don’t want to reverse the whole string at once, you can use the reversed() built-in. 

<pre class="brush: python">
s = "unladen swallow"
assert "wollaws nedalnu" == "".join(reversed(s))
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>642</wp:post_id>
		<wp:post_date>2013-11-11 09:20:00</wp:post_date>
		<wp:post_date_gmt>2013-11-11 08:20:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-goodness-reversing-a-string</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="goodness"><![CDATA[goodness]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="reverse-string"><![CDATA[reverse string]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423214522]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"19.521028215884428";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"681";s:5:"score";s:18:"17.001942905220233";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"15.882711329268307";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Formatting Strings</title>
		<link>http://www.jworks.nl/2013/11/13/python-goodness-formatting-strings/</link>
		<pubDate>Wed, 13 Nov 2013 08:04:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=644</guid>
		<description></description>
		<content:encoded><![CDATA[Formatting Strings is a great way of doing complex variable replacements and formatting via String's <code>format()</code> method. This method is extensively described in <a href="http://www.python.org/dev/peps/pep-3101">PEP 3101</a>, and this blogpost will describe some ways of making use of the power <code>format()</code> brings us.

Format Strings contain fields surrounded by curly braces {} which can be replaced by arguments provided to the format() method. These fields can be positional, either explicitly by providing the positions (indicated with {0}, {1}, etc), or implicitly (indicated with {}). Alternatively, fields can be replaced by name ({name}).

<b>Positional replacement</b>
<pre class="brush: python">
# Implicitly references the first positional argument
assert "I seek the holy grail" == "I seek the {}".format("holy grail")     
# Implicitly references the first and second positional argument
assert "What is the average wind speed velocity of an unladen swallow?" == "What is {} of an {}?".format("the average wind speed velocity", "unladen swallow")
</pre>

<b>Using names</b>
<pre class="brush: python">
assert "My name is Arthur" == "My name is {name}".format(name="Arthur")
</pre>

Instead of supplying 'simple' values, it's also possible to supply objects to the format method.

<pre class="brush: python">
class Person:
   def __init__(self):
      self.object = "hat"
      self.profession = "witch"

person = Person()
assert "And the hat. She's a witch" == "And the {0.object}. She's a {0.profession}".format(person)
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date>2013-11-13 09:04:00</wp:post_date>
		<wp:post_date_gmt>2013-11-13 08:04:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-goodness-formatting-strings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="format"><![CDATA[format]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="string"><![CDATA[string]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423620875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:17:"39.74749601305837";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:17:"21.97175620501245";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"852";s:5:"score";s:18:"14.749920379724001";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:18:"14.749920379724001";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"12.552695802171566";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"12.552695802171566";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Upgrading Grails 2.2.4 to 2.3.0</title>
		<link>http://www.jworks.nl/2013/09/11/upgrading-grails-2-2-4-to-2-3-0/</link>
		<pubDate>Wed, 11 Sep 2013 10:33:39 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=652</guid>
		<description></description>
		<content:encoded><![CDATA[I'm currently working on a trivial Grails application, running on Grails 2.2.4. However, two days ago, <a href="http://grails.org/download">Grails 2.3.0</a> was released, providing many <a href="http://grails.org/doc/latest/guide/introduction.html#whatsNew23">new features</a>, like testing with Spock by default, Hibernate 4, etc. However, when upgrading to 2.3.0 using
<pre class="brush: groovy">grails upgrade</pre>
I received the following error:
<pre>| Error Resolve error obtaining dependencies: Failed to resolve dependencies (Set log level to 'warn' in BuildConfig.groovy for more information):

- org.grails.plugins:tomcat:2.3.0
- org.grails.plugins:hibernate:2.3.0</pre>
I turns out <code>grails upgrade</code> doesn't fix this for you (Thanks <a href="https://twitter.com/tim_yates">Tim</a>!) (and, starting from Grails 2.3.0, it's <a href="http://grails.org/doc/latest/guide/upgradingFromPreviousVersionsOfGrails.html">deprecated and replaced</a> by <code>use-current-grails-version</code>), and you need to fix this yourself. It turns out the fix is quite easy; just add replace your Tomcat and Hibernate dependencies by this:
<pre class="brush: groovy">    plugins {
        // plugins for the build system only
        build ":tomcat:7.0.42"

        // plugins needed at runtime but not for compilation
        runtime ":hibernate:3.6.10.1" // or ":hibernate4:4.1.11.1"

        // other plugins here
    }</pre>
And it will work. Hope it's useful, and remember to <b>carefully</b> read the docs, I missed it.

<strong>Update (14-10-2013)</strong>: If you are wondering why debugging doesn't work: you'll need to start Grails with <code>run-app --debug-fork
</code><b>IntelliJ</b> <strong>Update (1-10-2013) </strong>: IntelliJ 12.1.5 <a href="http://blog.jetbrains.com/idea/2013/10/intellij-idea-12-1-5-update-is-available/">has been released</a>, which now has support for Grails 2.3.0.
<del datetime="2013-10-01T15:28:17+00:00">If you are using IntelliJ (12.1.5 EAP at the moment), you'll find out that it's not compatible with Grails 2.3.0. There's an <a href="http://youtrack.jetbrains.com/issue/IDEA-108180">issue</a> for that, which has been fixed. Applying the patches from the Youtrack issue will fix the issue and will make Grails 2.3.0 working on IntelliJ 12.1.5.</del>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>652</wp:post_id>
		<wp:post_date>2013-09-11 12:33:39</wp:post_date>
		<wp:post_date_gmt>2013-09-11 10:33:39</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-grails-2-2-4-to-2-3-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<category domain="post_tag" nicename="intellij"><![CDATA[intellij]]></category>
		<category domain="post_tag" nicename="upgrade"><![CDATA[upgrade]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422700446]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"704";s:5:"score";s:17:"45.83447997773596";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"45.49077946399075";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"214";s:5:"score";s:17:"38.71793161974268";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"194";s:5:"score";s:17:"38.32089461161693";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:17:"38.27164451711426";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:18:"38.094443248262756";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-38)</title>
		<link>http://www.jworks.nl/2013/09/19/this-week-in-python-2013-38/</link>
		<pubDate>Thu, 19 Sep 2013 13:58:23 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=667</guid>
		<description></description>
		<content:encoded><![CDATA[<em>"Please! This is supposed to be a happy occasion. Let's not bicker and argue over who killed who." -- <a href="http://www.imdb.com/name/nm0001589/?ref_=tt_trv_qu">King of Swamp Castle</a></em>

The big news is that <a href="http://www.python.org/download/releases/3.4.0/">Python 3.4.0 alpha 2</a> was released on September 9th, 2013. Python 3.4 will feature 5 new PEP's, of which the Enum is a very interesting one. The current schedule is to release the final version of Python 3.4 at the end of Februari 2014, so there's enough time to try out the new features and give feedback to the Python development team.

Other news in the community is the start of the <a href="http://djangodash.com/">Django Dash</a> and the <a href="http://wsgiwar.com">WSGI War</a>, both allowing you to compete in a 48 hour battle to build the most amazing application ever. Register now to battle, only 1 day left!

One final noteworthy news item: there's a new <a href="http://www.pyladies.com">PyLadies </a>chapter! The <a href="http://www.pyladies.com/locations/amsterdam/">Amsterdam PyLadies</a> have already had their first meetup and are now added to the PyLadies website, an effort smoothly executed by<a href="https://github.com/econchick"> Lynn Root</a> and <a href="https://github.com/lieke22">Lieke Boon</a>. Kudos!

<i>If you want to keep up with these "This Week in Python" posts you can access them directly via their category link or in an RSS reader with the feed for just these posts.</i>

<strong>Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/pagekite/Mailpile">Mailpile</a> - An experimental indexing and search engine for e-mail</li>
	<li><a href="https://github.com/facebook/huxley">huxley</a> - Watches you browse, takes screenshots, tells you when they change.</li>
	<li><a href="https://github.com/kennethreitz/python-guide">python-guide</a> - Python best practices guidebook, written for Humans.</li>
	<li><a href="https://github.com/FZambia/centrifuge">centrifuge</a> - Simple real-time messaging in web applications.</li>
	<li><a href="https://github.com/django/django">django</a> - The Web framework for perfectionists with deadlines.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li>Jeff Knupp about <a href="http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/">Open Sourcing &amp; Python</a></li>
	<li>Hartley Brody on how to write <a href="http://blog.hartleybrody.com/python-style-guide/?utm_content=bufferb9d6c&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">readable Python code</a> for new developers</li>
</ul>
<strong>Interesting tweets</strong>

<a href="https://twitter.com/cherrypy/status/380676697848553472">@CherryPy</a>: Help the <a dir="ltr" href="https://twitter.com/cherrypy">@CherryPy</a> soldier <a dir="ltr" title="https://groups.google.com/forum/#!topic/cherrypy-users/xubAyBGbyGg" href="https://t.co/sD1TUE08QC" target="_blank" rel="nofollow" data-expanded-url="https://groups.google.com/forum/#!topic/cherrypy-users/xubAyBGbyGg">https://groups.google.com/forum/#!topic/cherrypy-users/xubAyBGbyGg …</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a>
<a href="https://twitter.com/gvwilson/status/380032140446273536">@gvwilson</a>: *Very* useful: please may we have for Python and R source code? “<a dir="ltr" href="https://twitter.com/hmason">@hmason</a>: whoa, <a dir="ltr" title="http://explainshell.com/" href="http://t.co/NIOfFIstB1" target="_blank" rel="nofollow" data-expanded-url="http://explainshell.com/">http://explainshell.com/ </a> is very useful”
<a href="https://twitter.com/jdunck/status/380523855363584000/photo/1">@jdunk</a>: This is python. <a dir="ltr" href="http://t.co/o07aTKNCA3" data-pre-embedded="true">pic.twitter.com/o07aTKNCA3</a>
<a href="https://twitter.com/Lieke2208/status/380088585359093760">@lieke2208</a>: Just created my first pull request. I feel very proud!! https://github.com/pyladies/pyladies/pull/72 #github #PyLadies
<a href="https://twitter.com/pycon/status/379818406578356226">@pycon</a>:Want to help pick talks for PyCon 2014? Join us on IRC weekly at 3PM CDT on M/W/F &amp; 8PM CDT on T/R. Sign up here:  <a href="https://mail.python.org/mailman/listinfo/pycon-pc">https://mail.python.org/mailman/listinfo/pycon-pc</a>
<a href="https://twitter.com/pydanny/status/380654858375671808">@pydanny</a>: Want to compete in Django Dash but prefer Flask or Pyramid? Join the WSGI War! http://wsgiwar.com
<a href="https://twitter.com/PyLadiesAMS/status/380618204453670913">@pyladiesAMS</a>: Our meetup will be held at Marktplaats Office Amsterdam. WIBAUTSTRAAT 224 1097 DN Amsterdam. See you there! http://www.meetup.com/PyLadiesAMS/events/140665992/

<strong>Jobs</strong>
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Python Jobs on Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Python Jobs on Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Python Jobs on Monster</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://www.pyconuk.org/">PyCon UK</a> (20-23 Sept 2013)</li>
	<li><a href="http://www.meetup.com/PyLadiesAMS/events/140665992/">PyLadiesAMS Socialize Meet and Greet</a> (24 Sept 2013)</li>
</ul>
<strong>Last but not least</strong>

<strong></strong>Next year, a new O'Reilly book will be published about <em><a href="http://shop.oreilly.com/product/0636920028963.do">High Performance Python</a>. </em>It will be written by <a href="http://ianozsvald.com/">Ian Ozsvald</a> and <a href="http://micha.gd/">Micha Gorelick</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>667</wp:post_id>
		<wp:post_date>2013-09-19 15:58:23</wp:post_date>
		<wp:post_date_gmt>2013-09-19 13:58:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-python-2013-38</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="this-week-in-python"><![CDATA[this week in python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_post_restored_from</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:20:"restored_revision_id";i:674;s:16:"restored_by_user";i:2;s:13:"restored_time";i:1379592126;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422797654]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:16:"44.5029918454163";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:16:"44.5029918454163";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:18:"39.426689516478355";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"38.09208623639823";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:17:"36.47022580369531";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"865";s:5:"score";s:18:"26.240235184800255";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-39)</title>
		<link>http://www.jworks.nl/2013/09/25/this-week-in-python-2013-39/</link>
		<pubDate>Wed, 25 Sep 2013 08:03:54 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=681</guid>
		<description></description>
		<content:encoded><![CDATA[<em>"She turned me into a newt!"</em>
<em>"A newt?"</em>
<em>"I got better"</em>

Coursera will start a programming course October the 7th, named <a href="https://www.coursera.org/course/interactivepython">"An Introduction to Interactive Programming in Python"</a>. The course is given by Joe Warren, Scott Rixner, John Greiner and Stephen Wong who will teach you in a fun way the basics of programming in Python. The main focus of the course will be on building simple interactive games such as Pong, Blackjack and Asteroids.

Also, <a href="http://www.jetbrains.com">JetBrains</a>, the company behind great products like IntelliJ, Resharper and TeamCity released version 3.0 of their PyCharm Python Editor. And the best thing is that JetBrains released two version of PyCharm, just as they do with IntelliJ: a free, open source editor (PyCharm Community Edition) and a paid, Ultimate edition. Be sure to checkout the <a href="http://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html">feature comparison</a>!

<i>If you want to keep up with these "This Week in Python" posts you can access them directly via their category link or in an RSS reader with the feed for just these posts.</i>

<strong>Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/KvasirSecurity/Kvasir">KvasirSecuriry</a> - Kvasir: Penetration Test Data Management</li>
	<li><a href="https://github.com/ansible/ansible">Ansible </a>- Ansible is a radically simple IT orchestration engine that makes your applications and systems easier to deploy.</li>
	<li><a href="https://github.com/pagekite/Mailpile">Mailpile</a> - An experimental indexing and search engine for e-mail</li>
	<li><a href="https://github.com/django/django">Django</a> - The Web framework for perfectionists with deadlines.</li>
	<li><a href="https://github.com/jeroenjanssens/data-science-toolbox">Data Science Toolbox </a>- A collection of command-line tools that facilitate the obtaining, scrubbing, and exploring of data.</li>
	<li><a href="https://github.com/kirang89/pycrumbs?utm_content=buffer5d33b&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Pycrumbs</a> - Bits and Bytes of Python from the Internet.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://vexorian.blogspot.nl/2013/09/updating-cpython-testers.html">Updating C++/Python TopCoder testers</a></li>
	<li><a href="http://blog.zorinholdings.com/post/62051195442/spreading-the-raspberry-jam">Spreading the Raspberry Jam at PyCon UK 2013</a></li>
	<li><a href="http://montrealpython.org/2013/09/cfp-mp40/">Call for speakers for Montréal-Python 40: Xylophonic Xenotransplantation</a></li>
        <li><a href="http://blog.disqus.com/post/62187806135/scaling-django-to-8-billion-page-views">Scaling DJango to 8 billion page views</a></li>
</ul>
<strong>Interesting tweets</strong>

<a href="https://twitter.com/FloorDrees/status/381047100588691456">@FloorDrees</a>: Girls Can't Code <a dir="ltr" title="http://buff.ly/1et1ATY" href="http://t.co/MQ0eztUTil" target="_blank" rel="nofollow" data-expanded-url="http://buff.ly/1et1ATY">http://buff.ly/1et1ATY </a> via <a dir="ltr" href="https://twitter.com/phuesler">@phuesler
</a><a href="https://twitter.com/jezdez/status/382556829701898240">@jezdez</a>: ElasticSearch now has an official Python library:<a href="https://github.com/elasticsearch/elasticsearch-py"> https://github.com/elasticsearch/elasticsearch-py</a> PyPI: <a href="https://pypi.python.org/pypi/elasticsearch/0.4.1">https://pypi.python.org/pypi/elasticsearch/0.4.1 …</a> Docs: <a href="http://elasticsearch-py.readthedocs.org/en/latest/">http://elasticsearch-py.readthedocs.org/en/latest/ </a>#python
<a href="https://twitter.com/kcunning/status/382554401464135680">@kcunning</a>: Hey! Teach Yourself Python in 24 Hours is out for Kindle! Paper edition is still coming: <a dir="ltr" title="http://www.amazon.com/Python-Hours-Yourself-Edition-ebook/dp/B00F4PSLYS/ref=tmm_kin_title_0" href="http://t.co/2nFaEDiq7H" target="_blank" rel="nofollow" data-expanded-url="http://www.amazon.com/Python-Hours-Yourself-Edition-ebook/dp/B00F4PSLYS/ref=tmm_kin_title_0">http://www.amazon.com/Python-Hours-Yourself-Edition-ebook/dp/B00F4PSLYS/ref=tmm_kin_title_0 …
</a><a href="https://twitter.com/pysheff/status/381816471971962882">@pysheff</a>: PyCon UK 2014 has been confirmed for Sept 19th - 22nd again at The Techno Centre, Coventry #pyconuk
<a href="https://twitter.com/voidspace/status/381489865801486336/photo/1">@voidspace</a>: Our regular tipple at PyCon UK. Monty Python Holy Ail. <a dir="ltr" href="http://t.co/gSH2d53xsu" data-pre-embedded="true">pic.twitter.com/gSH2d53xsu
</a><a href="https://twitter.com/pycon/status/382170834900504576">@pycon</a>: Registration is now open! <a dir="ltr" title="http://pycon.blogspot.com/2013/09/registration-is-now-open.html" href="http://t.co/EePjkNdAVf" target="_blank" rel="nofollow" data-expanded-url="http://pycon.blogspot.com/2013/09/registration-is-now-open.html">http://pycon.blogspot.com/2013/09/registration-is-now-open.html …</a>

<strong>Jobs</strong>
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Python Jobs on Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Python Jobs on Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Python Jobs on Monster</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://www.bubbleconf.com/">Bubbleconf 2013 </a>(27 Sept 2013)</li>
	<li><a href="http://www.meetup.com/Amsterdam-Python-Meetup-Group/events/137087182/">More drinks, pizza and Talks at Byte meetup</a> (2 oktober 2013)</li>
</ul>
<strong>Last but not least</strong>

On September 27 Bubbleconf 2013 will take place at De Beurs van Berlage in Amsterdam. Bubbleconf aims to provide inspiring tools to startups and entrepreneurs looking for design, development and business insights. They have a great lineup. One of the speakers will be Zed Shaw, the writer of <a href="http://learnpythonthehardway.org/">Learn Python The Hard Way.</a> He'll be retiring from speaking at tech conferences and will be giving his final talk at Bubbleconf 2013. There are only 3 <a href="https://bubbleconf2013.paydro.net/">tickets</a> left, so if you'd like to go..better hurry! Next week we'll post a small review in this blog.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2013-09-25 10:03:54</wp:post_date>
		<wp:post_date_gmt>2013-09-25 08:03:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-python-2013-39</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422933587]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:17:"39.77256213003301";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"37.52053960453678";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"34.74795088213483";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:16:"32.4959283566386";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:16:"32.4959283566386";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"719";s:5:"score";s:18:"29.879262717338243";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The curious case of Grails&#039; generate-all</title>
		<link>http://www.jworks.nl/2013/09/24/the-curious-case-of-grails-generate-all/</link>
		<pubDate>Tue, 24 Sep 2013 11:30:27 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=704</guid>
		<description></description>
		<content:encoded><![CDATA[I've been using Grails for some years now, and my normal workflow is something like: <code>grails create-app</code>, followed by creating some domain class, followed by a a <code>grails generate-all</code>, and a <code>grails run-app</code>. It helps greatly in selling Grails, and people are usually quite impressed by the speed of having an up and running hello-world application in Grails.

However, since Grails 2.3.0, this is not the case anymore. The Grails scaffolding is now a separate plugin, and while that's not bad per se, it is bad that it's a compile time plugin. The compile time means that the plugin is only added to the project whenever a compile time target is used, and personally, I only get into the compile time whenever I do a run-app. And yes, you're right, that's <b>after</b> the generate-all, which, as you might have guessed, doesn't work in Grails 2.3.0 before having run a compile target (and, not coincidentally, <code>grails create-domain-class</code> is such a target...)

I took me some time to figure this out, and it breaking my not-so-weird workflow, so I've created a <a href="jira.grails.org/browse/GRAILS-10530">Jira issue</a> for this. I'm not sure how to fix this, but generate-all just "needs to work", as also <a href="jira.grails.org/browse/GPSCAFFOLD-56">others</a> have pointed out. 

So, should you run into this, running <code>grails compile</code>, even though it's functionally not needed, solves your issues.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2013-09-24 13:30:27</wp:post_date>
		<wp:post_date_gmt>2013-09-24 11:30:27</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-curious-case-of-grails-generate-all</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="generate-all"><![CDATA[generate-all]]></category>
		<category domain="category" nicename="grails"><![CDATA[Grails]]></category>
		<category domain="post_tag" nicename="grails-2"><![CDATA[grails]]></category>
		<category domain="category" nicename="groovy"><![CDATA[Groovy]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423401812]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:17:"45.83447997773596";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"159";s:5:"score";s:17:"42.62331129149974";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"275";s:5:"score";s:17:"39.71250720578057";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"209";s:5:"score";s:17:"39.69063715385883";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"205";s:5:"score";s:17:"36.36062162695128";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"251";s:5:"score";s:18:"35.601642383595525";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-40)</title>
		<link>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/</link>
		<pubDate>Wed, 02 Oct 2013 06:38:03 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=717</guid>
		<description></description>
		<content:encoded><![CDATA[<em>King Arthur: "One, two, five!"</em>
<em>Sir Galahad: "Three sir!"</em>
<em>King Arthur: "THREE!"</em>

There are so many things happening in the Python world, that we completely missed the release of <a href="http://docs.python-requests.org/en/latest/community/updates/#release-history">version 2.0 of the popular requests</a> library. Combine this with the excellent <a href="https://github.com/gabrielfalcao/HTTPretty">HTTPRetty</a> mocking library and you've got a very Pythonic way of handling as well as testing HTTP requests.

Also <a href="http://www.python.org/download/releases/3.4.0/">Python 3.4.0 alpha 3</a> was released on September 29th, 2013. This is a preview release of the next major release of Python, Python 3.4, and is not suitable for production environments. Python 3.4 includes a range of improvements of the 3.x series, including hundreds of small improvements and bug fixes.

<strong>Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/piskvorky/gensim">Gensim</a> - Python Framework for Topic Modelling</li>
	<li><a href="https://github.com/olgabot/prettyplotlib">Prettyplotlib</a> - Painlessly create beautiful matplotlib plots</li>
	<li><a href="https://github.com/ansible/ansible">Ansible </a>- Ansible is a radically simple IT orchestration engine that makes your applications and systems easier to deploy.</li>
	<li><a href="https://github.com/pagekite/Mailpile">Mailpile</a> - An experimental indexing and search engine for e-mail</li>
	<li><a href="https://github.com/kennethreitz/requests">Requests</a> - Python HTTP Requests for Humans™</li>
	<li><a href="https://github.com/getsentry/raven-python">Raven</a> - Raven is a Python client for Sentry (getsentry.com)</li>
	<li><a href="https://github.com/ipython/ipython">IPython </a>- Official repository for IPython itself.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://kennethreitz.org/introducing-flask-sockets/">Introducing Flask Sockets</a></li>
	<li><a href="http://streams.robscanlon.com/github">A Wargames Github visualisation. Really nice UI!</a></li>
	<li><a href="http://blog.scripted.com/staff/nlp-hacking-in-python/">NLP Hacking in Python</a></li>
	<li><a href="http://www.pytennessee.org/">PYTennessee call for papers</a></li>
	<li><a href="https://www.udemy.com/blog/modern-language-wars/?utm_source=buffer&amp;utm_campaign=Buffer&amp;utm_content=buffer0ed48&amp;utm_medium=twitter">Code Wars Ruby vs Python vs PHP (Infographic)</a></li>
	<li><a href="http://inventwithpython.com/blog/2013/09/30/downloading-imgur-posts-linked-from-reddit-with-python/">Downloading Imgur Posts Linked From Reddit with Python</a></li>
	<li><a href="http://julien.danjou.info/blog/2013/python-3.4-single-dispatch-generic-function">Python 3.4 single dispatch</a></li>
	<li><a href="http://blog.mortardata.com/post/62334142398/hadoop-python-pig-trunk?utm_content=buffer8aaed&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Python + Hadoop: Real Python in Pig Trunk</a></li>
</ul>
<strong>Interesting tweets
</strong>

<a href="https://twitter.com/epragt/status/383494872696508416">@epragt</a>: Sneak preview of my own <a dir="ltr" href="https://twitter.com/search?q=%23pylady&amp;src=hash" data-query-source="hashtag_click">#pylady</a> going to <a dir="ltr" href="https://twitter.com/bubbleconf">@bubbleconf</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> /cc <a dir="ltr" href="https://twitter.com/marcinerdmann">@marcinerdmann</a> <a dir="ltr" href="https://twitter.com/Lieke2208">@Lieke2208</a> <a dir="ltr" href="http://t.co/QtQtcgJ4zg" data-pre-embedded="true">pic.twitter.com/QtQtcgJ4zg</a>
<a href="https://twitter.com/hmason/status/384149408730054657">@hmason</a>: I made a python module for the NIST randomness beacon. RANDOM ALL THE THINGS! <a dir="ltr" title="http://bit.ly/16Kg8pd" href="http://t.co/ovzhz3S60o" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/16Kg8pd">bit.ly/16Kg8pd </a>
<a href="https://twitter.com/neo4j/status/384265078025224192">@neo4J</a>: Are you into #python and @Neo4j ? Then you should check out the latest release 1.6 of #py2neo. Blog post by <a dir="ltr" href="https://twitter.com/technige">@technige</a> <a dir="ltr" title="http://blog.neo4j.org/2013/09/py2neo-16.html" href="https://twitter.com/planetpython/status/385058243019423744" target="_blank" rel="nofollow" data-expanded-url="http://blog.neo4j.org/2013/09/py2neo-16.html">http://blog.neo4j.org/2013/09/py2neo-16.html …
@planetpython:</a> PyTennessee: The Opening Keynoter is.... <a href="http://t.co/0EohT4L3U9" target="_blank" rel="url" data-full-url="http://bit.ly/1aHSIVH">bit.ly/1aHSIVH
</a><a href="https://twitter.com/PythonWeekly/status/383237277465714689">@PythonWeekly</a>: <strong>pybotwar</strong> - Robot battle simulation with robots coded in Python <a dir="ltr" title="http://buff.ly/17VrPNJ" href="http://t.co/jpdEcHoMkm" target="_blank" rel="nofollow" data-expanded-url="http://buff.ly/17VrPNJ">http://buff.ly/17VrPNJ </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> <a dir="ltr" href="https://twitter.com/search?q=%23robot&amp;src=hash" data-query-source="hashtag_click">#robot
</a><a href="https://twitter.com/roguelynn">@roguelynn</a>: Holy crap no one told me I'd be getting a free <a dir="ltr" href="https://twitter.com/Spotify">@spotify</a> account! ;-D
<a href="https://twitter.com/zedshaw/status/383749194554429440">@zedshaw</a>: Back at my hotel after another awesome <a dir="ltr" href="https://twitter.com/bubbleconf">@bubbleconf</a> and evening out. Thanks everyone, this was lots of fun.
<a href="https://twitter.com/michelle_borkin">@michelle_borkin</a>:Fabulous <a href="http://twitter.com/search?q=%23python" target="_blank" rel="hashtag">#python</a> resource: "Best Python Resources for Beginners and Professionals" <a href="http://t.co/l9deudPLwF" target="_blank" rel="url" data-full-url="http://bit.ly/1g0ZjOW">bit.ly/1g0ZjOW</a>
<a href="http://www.twitter.com/pycoders">@pycoders:</a> Serving <a href="http://twitter.com/search?q=%23flask" target="_blank" rel="hashtag">#flask</a> with <a href="http://twitter.com/search?q=%23nginx" target="_blank" rel="hashtag">#nginx</a> <a href="http://t.co/ohOptY3XLF" target="_blank" rel="url" data-full-url="http://bit.ly/19wKLjF">bit.ly/19wKLjF</a> <a href="http://twitter.com/search?q=%23python" target="_blank" rel="hashtag">#python</a>

<strong> Jobs - Spotlight</strong>:
<ul>
	<li><a href="http://www.bonque.nl/vacature/web-developer-gezocht-pythondjango-bij-1club">Django Developer at 1% Club</a></li>
</ul>
Other sites:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Python Jobs on Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Python Jobs on Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Python Jobs on Monster</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://www.meetup.com/Amsterdam-Python-Meetup-Group/events/137087182/">More drinks, pizza and Talks at Byte meetup</a> (2 oktober 2013)</li>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
</ul>
Last week we promised a recap of Bubbleconf 2013. On this website we published a <a href="http://www.jworks.nl/2013/09/28/bubbleconf-2013/">review</a> of Bubbleconf 2013 on September 27.  Floor Drees, one of the speakers, also wrote a little <a href="http://www.1stfloorgraphics.nl/2013/09/30/wobbelbobbel-wobbelbobbel-bubbleconf/?utm_source=buffer&amp;utm_campaign=Buffer&amp;utm_content=buffer3234e&amp;utm_medium=twitter">recap</a>.

<strong>Last but not least</strong>

A reminder that if you're really interested in learning Python, or more about Python, you should really follow the course <a href="https://www.coursera.org/course/interactivepython">An Introduction to Interactive Programming</a> at Coursera. We'll be taking the course as well!

Also we would like to share this nice <a href="http://aasen.in/github_globe/?utm_source=buffer&amp;utm_campaign=Buffer&amp;utm_content=buffer6e6b0&amp;utm_medium=twitter">visualisation</a> of where GitHub users live.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>717</wp:post_id>
		<wp:post_date>2013-10-02 08:38:03</wp:post_date>
		<wp:post_date_gmt>2013-10-02 06:38:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-in-python-2013-40</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="this-week-in-python"><![CDATA[this week in python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423075605]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"65.67659567790164";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:17:"56.17407477375342";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:16:"47.9344052139751";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"45.31773957467473";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"865";s:5:"score";s:17:"44.97186696106602";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:16:"44.5029918454163";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bubbleconf 2013</title>
		<link>http://www.jworks.nl/2013/09/28/bubbleconf-2013/</link>
		<pubDate>Sat, 28 Sep 2013 07:00:06 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=719</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Mission:</strong> To provide inspiring tools to startups and entrepeneurs looking for design, development and business insights.
<strong>Date: </strong>27 september 2013
<strong>Location: </strong>Beurs van Berlage, Amsterdam (The Netherlands)

<strong>About Bubbleconf:</strong>

Bubbleconf is a conference in Amsterdam on design, development and entrepreneurship. In this blog I'll write a small review about the speakers that I've listened to at Bubbleconf 2013.

<strong>Main Speakers:</strong>

<a href="http://www.bubbleconf.com/#kyle-neath" data-highlight="">KYLE NEATH</a> (<a href="http://www.github.com/">GitHub</a>): <em>building the best product of your life.</em>
Kyle introduces us to 5 steps for building a good product: (Study) Theory of building software, Experience the real world (it'll make you cry), The art of execution, developing product institution and cultivating your environment.  I think the most important things he said (applicable to me)  were to always strive to do meaningful en significant work, be responsible, focus on results and not on process, take advantage of opportunities and get lucky.
<div>

<a href="http://www.bubbleconf.com/#chad-fowler" data-highlight="">CHAD FOWLER</a>: <em>how to be accomplished</em>
I really liked this talk about accomplishment. It opened my eyes about people like me, or other people I know,  who are trying be successful or feeling 'accomplished' by working hard and working a lot. One of Chad's most important advice is that you need to do things that you really love. And that you can better relax &amp; don't worry. When you're doing 'nothing', you're more productive and more creative. The busiest, hardest working among us aren't necessarily the most accomplished. Something I'll definitely hold in mind. Thanks Chad!
<div>

<a href="http://www.bubbleconf.com/#dan-cederholm" data-highlight="">DAN CEDERHOLM</a> &amp; <a href="http://www.bubbleconf.com/#rich-thornett" data-highlight="">RICH THORNETT</a>: <em>Ask Dribble anything
</em>This talk was held in an interview setting. Lot's of questions were fired at the founders of Dribble (a show &amp; tell site for beginners). I'm not a designer and not very familiar with Dribble, but I liked the way Dan &amp; Rich talked about their cooperation and the beginning of Dribble. An idea that became a big 'adventure' . The only minus about this presentation for me was that the interviewers already had in mind what they wanted to ask (which is not a bad thing per se) but the interview didn't go very fluently. They didn't really replied to the answers of the speakers, so it didn't become a conversation.
<div>

<a href="http://www.bubbleconf.com/#pia-henrietta-kekalainen" data-highlight="">PIA HENRIETTA KEKÄLÄINEN</a> &amp; <a href="http://www.bubbleconf.com/#floor-drees" data-highlight="">FLOOR DREES</a>(<a href="http://www.railsgirls.com/">RailsGirls</a>): <em>Hello BubbleConf, we've got your female engineers
</em>As one of the co-organizers of PyLadies Amsterdam I was really curious about this talk. PyLadies and RailsGirls share a lot of ideas about women in Tech. Floor and Pia Henrietta explained what a Rails Girls workshop looked like and how Rails Girls and all other workshops help lower the barrier for newcomers in the industry. Their presentation was full of girly details like cupcakes. I never really thought about having these 'typical' merchandise for women, maybe a learning point for us! I really like the atmosphere of the talk, at first I heard some guys laughing at the beginning, but in the end I think they really won them over! So go Rails Girls and go Female engineers! You inspired us to make our meet ups, workshops and presentations even better!
<div>

<a href="http://www.bubbleconf.com/#jackson-gabbard" data-highlight="">JACKSON GABBARD</a>: <em>Facebook tools and infrastructure, by hand</em>
<div>

Jackson Gabbard took us on a tour and showed us one day as an infrastructure coder at Facebook. He even told us about the faceworldproblems that show up at lunchtime and how they fixed that:  building a tool that tells employees how long the line is at the lunch buffet. Jackson gave some very interesting insights about task management and the importance of tasks.  Given that, it may be surprising to learn that the way they decide what tools and infrastructure to build is very organic, often driven by just a single person's vision.

<a href="http://www.bubbleconf.com/#koen-bok" data-highlight="">KOEN BOK</a> &amp; <a href="http://www.bubbleconf.com/#jorn-van-dijk" data-highlight="">JORN VAN DIJK</a>: <em>Ask Sofa anything</em>

This talk was also held in a interview setting, but I think this interview went a lot better than the other one. These interviewers had their questions also prepared, but they were getting somewhere. There was a chronologic story in this interview, which I liked a lot. I didn't know Sofa (a former software an interaction design company), but this talk gave a lot of insight about the start up of a company and the consequences of selling your company to another one. (The whole company, including employees, moved to San Francisco). The only minus in this presentation was that it made me curious, I wanted to see some thing that they had designed so that I could have a better picture of Sofa and the products they designed. Maybe something for next time!
<div>

<a href="http://www.bubbleconf.com/#zed-shaw" data-highlight="">ZED SHAW</a> (<a href="http://zedshaw.com/announcing_the_art_of_the_con_and_retiring_from_tech_conferences.txt">last words</a>): The Art of the Con: Memoirs of a conference trophy nerd

Last week I sent a tweet about me going to Bubbleconf. A <a href="https://twitter.com/marcinerdmann/status/381050240930836480">friend</a> of mine replied: ' make sure to go to @zedshaw's talk, he swears a lot', Bubbleconf replying that Zed Shaw's talk will be epic and with Zed Shaw answering 'Fuck yeah.' my expectations were high. As a (very very junior) Python programmer I read his book Learn Python the Hard Way, but I never heard him speak at conferences.  Zed talked about the reasons why he was retiring from speaking from tech conferences, he compared The Art Forgery to some Conferences (marketing pretending to be education) and gave us advice about how to filter out the bad speakers at conferences (check if the speaker recycles he slides!). He also gave advice on how to prepare for conferences and suggested to take singing lessons; this resulted in Zed singing through his slides. And he rocked it. Thanks Zed for a great last talk!

<strong>Lightning talks</strong>
<div>

Lightning talks are small <a href="http://en.wikipedia.org/wiki/PechaKucha">Pecha Kucha</a> style presentations that last under 10 minutes. Lightning talks provide an excellent opportunity to discover new ideas and inspiring speakers.
<ul>
	<li><a href="http://www.kajurria.nl/">Jurriaan Kamer</a> – Growing your company whilst staying agile</li>
	<li><a href="http://www.wirelab.nl/">Bart van Zon</a> – Numbers: measuring your campaign's effectiveness</li>
	<li><a href="http://versity.io/">Yoshua Wuyts </a>– Building better education</li>
	<li><a href="http://www.beehives.nl/">Bart de Groot</a> – From looking for workspace to designing a mobile office space in 20 steps</li>
</ul>
The lightning talks at Bubbleconf were refreshing. I really liked the fact that the presentations were only 6 minutes long and briefly mentioned the mainpoints. Bart de Groot's presentation about mobile office space was funny and innovative. It surprised me what's possible in that field. Too bad I haven't got enough workspace at home (or enough money) , maybe I would consider a mobile workspace like the one that looked like a safe. For me, the most inspiring talk was the one about agile management. The agile management sets the goals and the 'lower' business units decide how to implement these goals. I'm interested in how this works out in real life. I think it's a great idea to give your employees more freedom and invest in them. To be open and monitoring towards your employees and to be sure that your door is always open.

&nbsp;

[gallery link="file" ids="758,757,756,755,754"]

</div>
</div>
</div>
</div>
</div>
</div>
</div>
<strong>Overheard quotes at Bubbleconf:</strong>

Chad Fowler, 6Wunderkinder: <em>'I was really good at and interested in learning , but just a bad student'
</em>Jackson Gabbard, Facebook: <em>'Nobody cares about task tools, unless they don't have it. It's a building block at Facebook.'</em>
Kyle Neath, GitHub: <em>'Project management and software is a fantasy'
</em>Pia Henrietta Kekäläinen, RailsGirls: '<em>Learning to code is like dieting: you want fast results to keep you motivated!'
</em>Pieter Omvlee, Sketch: '<em>Design is really important if you want to sell an app to designers.'</em>

<strong>Tweets about Bubbleconf:</strong>

- <a href="https://twitter.com/barbarawajda/status/383517246808944640">@barbarawajda</a>: Love going to tech conferences - its the only place where there is a line to a mens restroom but not women's! <a dir="ltr" href="https://twitter.com/search?q=%23bubbleconf&amp;src=hash" data-query-source="hashtag_click">#bubbleconf</a>
- <a href="https://twitter.com/blaet/status/383622394679934976">@blaet</a>: Then this just happened: <a dir="ltr" href="https://twitter.com/zedshaw">@zedshaw</a> sang his first slides....and he rocked. At <a dir="ltr" href="https://twitter.com/bubbleconf">@<strong>bubbleconf</strong></a>.
-<a href="https://twitter.com/bumbledebee/status/383639129277227008">@bumbledee</a>: <a dir="ltr" href="https://twitter.com/PyLadiesAMS">@PyLadiesAMS</a> meeting <a dir="ltr" href="https://twitter.com/railsgirls_bln">@railsgirls_bln</a> at <a dir="ltr" href="https://twitter.com/bubbleconf">@<strong>bubbleconf</strong></a> in Amsterdammmm <a dir="ltr" href="http://t.co/EfhufOuVVy" data-pre-embedded="true">pic.twitter.com/EfhufOuVVy</a>
- <a href="https://twitter.com/epragt/status/383494872696508416">@epragt</a>: Sneak preview of my own <a dir="ltr" href="https://twitter.com/search?q=%23pylady&amp;src=hash" data-query-source="hashtag_click">#pylady</a> going to <a dir="ltr" href="https://twitter.com/bubbleconf">@bubbleconf</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> /cc <a dir="ltr" href="https://twitter.com/marcinerdmann">@marcinerdmann</a> <a dir="ltr" href="https://twitter.com/Lieke2208">@Lieke2208</a> <a dir="ltr" href="http://t.co/QtQtcgJ4zg" data-pre-embedded="true">pic.twitter.com/QtQtcgJ4zg</a>
-<a href="https://twitter.com/FloorDrees/status/383602118533197825">@FloorDrees</a>: Amazing talk by <a dir="ltr" href="https://twitter.com/langziehohr">@langziehohr</a> on <a dir="ltr" href="https://twitter.com/search?q=%23rgsoc&amp;src=hash" data-query-source="hashtag_click">#rgsoc</a> at <a dir="ltr" href="https://twitter.com/search?q=%23bubbleconf&amp;src=hash" data-query-source="hashtag_click">#bubbleconf</a> &lt;3 <a dir="ltr" href="http://t.co/GXRFc4VPU2" data-pre-embedded="true">pic.twitter.com/GXRFc4VPU2
</a>- <a href="https://twitter.com/PyLadiesAMS/status/383514856827023360">@PyLadiesAMS</a>: <a dir="ltr" href="https://twitter.com/search?q=%23Pyladies&amp;src=hash" data-query-source="hashtag_click">#Pyladies</a> AMS <a dir="ltr" href="https://twitter.com/bubbleconf">@bubbleconf</a> :) <a dir="ltr" href="http://t.co/NsUVxBwryN" data-pre-embedded="true">pic.twitter.com/NsUVxBwryN</a>
- <a href="https://twitter.com/thijs/status/383604523815940096">@thijs</a>: Here’s the full text my <a dir="ltr" href="https://twitter.com/bubbleconf">@bubbleconf</a> talk on how to run your business when you don’t know what you’re doing: <a dir="ltr" title="http://www.fngtps.com/2013/how-to-run-your-business/" href="http://t.co/B4Q7reyVSg" target="_blank" rel="nofollow" data-expanded-url="http://www.fngtps.com/2013/how-to-run-your-business/">http://www.fngtps.com/2013/how-to-run-your-business/ …</a>
- <a href="https://twitter.com/wilbertkramer/status/383590707178799105">@wilberkramer:</a> Facebook has an internal tool that tells employees how long the line is at lunch buffet. - <a dir="ltr" href="https://twitter.com/bubbleconf">@<strong>bubbleconf</strong></a> <a dir="ltr" href="https://twitter.com/search?q=%23faceworldproblems&amp;src=hash" data-query-source="hashtag_click">#faceworldproblems</a>
- <a href="https://twitter.com/zedshaw/status/383381324280516608">@zedshaw</a>: Just finished my talk. Going to have art forgery, conference fraud, DjangoCon and PyCon dirt, and hopefully will be lots of fun.

<strong>Last but not least:</strong>

After this short recap of Bubbleconf with things that I liked and that inspired me (this doesn't have to apply to you of course) I've been thinking..what did I learn today?
First of all, al the presenters at this conference had one thing in common: they talked about something that they really love to do. Start doing the things you love! (And maybe you'll be a speaker at Bubbleconf someday)

Second, it came to me that there is a sort of conclusion that occurred in a lot of presentations. A good product is about connecting with each other through that particular product; Facebook is about connecting people, agile management is about innovation and taking care of your employees and so on.  So, at the end of the day, it's not the product that is the most important, people are the most important: They are building your product, they'll buy your product: they are your product.

And female engineers. Female engineers are important too. :-)

&nbsp;

Thank you Bubbleconf for a great and inspring day and for inviting us! See you next year!

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date>2013-09-28 09:00:06</wp:post_date>
		<wp:post_date_gmt>2013-09-28 07:00:06</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bubbleconf-2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bubbleconf"><![CDATA[bubbleconf]]></category>
		<category domain="post_tag" nicename="conference"><![CDATA[conference]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423003303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:18:"37.101098542626694";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"36.29016832635631";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:18:"29.879262717338243";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:18:"29.879262717338243";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:18:"29.879262717338243";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"681";s:5:"score";s:18:"29.879262717338243";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1589</wp:comment_id>
			<wp:comment_author><![CDATA[BubbleConf 2013 Recap (Director&#8217;s Cut) – Phusion Corporate Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.phusion.nl/2013/10/03/bubbleconf-2013-recap/</wp:comment_author_url>
			<wp:comment_author_IP>2600:3c03::f03c:91ff:fe96:13a</wp:comment_author_IP>
			<wp:comment_date>2013-10-03 16:45:05</wp:comment_date>
			<wp:comment_date_gmt>2013-10-03 14:45:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] BubbleConf 2013 &#8212; by Lieke Boon [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380834607.74089908599853515625;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380811505.4132530689239501953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1586</wp:comment_id>
			<wp:comment_author><![CDATA[This week in Python (2013-40) | Jworks.nl - Agile Software Development using Groovy and Grails]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.jworks.nl/2013/10/02/this-week-in-python-2013-40/</wp:comment_author_url>
			<wp:comment_author_IP>2a01:7c8:eb:0:95:170:72:149</wp:comment_author_IP>
			<wp:comment_date>2013-10-02 08:38:50</wp:comment_date>
			<wp:comment_date_gmt>2013-10-02 06:38:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] week we promised a recap of Bubbleconf 2013. On this website we published a review of Bubbleconf 2013 on September 27.  Floor Drees, one of the speakers, also wrote a little [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380728434.2624089717864990234375;s:7:"message";s:44:"erikp changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"erikp";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>This week in Python (2013-41)</title>
		<link>http://www.jworks.nl/2013/10/09/week-python-2013-41/</link>
		<pubDate>Wed, 09 Oct 2013 15:56:20 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=751</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created an maintained by <a href="https://twitter.com/Lieke2208/"><span style="color: #808080;">Lieke Boon</span></a> and<a href="https://twitter.com/epragt"><span style="color: #808080;"> Erik Pragt</span></a>, two Python enthousiasts who try to bring you the latests developments in Python land.</span>

<em>King Arthur: Go and tell your master that we have been charged by God with a sacred quest. If he will give us food and shelter for the night, he can join us in our quest for the Holy Grail.</em>
<em>French Soldier: Well, I'll ask him, but I don't think he will be very keen. Uh, he's already got one, you see.</em>
<em>King Arthur: What?</em>
<em>Sir Galahad: He said they've already got one!</em>
<em>King Arthur: Are you sure he's got one?</em>
<em>French Soldier: Oh yes, it's very nice!</em>

It seemed like this was a bit more relaxed week for the Python crowd, with less big highlights. Either that, or we were to busy ourselves, with meetups like the ones at <a href="http://www.meetup.com/Amsterdam-Python-Meetup-Group/events/137087182/">Byte</a>, or hacking on our own projects. Either way, here's the weekly Python overview!

<strong>Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/crsmithdev/arrow">Arrow </a>- Better dates &amp; times for Python</li>
	<li><a href="https://github.com/kennethreitz/requests">Requests</a> - Python HTTP Requests for Humans™</li>
	<li><a href="https://github.com/ansible/ansible">Ansible </a>- Ansible is a radically simple IT orchestration engine that makes your applications and systems easier to deploy.</li>
	<li><a href="https://github.com/django/django">Django</a> - The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/facebook/tornado">Tornado</a> - Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.</li>
	<li><a href="https://github.com/scottrice/Ice">Ice</a> - Application to automatically add ROMs to Steam</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://nedbatchelder.com/blog/201310/whats_in_which_python_3.html">What's in which Python 3?</a></li>
</ul>
<strong>Interesting tweets
</strong>
<div><a href="https://twitter.com/pycon" data-user-id="9475182">‏@pycon</a><small>: </small>The first PyCon Spain is happening next month! <a dir="ltr" title="http://2013.es.pycon.org/" href="http://t.co/v0EOsyDLm0" target="_blank" rel="nofollow" data-expanded-url="http://2013.es.pycon.org/">http://2013.es.pycon.org/ </a> <a dir="ltr" href="https://twitter.com/PyConES">@PyConES</a></div>
<div><a href="https://twitter.com/kennethreitz" data-user-id="50478950">‏@kennethreitz</a><small>: </small>I’m very happy to announce that Heroku now supports WebSockets! Here’s the Python documentation: <a dir="ltr" title="https://devcenter.heroku.com/articles/python-websockets" href="https://t.co/4f6CbA0xFk" target="_blank" rel="nofollow" data-expanded-url="https://devcenter.heroku.com/articles/python-websockets">https://devcenter.heroku.com/articles/python-websockets …</a></div>
<div>
<div><a href="https://twitter.com/MongoDB" data-user-id="18080585">@MongoDB</a>: MongoDB Shell Cheat Sheet <a dir="ltr" title="http://buff.ly/1982Nfk" href="http://t.co/zPkNym5Yks" target="_blank" rel="nofollow" data-expanded-url="http://buff.ly/1982Nfk">http://buff.ly/1982Nfk </a></div>
<div>
<div><a href="https://twitter.com/pycoders" data-user-id="484757080">‏@pycoders</a>: Pillow 2.2.1 Released <a dir="ltr" title="http://bit.ly/GIGq6k" href="http://t.co/Mb0tVyxcrc" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/GIGq6k">http://bit.ly/GIGq6k </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a></div>
<div><a href="https://twitter.com/pycoders" data-user-id="484757080">@pycoders</a>: PyTennessee 2014 - Call for Proposals open now! <a dir="ltr" title="http://bit.ly/GIqDUl" href="http://t.co/TzKjHhMMJD" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/GIqDUl">http://bit.ly/GIqDUl </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> <a dir="ltr" href="https://twitter.com/search?q=%23conference&amp;src=hash" data-query-source="hashtag_click">#conference</a></div>
<div><a href="https://twitter.com/PythonDaily" data-user-id="1539473623">‏@PythonDaily</a>: Arrow: better dates and times for <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a> &gt; <a dir="ltr" title="http://crsmithdev.com/arrow/" href="http://t.co/a1nRrfsOIK" target="_blank" rel="nofollow" data-expanded-url="http://crsmithdev.com/arrow/">http://crsmithdev.com/arrow/ </a> via <a dir="ltr" href="https://twitter.com/niwibe">@niwibe</a></div>
<div><a href="https://twitter.com/Lieke2208" data-user-id="142023668">‏@Lieke2208</a>: Had a great day as studentcoach at the <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a> workshop of Besma(<a dir="ltr" href="https://twitter.com/B35m4">@B35m4</a> ). Go Meevaart IT Academy :)</div>
<div><a href="https://twitter.com/LucianWeb" data-user-id="994015256">@LucianWeb</a>: Python for beginners <a dir="ltr" href="https://twitter.com/search?q=%23udemy&amp;src=hash" data-query-source="hashtag_click">#udemy</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> <a dir="ltr" href="https://twitter.com/search?q=%23programming&amp;src=hash" data-query-source="hashtag_click">#programming</a> <a dir="ltr" href="https://twitter.com/search?q=%23lassoff&amp;src=hash" data-query-source="hashtag_click">#lassoff</a> Only $49 <a dir="ltr" title="http://ow.ly/pxA2S" href="http://t.co/wsUvzxgB3W" target="_blank" rel="nofollow" data-expanded-url="http://ow.ly/pxA2S">http://ow.ly/pxA2S </a></div>
<div><a href="https://twitter.com/OldhamMade" data-user-id="1382642515">@OldhamMade</a>: Like concurrency? Like <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a>? Like using the Actor Model? Then <a dir="ltr" title="http://buff.ly/16T6dOf" href="http://t.co/c9VthjbzkP" target="_blank" rel="nofollow" data-expanded-url="http://buff.ly/16T6dOf">http://buff.ly/16T6dOf </a> is for you. <a dir="ltr" title="http://fb.me/LVEuk71W" href="http://t.co/iY8LNFHbTW" target="_blank" rel="nofollow" data-expanded-url="http://fb.me/LVEuk71W">http://fb.me/LVEuk71W </a></div>
<div><a href="https://twitter.com/swcarpentry" data-user-id="125695429">‏@swcarpentry</a>: Our Biggest Bootcamp Ever at PyCon 2014: <a dir="ltr" title="http://software-carpentry.org/blog/2013/10/bootcamp-at-pycon-2014.html" href="http://t.co/QVjNLft5Xu" target="_blank" rel="nofollow" data-expanded-url="http://software-carpentry.org/blog/2013/10/bootcamp-at-pycon-2014.html">http://software-carpentry.org/blog/2013/10/bootcamp-at-pycon-2014.html …</a></div>
<div><a href="https://twitter.com/epragt" data-user-id="54184282">‏@epragt</a>: Machine learning with <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a> sourcecode: <a dir="ltr" title="https://github.com/luispedro/BuildingMachineLearningSystemsWithPython" href="https://t.co/KNtFrAddpR" target="_blank" rel="nofollow" data-expanded-url="https://github.com/luispedro/BuildingMachineLearningSystemsWithPython">https://github.com/luispedro/BuildingMachineLearningSystemsWithPython …</a></div>
</div>
</div>
<div></div>
<div></div>
<div><strong> Jobs - Spotlight</strong>:</div>
<ul>
	<li><a href="http://www.bonque.nl/vacature/web-developer-gezocht-pythondjango-bij-1club">Django Developer at 1% Club</a></li>
</ul>
Other sites:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Python Jobs on Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Python Jobs on Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Python Jobs on Monster</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://python.ie/pycon/2013/">PyCon Ireland 2013 (12-15 oct)</a></li>
</ul>
<strong>Last but not least</strong>

A reminder that if you're really interested in learning Python, or more about Python, you should really follow the course <a href="https://www.coursera.org/course/interactivepython">An Introduction to Interactive Programming</a> at Coursera. We'll be taking the course as well!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>751</wp:post_id>
		<wp:post_date>2013-10-09 17:56:20</wp:post_date>
		<wp:post_date_gmt>2013-10-09 15:56:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-41</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ansible"><![CDATA[ansible]]></category>
		<category domain="post_tag" nicename="django"><![CDATA[django]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="requests"><![CDATA[requests]]></category>
		<category domain="post_tag" nicename="this-week-in-python"><![CDATA[this week in python]]></category>
		<category domain="post_tag" nicename="tornado"><![CDATA[tornado]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[This week in Python. Week 41.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A weekly blog about Python.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422665702]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:17:"76.99444109759655";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"75.66294468479883";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"56.17407477375342";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:16:"44.5029918454163";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"40.07433175493799";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:18:"35.860650723256136";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-42)</title>
		<link>http://www.jworks.nl/2013/10/16/week-python-42-2013/</link>
		<pubDate>Wed, 16 Oct 2013 10:38:46 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=779</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created an maintained by <a href="https://twitter.com/Lieke2208/"><span style="color: #808080;">Lieke Boon</span></a> and<a href="https://twitter.com/epragt"><span style="color: #808080;"> Erik Pragt</span></a>, two Python enthusiasts who try to bring you the latest developments in Python land.</span>

<em> <em>“We are no longer the knights who say ni! We are now the knights who say ekki-ekki-ekki-pitang-zoom-boing!”</em></em>

Version 1.1.0 of <a href="https://blog.torproject.org/blog/stem-release-11">Stem</a>, a Python library for interacting with <a href="https://www.torproject.org/">Tor</a>, was released a couple days ago.  A new feature is the stem.descriptor.remote. The <a href="https://stem.torproject.org/api/descriptor/remote.html">stem.descriptor.remote</a> module allows you download current Tor descriptor data from directory authorities and mirrors, much like Tor itself does.

Also, Jetbrains <a href="http://blog.jetbrains.com/pycharm/2013/10/pycharm-3-0-1-rc-available/?utm_source=twitterfeed&amp;utm_medium=twitter&amp;utm_campaign=Feed%3A+Pycharm+%28JetBrains+PyCharm+Blog%29">announced</a> the availability of the Release Candidate for PyCharm 3.0.1, build 131.296. The build includes many bugfixes, particularly in the areas of inspections and TypeScript support, which are detailed in the <a href="http://confluence.jetbrains.com/display/PYH/PyCharm+131.296+Release+Notes">release notes</a> for this build.

<img class="alignleft size-full wp-image-795" alt="Python Conference" src="http://www.jworks.nl/wp-content/uploads/2013/11/pycon_logo1.gif" width="164" height="60" />This week <a href="https://2013.de.pycon.org/">PyCon Germany</a> and <a href="http://pl.pycon.org/2013/">PyCon Poland</a> will be taking place. Unfortunately we're not able to attend any of them, but we'll be following the events online. And don't forget to prepare for PyCon Finland and PyCon France!

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/crsmithdev/arrow">arrow</a> - Better dates &amp; times for Python</li>
	<li><a href="https://github.com/django/django">django</a> - The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/yhat/ggplot">ggplot</a> - ggplot for python</li>
	<li><a href="https://github.com/Suor/funcy">funcy</a> - A fancy and practical functional tools</li>
	<li><a href="https://github.com/quantmind/pulsar">pulsar</a> - Concurrent python</li>
	<li><a href="https://github.com/gruns/furl">furl</a> - URL manipulation made simple.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://www.nomadblue.com/blog/django/google-analytics-tracking-code-into-django-project/">Google Analytics tracking code into Django projects, the easy way</a></li>
	<li><a href="http://www.realpython.com/blog/python/generating-code-documentation-with-pycco/#.Ul16c1MW1xE">Generating Code Documentation with Pycco</a></li>
	<li><a href="http://blog.yhathq.com/posts/ggplot-for-python.html">ggplot for Python</a></li>
	<li><a href="http://hackflow.com/blog/2013/10/13/functional-python-made-easy/">Functional Python made easy</a></li>
	<li><a href="http://blog.udacity.com/2013/10/megan-from-researcher-to-developer.html">Megan: From Researcher to Developer
</a></li>
	<li><a href="http://info.jetbrains.com/PyCharm-Webinar-17-10-2013-Registration.html?utm_content=buffer90864&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Production Python 3 Web Development with Pyramid and PyCharm</a></li>
	<li><a href="http://blog.kevinastone.com/getting-started-with-django-rest-framework-and-angularjs.html">Getting Started with Django Rest Framework and Angular JS</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<div><a href="https://twitter.com/hpk42" data-user-id="20141257">‏@hpk42</a><small>: </small>Keynote from <a dir="ltr" href="https://twitter.com/faassen">@faassen</a> "spinning a web framework" starting at <a dir="ltr" href="https://twitter.com/search?q=%23PyConDE&amp;src=hash" data-query-source="hashtag_click">#PyConDE</a> <a dir="ltr" href="http://t.co/VAqzKjYVAY" data-pre-embedded="true">pic.twitter.com/VAqzKjYVAY</a></div>
</div>
<div><a href="https://twitter.com/pycon/status/390147791411871744" data-user-id="9475182">‏@pycon</a>: ★ 2 weeks ★ left to submit your poster proposals for PyCon 2014! <a dir="ltr" title="https://us.pycon.org/2014/posters/" href="https://t.co/WztyvaojRd" target="_blank" rel="nofollow" data-expanded-url="https://us.pycon.org/2014/posters/">https://us.pycon.org/2014/posters/ </a> Deadline: Nov 1st</div>
<div><a href="https://twitter.com/Dr_AymanB/status/390144141343985664">@Dr_AymanB</a>: “Code Wars: <a dir="ltr" href="https://twitter.com/search?q=%23PHP&amp;src=hash" data-query-source="hashtag_click">#PHP</a> vs <a dir="ltr" href="https://twitter.com/search?q=%23Ruby&amp;src=hash" data-query-source="hashtag_click">#Ruby</a> vs <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a>” <a dir="ltr" title="http://bit.ly/1aILArq" href="http://t.co/6yV5vhpaZA" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1aILArq">http://bit.ly/1aILArq </a> <a dir="ltr" title="http://fb.me/38k5nbvKl" href="http://t.co/dDsrvrTGC1" target="_blank" rel="nofollow" data-expanded-url="http://fb.me/38k5nbvKl">http://fb.me/38k5nbvKl </a></div>
<div><a href="https://twitter.com/dyjh/status/390134933202554880">@dyjh</a>: Ilan from <a dir="ltr" href="https://twitter.com/ContinuumIO">@ContinuumIO</a> explaining <a dir="ltr" href="https://twitter.com/search?q=%23Anaconda&amp;src=hash" data-query-source="hashtag_click">#Anaconda</a> and <a dir="ltr" href="https://twitter.com/search?q=%23Conda&amp;src=hash" data-query-source="hashtag_click">#Conda</a> at <a dir="ltr" href="https://twitter.com/PyConDE">@PyConDE</a> -- <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a> Packaging made easy <a dir="ltr" href="http://t.co/8fE0aO5xvL" data-pre-embedded="true">pic.twitter.com/8fE0aO5xvL</a></div>
<div><a href="https://twitter.com/AutomatedTester/status/390089931290578945">@AutomatedTester</a>: <a dir="ltr" href="https://twitter.com/search?q=%23Pyladies&amp;src=hash" data-query-source="hashtag_click">#Pyladies</a> Dublin has just been launched! <a dir="ltr" href="https://twitter.com/search?q=%23PyConIE&amp;src=hash" data-query-source="hashtag_click">#PyConIE</a> <a dir="ltr" href="http://t.co/aZ8kqg6vIW" data-pre-embedded="true">pic.twitter.com/aZ8kqg6vIW</a></div>
<div><a href="https://twitter.com/epragt/status/388688618081906689">@epragt</a>: Great read: <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a>, dead batteries included <a dir="ltr" title="http://programming.oreilly.com/2013/10/dead-batteries-included.html" href="http://t.co/nA4UzhziIK" target="_blank" rel="nofollow" data-expanded-url="http://programming.oreilly.com/2013/10/dead-batteries-included.html">http://programming.oreilly.com/2013/10/dead-batteries-included.html …</a></div>
<div><a href="https://twitter.com/keimlink/status/388217498677805056">@keimlink</a>: Searching for a Django tutorial? Try <a dir="ltr" title="http://django-marcador.keimlink.de/" href="http://t.co/27aq6ZKvOd" target="_blank" rel="nofollow" data-expanded-url="http://django-marcador.keimlink.de/">http://django-marcador.keimlink.de/ </a> - available in English, German and Spanish. <a dir="ltr" href="https://twitter.com/search?q=%23django&amp;src=hash" data-query-source="hashtag_click">#django</a> <a dir="ltr" href="https://twitter.com/search?q=%23tutorial&amp;src=hash" data-query-source="hashtag_click">#tutorial
</a><a href="https://twitter.com/pycharm" data-user-id="107032314">@pychar</a>: [blog] PyCharm 3.0.1 RC available <a dir="ltr" title="http://bit.ly/19tBV9V" href="http://t.co/EMuiC0xEyb" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/19tBV9V">http://bit.ly/19tBV9V </a></div>
<div>
<div><a href="https://twitter.com/PythonDaily" data-user-id="1539473623">@PythonDaily</a>: Oh and we've just open sourced our <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> recommender framework, and will be adding more very soon <a dir="ltr" title="https://github.com/mendeley/mrec" href="https://t.co/Wn0QovkU5f" target="_blank" rel="nofollow" data-expanded-url="https://github.com/mendeley/mrec">https://github.com/mendeley/mrec </a> <a dir="ltr" href="https://twitter.com/search?q=%23recsys2013&amp;src=hash" data-query-source="hashtag_click">#recsys2013</a></div>
</div>
<div>
<div><a href="https://twitter.com/PythonDaily" data-user-id="1539473623">‏@PythonDaily</a>: Python: Once and for all. What does the Star operator mean in <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a>? - <a dir="ltr" title="http://bit.ly/1bHCAIk" href="http://t.co/ESYUtKUefH" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1bHCAIk">http://bit.ly/1bHCAIk </a></div>
</div>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.dutchstartupjobs.com/job/backend-developer-python-ruby-on-rails/">Backend Developer Python Shuffler.fm</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="https://2013.de.pycon.org/">PyCon DE 2013</a> (14 - 19 okt)</li>
	<li><a href="http://pl.pycon.org/2013/en/">PyCon Poland 2013</a> (17 - 20 okt)</li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

Yesterday (15 October) was Ada Lovelace day: a day of Celebrating the achievements of women in science, technology, engineering and maths. You can learn more about Ada <a href="http://findingada.com/about/who-was-ada/">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date>2013-10-16 12:38:46</wp:post_date>
		<wp:post_date_gmt>2013-10-16 10:38:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-42-2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="arrow"><![CDATA[arrow]]></category>
		<category domain="post_tag" nicename="django"><![CDATA[django]]></category>
		<category domain="post_tag" nicename="funcy"><![CDATA[funcy]]></category>
		<category domain="post_tag" nicename="ggplot"><![CDATA[ggplot]]></category>
		<category domain="post_tag" nicename="pulsar"><![CDATA[pulsar]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="this-week-in-python"><![CDATA[this week in python]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[This week in Python (2013 - 42)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422852836]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:17:"75.66294468479883";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:17:"72.49957745379629";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:16:"69.8560657737776";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"65.67659567790164";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"63.65588119602114";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:17:"38.09208623639823";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-43)</title>
		<link>http://www.jworks.nl/2013/10/23/week-python-2013-43/</link>
		<pubDate>Wed, 23 Oct 2013 13:50:17 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=803</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created an maintained by <a href="https://twitter.com/Lieke2208/"><span style="color: #808080;">Lieke Boon</span></a> and<a href="https://twitter.com/epragt"><span style="color: #808080;"> Erik Pragt</span></a>, two Python enthusiasts who try to bring you the latest developments in Python land.</span>

<em> <em>“Sir Bedevere: Well, now, uh, Launcelot, Galahad, and I, wait until nightfall, and then leap out of the rabbit, taking the French by surprise - not only by surprise, but totally unarmed!"</em></em>

The forth and final alpha for Python 3.4, <a href="http://www.python.org/download/releases/3.4.0/">Python 3.4.0a4</a>, has been released last Sunday.  Python 3.4.0 alpha 4  is a preview release of the next major release of Python, Python 3.4, and is not suitable for production environments. If you're curious about some new features or changes, you can take a look <a href="http://www.python.org/download/releases/3.4.0/">here</a>.

Yesterday was the last day of <a href="http://fi.pycon.org/2013/">PyCon Finland</a>. We heard there where lots of interesting speakers. This week, from October 26 till October 29 <a href="http://www.pycon.fr/2013/">PyCon France</a> will be taking place.  We hope we'll be able to understand some of it, our French isn't that good!

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/samarudge/dnsyo">dnsyo</a> - check your DNS against over 1500 global DNS servers</li>
	<li><a href="https://github.com/yhat/ggplot">ggplot</a> - ggplot for python</li>
	<li><a href="https://github.com/quantmind/pulsar">pulsar</a> - concurrent python</li>
	<li><a href="https://github.com/ansible/ansible">ansible</a> - a radically simple configuration-management, deployment, task-execution, and multinode orchestration framework.</li>
	<li><a href="https://github.com/thekarangoel/Projects">projects</a> - a list of practical projects that anyone can solve in any programming language.</li>
	<li><a href="https://github.com/recamshak/django-debug-panel">django debug panel</a> - Django Debug Toolbar inside WebKit DevTools.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://blog.jetbrains.com/pycharm/2013/10/webinar-recording-production-python-3-web-development-with-pyramid-and-pycharm/?utm_source=twitterfeed&amp;utm_medium=twitter&amp;utm_campaign=Feed%3A+Pycharm+%28JetBrains+PyCharm+Blog%29">Webinar Recording: Production Python 3 Web Development with Pyramid and PyCharm</a></li>
	<li><a href="http://opensource.com/life/13/10/interview-jessica-mckellar">When open source invests in diversity, everyone wins</a></li>
	<li><a href="http://blog.yhathq.com/posts/ggplot-for-python.html">ggplot for Python</a></li>
	<li><a href="http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/">Using python and k-means to find the dominant colors in images</a></li>
	<li><a href="http://blog.startifact.com/posts/older/a-history-of-python-packaging.html">A history of Python packaging</a></li>
	<li><a href="http://docs.mongodb.org/ecosystem/tutorial/write-a-tumblelog-application-with-flask-mongoengine/">Write a Tumblelog Application with Flask and MongoEngine</a></li>
	<li><a href="http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/">Vim as Python IDE, or Python IDE as Vim</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/roguelynn/status/392195430458855424">@roguelynn</a>: My <a dir="ltr" href="https://twitter.com/pyconfinland">@pyconfinland</a> <a dir="ltr" href="https://twitter.com/search?q=%23pyconfi&amp;src=hash" data-query-source="hashtag_click">#pyconfi</a> slides &amp; notes for my keynote on Open Source, Education, and the Software Revolution <a dir="ltr" title="https://www.dropbox.com/s/ba7mh4e42txdzb6/OpenSourceEducation%20-%20PyCon%20Finland.pdf" href="https://t.co/KofmGU6xfU" target="_blank" rel="nofollow" data-expanded-url="https://www.dropbox.com/s/ba7mh4e42txdzb6/OpenSourceEducation%20-%20PyCon%20Finland.pdf">https://www.dropbox.com/s/ba7mh4e42txdzb6/OpenSourceEducation%20-%20PyCon%20Finland.pdf …</a></li>
	<li><a href="https://twitter.com/gvanrossum/status/392312640774496256">@gvanrossum</a>: Slides from my SF Meetup talk on Tulip. <a dir="ltr" title="https://www.dropbox.com/s/essjj4qmmtrhys4/SFMeetup2013.pdf" href="https://t.co/zdun1hxfTS" target="_blank" rel="nofollow" data-expanded-url="https://www.dropbox.com/s/essjj4qmmtrhys4/SFMeetup2013.pdf">https://www.dropbox.com/s/essjj4qmmtrhys4/SFMeetup2013.pdf …</a> (The deck I *means* to use. :-)</li>
	<li><a href="https://twitter.com/natpryce/status/392270932124782592">@natpryce:</a> MakeItEasy ported to Python. <a dir="ltr" title="https://github.com/dorireuv/make-it-easy" href="https://t.co/59Vq5bsn4q" target="_blank" rel="nofollow" data-expanded-url="https://github.com/dorireuv/make-it-easy">https://github.com/dorireuv/make-it-easy …</a></li>
	<li><a href="https://twitter.com/swikipedia/status/392513700696842240">@swikipedia</a>: 7 Best Python Books To Learn Programing <a dir="ltr" title="http://bit.ly/1a1HtXA" href="http://t.co/orckrz0rC6" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1a1HtXA">http://bit.ly/1a1HtXA </a></li>
	<li><a href="https://twitter.com/Dan_Aldred">@Dan_Aldred</a>: Just created a simple Python program to send an SMS from the Raspberry Pi, very easy and it will engage students. Blog post coming soon.</li>
	<li><a href="https://twitter.com/pycharm/status/392348645015949312">@pycharm</a>: We didn't even properly announce the source code availability but we've already got (and merged) 4 pull requests! Nice beginning.</li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.baanindetechniek.com/vacature_python_developer_whoopaa_106742?utm_source=Indeed&amp;utm_medium=organic&amp;utm_campaign=Indeed">Python developer at Whoopa</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://www.pycon.fr/2013/">PyCon France (26 - 29 October)</a></li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

How is still taking the <a href="https://www.coursera.org/course/interactivepython">Coursera</a> course on interactive programming in Python? Last week we had to finish a mini - project called 'rock-paper-scissors-lizzard-Spock (from the Big Bang Theory) and this week we'll be building a game called 'guess the number'.  Great!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>803</wp:post_id>
		<wp:post_date>2013-10-23 15:50:17</wp:post_date>
		<wp:post_date_gmt>2013-10-23 13:50:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-43</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="django"><![CDATA[django]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422864604]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:17:"73.12973954675176";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:17:"73.07494159864581";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"63.65588119602114";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"45.31773957467473";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:17:"40.07433175493799";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:18:"39.426689516478355";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-44)</title>
		<link>http://www.jworks.nl/2013/10/30/week-python-2013-44/</link>
		<pubDate>Wed, 30 Oct 2013 07:42:05 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=813</guid>
		<description></description>
		<content:encoded><![CDATA[This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land.

<em>"Narrator: A year passed: winter changed into spring, spring changed into summer, summer changed back into winter, and winter gave spring and summer a miss and went straight on into autumn... until one day..."</em>

Two new versions of Django have been released: Django 1.4.9 and 1.5.5, which act as minor bugfix packages. Full release notes are available: <a href="https://docs.djangoproject.com/en/1.4/releases/1.4.9/">Django 1.4.9</a> and <a href="https://docs.djangoproject.com/en/1.5/releases/1.5.5/">Django 1.5.5</a>

Talking about Django; the next Django sprint will take place in Berlin, Germany on November 23rd and 24th. The event is organized by the <a href="http://django-de.org/">German Django Association</a> together with the Django Users Berlin. Sprinting will start on Saturday, November 23rd at 10:00 CET and ends on Sunday, November 24th around 22:00 CET. You can RSVP <a href="http://www.meetup.com/django-user-group-berlin/events/146656662/">here</a>.

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/LindseyB/starwars-dot-gif">starwars-dot-gif</a> - Python script to generate gifs from star wars</li>
	<li><a href="https://github.com/samarudge/dnsyo">dnsyo</a> - check your DNS against over 1500 global DNS servers</li>
	<li><a href="https://github.com/yhat/ggplot">ggplot</a> - ggplot for python</li>
	<li><a href="https://github.com/quantmind/pulsar">pulsar</a> - concurrent python</li>
	<li><a href="https://github.com/ansible/ansible">ansible</a> - a radically simple configuration-management, deployment, task-execution, and multinode orchestration framework.</li>
	<li><a href="https://github.com/thekarangoel/Projects">projects</a> - a list of practical projects that anyone can solve in any programming language.</li>
	<li><a href="https://github.com/recamshak/django-debug-panel">django debug panel</a> - Django Debug Toolbar inside WebKit DevTools.</li>
	<li><a href="https://github.com/styxit/HTPC-Manager">HTPC-Manager</a> - A fully responsive interface to manage all your favorite software on your Htpc.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://continuum.io/blog/anaconda-python-3">Python 3 support in Anaconda</a></li>
	<li><a href="http://channel9.msdn.com/coding4fun/blog/Python-Tools-for-Visual-Studio-v20">Python Tools for Visual Studio v2.0</a></li>
	<li><a href="http://blog.kristian.io/django/2013/10/23/setting-up-os-x-mavericks-for-python-development.html">Installing and setting up OS X Mavericks for python development (WIP)</a></li>
	<li><a href="http://www.fastcolabs.com/3015524/what-every-coder-community-can-learn-from-python">What Every Coder Community Can Learn From Python</a></li>
	<li><a title="Off the Charts: An Interview with Kevin Novak, Data Scientist at Uber" href="http://chartio.com/blog/2013/10/kevin-novak-interview" rel="bookmark">Off the Charts: An Interview with Kevin Novak, Data Scientist at Uber</a></li>
	<li><a href="http://stefan.sofa-rockers.org/2013/10/24/simpy-302-released/">SimPy 3.0.2 released</a></li>
	<li><a title="Permalink to So You’d Like To Make a Map Using Python" href="http://sensitivecities.com/so-youd-like-to-make-a-map-using-python-EN.html" rel="bookmark">So You’d Like To Make a Map Using Python</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/dropboxapi/status/394945210964541440">@dropboxapi</a>: Announcing the Python Datastore SDK and HTTP API documentation: <a dir="ltr" title="https://www.dropbox.com/developers/blog/62/announcing-the-python-datastore-sdk-and-http-api-documentation" href="https://t.co/9hv7v4ER4F" target="_blank" rel="nofollow" data-expanded-url="https://www.dropbox.com/developers/blog/62/announcing-the-python-datastore-sdk-and-http-api-documentation">https://www.dropbox.com/developers/blog/62/announcing-the-python-datastore-sdk-and-http-api-documentation …</a> <a dir="ltr" href="https://twitter.com/search?q=%23dropbox&amp;src=hash" data-query-source="hashtag_click">#dropbox</a> <a dir="ltr" href="https://twitter.com/search?q=%23datastores&amp;src=hash" data-query-source="hashtag_click">#datastores</a></li>
	<li><a href="https://twitter.com/planetpython/status/394084567620911104">@planetpython</a>: Python 4 Kids: A Letter from Guido (creator of Python) to you <a dir="ltr" title="http://bit.ly/1datWiK" href="http://t.co/YLqpmSLgpG" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1datWiK">http://bit.ly/1datWiK </a></li>
	<li><a href="https://twitter.com/myusuf3/status/393071972676292608">@myusuf3</a>: Good Clean Python Install on Mavericks OSX 10.9 - <a dir="ltr" title="http://tmblr.co/ZmJb9yyR45rK" href="http://t.co/wRfHqGnLys" target="_blank" rel="nofollow" data-expanded-url="http://tmblr.co/ZmJb9yyR45rK">http://tmblr.co/ZmJb9yyR45rK </a></li>
	<li><a href="https://twitter.com/university/status/395228523473801216">@university</a>: Here we go Pythonistsas: <a dir="ltr" href="https://twitter.com/gvanrossum">@gvanrossum</a> on getting rid of the asyncore module &amp; adding async I/O to the standard library <a dir="ltr" title="http://youtu.be/1coLC-MUCJc" href="http://t.co/BrTtf0aDlt" target="_blank" rel="nofollow" data-expanded-url="http://youtu.be/1coLC-MUCJc">http://youtu.be/1coLC-MUCJc </a></li>
	<li><a href="https://twitter.com/europython/status/393434053040300032">@europython</a>: We are proud to announce you the EuroPython 2014 from 21-27th July in Berlin at the Berlin Congress Center bcc: <a dir="ltr" title="http://www.bcc-berlin.de/en/" href="http://t.co/QvYjGGRZuv" target="_blank" rel="nofollow" data-expanded-url="http://www.bcc-berlin.de/en/">http://www.bcc-berlin.de/en/ </a></li>
	<li><a href="https://twitter.com/epragt/status/394120571648110592">@epragt</a>: A crappy <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a> webframework written by an even crappier developer who's only in it for the money: <a dir="ltr" title="https://github.com/zedshaw/fuqit" href="https://t.co/wLZUhKMSp7" target="_blank" rel="nofollow" data-expanded-url="https://github.com/zedshaw/fuqit">https://github.com/zedshaw/fuqit </a> (ps: me likes!)</li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.spilgames.com/jobs/python-engineer-in-hilversum/">Python engineer at Spilgames</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://uy.pycon.org/en/">PyCon Uruquay</a> (Nov 1 - 2)</li>
	<li><a href="http://pycon.org/">PyCon Iran (Nov 1)</a></li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

Python 2.6.9. final was released. The final release of <a href="http://python.org/download/releases/2.6.9/">Python 2.6.9</a> (and the final release of the 2.6 series) is now available.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date>2013-10-30 08:42:05</wp:post_date>
		<wp:post_date_gmt>2013-10-30 07:42:05</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-44</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="django"><![CDATA[django]]></category>
		<category domain="post_tag" nicename="mavericks"><![CDATA[mavericks]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="star-wars"><![CDATA[star wars]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423063497]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"73.07494159864581";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:17:"72.49957745379629";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:16:"59.4422001643393";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:18:"35.860650723256136";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:16:"32.4959283566386";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"681";s:5:"score";s:16:"32.4959283566386";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013 - 45)</title>
		<link>http://www.jworks.nl/2013/11/06/week-python-45-2013/</link>
		<pubDate>Wed, 06 Nov 2013 07:32:25 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=834</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land.</span>

<em>“I don't think there's a punch-line scheduled, is there?”</em>

Version 3.0a3 of the Natural Language Toolkit is now available for download from <a href=" http://nltk.org/nltk3-alpha/ ">here</a>

Last week <a href="http://pycon.ir/">PyCon Iran</a> took place.  Spoiler:  "It was highly anticipated and total fun". You can read a report<a href="http://thek33per.blogspot.nl/2013/11/pycon-iran-2013-as-it-happend.html?m=1"> here</a>.

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/LindseyB/starwars-dot-gif">starwars-dot-gif</a>: Python script to generate gifs from star wars</li>
	<li><a href="https://github.com/lunixbochs/actualvim">actualvim</a>: Sublime Text 3 input mode powered by Vim itself</li>
	<li><a href="https://github.com/skazhy/github-decorator">gitub-decorator</a>: A GitHub profile decorator</li>
	<li><a href="https://github.com/posativ/isso">isso</a>: A Disqus alternative</li>
	<li><a href="https://github.com/brechtm/rinohtype">rinohtype</a>: The Python document processor<a href="https://github.com/brechtm/rinohtype">
</a></li>
	<li><a href="https://github.com/tony/tmuxp">tmuxp</a>: Tmux session manager in python - json, yaml, python API</li>
	<li><a href="https://github.com/clarete/curdling">curdling</a>: Concurrent package manager for Python</li>
	<li><a href="https://github.com/mitsuhiko/flask">flask</a>: A microframework based on Werkzeug, Jinja2 and good intentions</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://www.caktusgroup.com/blog/2013/10/30/using-strace-debug-stuck-celery-tasks/">Using strace to Debug Stuck Celery Tasks</a></li>
	<li><a href="http://www.prometheusresearch.com/the-perils-of-disposable-data-management/">The Perils of Disposable Data Management</a></li>
	<li><a href="http://celestialteapot.com/exedore/?utm_content=buffer99782&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">A Mac-Native Python IDE</a></li>
	<li><a href="http://www.analyticbridge.com/profiles/blogs/machine-learning-in-python-has-never-been-easier">Machine Learning in Python has never been easier</a></li>
	<li><a href="http://pyelasticsearch.readthedocs.org/en/latest/?utm_content=buffer3bce1&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">pyelasticsearch - a clean, future-proof, high-scale API to elasticsearch</a></li>
	<li><a href="http://paddy3118.blogspot.nl/2013/11/im-gonna-get-smartphone-and-im-gonna.html">I'm gonna get a smartphone! And I'm gonna run Python on it!</a></li>
	<li><a title="Permalink to A Fresh Approach using Python: Introduction" href="http://www.carsonfarmer.com/2013/11/statistical-modeling-python-introduction/" rel="bookmark">A Fresh Approach using Python: Introduction</a></li>
	<li><a href="http://blog.yhathq.com/posts/aggregating-and-plotting-time-series-in-python.html?utm_content=buffer926e2&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Aggregating &amp; plotting time series in python</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/getpy/status/396018537783115776">@getpy</a>: Curdling - a concurrent package manager for Python: <a dir="ltr" title="http://bit.ly/1aHEoOz" href="http://t.co/RT6kfRlevn" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1aHEoOz">http://bit.ly/1aHEoOz </a></li>
	<li><a href="https://twitter.com/PythonDaily/status/396383668178288640">@PythonDaily</a>: can someone explain like i'm five why 0.1+0.1+0.1==0.3 is false ? <a dir="ltr" title="http://ift.tt/1ghfDgd" href="http://t.co/ebCoyj9Ryg" target="_blank" rel="nofollow" data-expanded-url="http://ift.tt/1ghfDgd">http://ift.tt/1ghfDgd </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click">#python</a></li>
	<li><a href="https://twitter.com/thraxil/status/396832256540426241">@thraxil</a>: Proposal: the Go equivalent of "Pythonic" should be "Gothic" <a dir="ltr" href="https://twitter.com/search?q=%23golang&amp;src=hash" data-query-source="hashtag_click">#golang</a></li>
	<li><a href="https://twitter.com/hynek/status/397288777489854464">@hynek</a>: I’ll be speaking @ the next Python Users Berlin meetup about structured logging in general &amp; structlog in particular: <a dir="ltr" title="http://www.meetup.com/Python-Users-Berlin-PUB/events/120271082/" href="http://t.co/6iOrgCP8GF" target="_blank" rel="nofollow" data-expanded-url="http://www.meetup.com/Python-Users-Berlin-PUB/events/120271082/">http://www.meetup.com/Python-Users-Berlin-PUB/events/120271082/ …</a></li>
	<li><a href="https://twitter.com/LincolnLoop/status/397405696364666880">@LincolnLoop</a>: This week's Django Round-Up features <a dir="ltr" href="https://twitter.com/xensesthegreat">@xensesthegreat</a>! We cover learning, template structure, JS, and so much more! <a dir="ltr" title="http://roundup.lincolnloop.com/#we-dont-know-all-the-things" href="http://t.co/bktoKhL4iC" target="_blank" rel="nofollow" data-expanded-url="http://roundup.lincolnloop.com/#we-dont-know-all-the-things">http://roundup.lincolnloop.com/#we-dont-know-all-the-things …</a></li>
	<li><a href="https://twitter.com/PyTennessee/status/397680996415328256">@PyTenessee</a>: As a note about diversity, if current acceptances hold, we will have 26% female speakers, teachers, and keynoters! <a href="http://twitter.com/search?q=%23python" target="_blank" rel="hashtag">#python</a> <a href="http://twitter.com/search?q=%23pytn2014" target="_blank" rel="hashtag">#pytn2014</a></li>
	<li><a href="https://twitter.com/profjsb/status/397586527850483712">@profjsb</a>: Erik Petigura found the # of earth-like exoplanets w/ <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click">#Python</a>. Proud he took Python bootcamp &amp; class! <a dir="ltr" href="https://twitter.com/UCBerkeleyNews">@UCBerkeleyNews</a> <a dir="ltr" title="http://www.nytimes.com/2013/11/05/science/cosmic-census-finds-billions-of-planets-that-could-be-like-earth.html" href="http://t.co/rk6ucKQOXL" target="_blank" rel="nofollow" data-expanded-url="http://www.nytimes.com/2013/11/05/science/cosmic-census-finds-billions-of-planets-that-could-be-like-earth.html">http://www.nytimes.com/2013/11/05/science/cosmic-census-finds-billions-of-planets-that-could-be-like-earth.html …</a></li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.baanindetechniek.com/vacature_python_developer_whoopaa_113163?utm_source=Indeed&amp;utm_medium=organic&amp;utm_campaign=Indeed">Python developer Whoopa</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://pycon.org/">London Python Code Django</a> (Nov 7)</li>
	<li><a href="http://pydata.org/nyc2013/">PyData NYC</a> (Nov 8 - 10)</li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

We also started with 'Pure Python' blogs about coding in Python. We already posted blogs about <a href="http://www.jworks.nl/2013/11/01/pure-python-multiplying-strings/">Multiplying Strings</a>, <a href="http://www.jworks.nl/2013/11/03/pure-python-pythons-ternary-operator/">Python's ternary operator</a> and <a href="http://www.jworks.nl/2013/11/05/python-goodness-the-or-keyword/http://www.jworks.nl/2013/11/05/python-goodness-the-or-keyword/">the 'or' keyword</a>. Check it out!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date>2013-11-06 08:32:25</wp:post_date>
		<wp:post_date_gmt>2013-11-06 07:32:25</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-45-2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="curdling"><![CDATA[#Curdling]]></category>
		<category domain="post_tag" nicename="python-3"><![CDATA[#Python]]></category>
		<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[blog python]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[This Week in Python (45 - 2013)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[This week in Python is created and maintained by Lieke Boon and Erik Pragt, two Python enthusiasts who try to bring you the latest developments in Python.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"865";s:5:"score";s:17:"49.63183509516007";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:17:"47.27558056749392";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:18:"40.968906960645775";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:17:"23.35805056613234";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"847";s:5:"score";s:17:"21.52546910238403";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:18:"14.303633277095583";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423142127]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013-46)</title>
		<link>http://www.jworks.nl/2013/11/13/week-python-2013-46/</link>
		<pubDate>Wed, 13 Nov 2013 16:02:59 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=847</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land.</span>

<em><a href="http://www.imdb.com/name/nm0001037/?ref_=tt_trv_qu">King Arthur</a>: On second thought, let's not go to Camelot. It is a silly place.</em>

There have been endless discussion about Python 2.x vs Python 3.x. One person likes Python 2.x better, the other Python 3.x and so on and so on.  Guido van Rossum held a presentation about "Python 2 vs. Python 3. A retrospective". You can find his slides <a href="https://www.dropbox.com/s/83ppa5iykqmr14z/Py2v3Hackers2013.pptx">here</a>. An other talk worth mentioning is from Brett Cannon: <a href="https://speakerdeck.com/brettcannon/python-3-dot-3-trust-me-its-better-than-python-2-dot-7">"Python 3.3: Trust me, It's better than Python 2.7"</a>.

Last weekend, PyData NYC2013 took place and they have a <a href="https://github.com/pydata/PyDataNYC2013/wiki">wiki </a>page with all kinds of information, notes and slides.

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/DanMcInerney/LANs.py">LANs.py:</a> Capture and inject traffic on LAN</li>
	<li><a href="https://github.com/lunixbochs/actualvim">actualvim</a>: Sublime Text 3 input mode powered by Vim itself</li>
	<li><a href="https://github.com/pudo/dataset">dataset</a>: Easy-to-use data handling for SQL data stores with support for CSV and JSON data export</li>
	<li><a href="https://github.com/liftoff/GateOne">Gate One</a>: Gate One is an HTML5-powered terminal emulator and SSH client</li>
	<li><a href="https://github.com/mjhea0/flaskr-tdd">flaskr - tdd</a>: Flaskr: Intro to Flask, Test Drive Development (TDD), and jQuery</li>
	<li><a href="https://github.com/pagekite/Mailpile">Mailpile</a>: An experimental indexing and search engine for e-mail</li>
	<li><a href="https://github.com/ecdavis/pants">pants</a>: A lightweight framework for writing asynchronous network applications in Python</li>
	<li><a href="https://github.com/django/django">Django</a>: The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/kennethreitz/requests">requests</a>: Python HTTP Requests for Humans™</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://python-history.blogspot.nl/2013/11/story-of-none-true-false.html">The story of None, True and False (and an explanation of literals, keywords and builtins thrown in)</a></li>
	<li><a href="http://docs.celeryproject.org/en/latest/whatsnew-3.1.html">What’s new in Celery 3.1 (Cipater)</a></li>
	<li><a href="http://jvns.ca/blog/2013/11/12/women-in-technology-workshop-at-pydata-nyc/">Women in Technology workshop at PyData NYC</a></li>
	<li><a href="Arrow: better dates and times for Python">Arrow: better dates and times for Python</a></li>
	<li><a href="http://blog.amir.rachum.com/blog/2013/11/10/python-tips-iterate-with-a-sentinel-value/#.UoFJvONCqag.hackernews">Python Tips: Iterate With a Sentinel Value</a></li>
	<li><a href="https://zato.io/blog/posts/soa-and-rest-reusable-restful-http-channels-in-zato-12.html">SOA and REST hand in hand - reusable RESTful HTTP channels in Zato 1.2</a></li>
	<li><a href="http://karissamck.com/blog/2013/10/30/big-data-is-big-because-it-doesnt-load-into-r/">My Data Is Big Because It Doesn't Load Into R': Why Python Is the Language of Web Science</a></li>
	<li><a href="http://blog.jetbrains.com/pycharm/2013/11/meet-the-pycharm-3-1-roadmap/?utm_source=twitterfeed&amp;utm_medium=twitter&amp;utm_campaign=Feed%3A+Pycharm+%28JetBrains+PyCharm+Blog%29">Meet the PyCharm 3.1 roadmap</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/raymondh/status/398630680956899328">@raymondh</a>: <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a> tip: the easiest way to learn <a dir="ltr" href="https://twitter.com/search?q=%23matplotlib&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>matplotlib</b></a> is to click the gallery examples to view their source code: <a dir="ltr" title="http://matplotlib.org/gallery.html" href="http://t.co/Lapp9RPJOT" target="_blank" rel="nofollow" data-expanded-url="http://matplotlib.org/gallery.html">http://matplotlib.org/gallery.html</a></li>
	<li><a href="https://twitter.com/PythonDaily/status/400356922429562880">@PythonDaily</a>: How to generate dynamic (parametrized) unit tests in <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a>? - <a dir="ltr" title="http://bit.ly/1bmYIS4" href="http://t.co/TZAxULz8ce" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1bmYIS4">http://bit.ly/1bmYIS4</a></li>
	<li><a href="https://twitter.com/neckbeardrepub/status/398476612007514112">@neckbeardrepub</a>: Interested in learning about Python Decorators? <a dir="ltr" title="https://www.neckbeardrepublic.com/tagged/decorators" href="https://t.co/GwJD0lrCzG" target="_blank" rel="nofollow" data-expanded-url="https://www.neckbeardrepublic.com/tagged/decorators">https://www.neckbeardrepublic.com/tagged/decorators …</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a></li>
	<li><a href="https://twitter.com/hpk42/status/398412449075838976">@hpk42</a>: here is a doodle for the next pytest bug day <a dir="ltr" title="http://doodle.com/dz4nk5q4arib8y97d3q7dpx3/admin?#table" href="http://t.co/5i09IzkwwF" target="_blank" rel="nofollow" data-expanded-url="http://doodle.com/dz4nk5q4arib8y97d3q7dpx3/admin?#table">http://doodle.com/dz4nk5q4arib8y97d3q7dpx3/admin?#table …</a> -- pretty sure another release follows after it.</li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.baanindetechniek.com/vacature_python_developer_whoopaa_113163?utm_source=Indeed&amp;utm_medium=organic&amp;utm_campaign=Indeed">Python developer Whoopa</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://www.jobely.com/searching.php?searchitem=python">Jobely.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://pycon.org/">London Python Code Django</a> (Nov 7)</li>
	<li><a href="http://pydata.org/nyc2013/">PyData NYC</a> (Nov 8 - 10)</li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

Just a reminder to check out our  'Pure Python' blogs about coding in Python.  You can find them <a href="http://www.jworks.nl/category/python/">here</a>.

Do you have anything you'd like us to share? Please let us know!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2013-11-13 17:02:59</wp:post_date>
		<wp:post_date_gmt>2013-11-13 16:02:59</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-46</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423721270]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"852";s:5:"score";s:18:"22.547120349861956";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:18:"22.547120349861956";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"22.547120349861956";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"834";s:5:"score";s:17:"21.52546910238403";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"719";s:5:"score";s:18:"12.708618885273152";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"611";s:5:"score";s:18:"10.778508723080277";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python: Swapping variables</title>
		<link>http://www.jworks.nl/2013/11/19/python-goodness-swapping-variables/</link>
		<pubDate>Tue, 19 Nov 2013 09:07:00 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=647</guid>
		<description></description>
		<content:encoded><![CDATA[Because of the way how Python evaluates variables, it's possible to easily swap variables without the need to introduce an intermediate third variable. Swapping variables can be done with the following Python code:

<pre class="brush: python">
x, y = 10, 20
assert x == 10
assert y == 20

y, x = x, y
assert x == 20
assert y == 10
</pre>

You can not only do this with 2 variables, but also with a multitude of variables:
<pre class="brush: python">
first = "coconut"
second = "swallow"
third = "Arthur"

first, second, third = third, first, second

assert first == "Arthur"
assert second == "coconut"
assert third == "swallow"
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>647</wp:post_id>
		<wp:post_date>2013-11-19 10:07:00</wp:post_date>
		<wp:post_date_gmt>2013-11-19 09:07:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-goodness-swapping-variables</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="swapping-variables"><![CDATA[swapping variables]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1424097608]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:18:"23.104547154556755";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"695";s:5:"score";s:18:"15.882711329268307";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"15.882711329268307";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"625";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"621";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pure Python:  Integer division</title>
		<link>http://www.jworks.nl/2013/11/21/pure-python-integer-division/</link>
		<pubDate>Thu, 21 Nov 2013 18:58:00 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=695</guid>
		<description></description>
		<content:encoded><![CDATA[It's possible to use // as a mathematical operator.

The // operator represents <em>integer division </em>(also known as float division) a division where the result is always an integer, discarding any fractional result. Integer division in Python returns the floor of the result. This is opposed to <em>true division </em>with the / operator.

An example of integer division:

10 // 3 =  3

Example true division:

10 / 3 = 3.3333333333333335

&nbsp;

Guido van Rossum wrote a nice blog about 'Why Python's Integer Division Floors' . You can read it <a href="http://python-history.blogspot.nl/2010/08/why-pythons-integer-division-floors.html">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>695</wp:post_id>
		<wp:post_date>2013-11-21 19:58:00</wp:post_date>
		<wp:post_date_gmt>2013-11-21 18:58:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pure-python-integer-division</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="integers"><![CDATA[Integers]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1424153087]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"628";s:5:"score";s:17:"35.92635837259289";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"847";s:5:"score";s:18:"22.547120349861956";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"719";s:5:"score";s:17:"16.18685035665031";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"647";s:5:"score";s:18:"15.882711329268307";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"642";s:5:"score";s:18:"15.882711329268307";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"636";s:5:"score";s:18:"15.882711329268307";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013 - 47)</title>
		<link>http://www.jworks.nl/2013/11/20/week-python-2013-47/</link>
		<pubDate>Wed, 20 Nov 2013 12:17:07 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=852</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;">This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land.</span>

<em>King Arthur: NI.</em>
<em>Sir Bedevere: NOU.
King Arthur: No, NI.
Sir Bedevere: NOU.
King Arthur: No No, NI... NI.
Sir Bedevere: No,No,No,No... NI.</em>

Let's start with some great news! Python 3.3 was released on November 17th, 2013.  This release fixes several security and a lot of overall bug fixes found in Python 3.3.2. It also This fully supports OS X 10.9 Mavericks.  Most import about the Mavericks issue: this release fixes an issue that could cause previous versions of Python to crash when typing in interactive mode on OS X 10.9. Python 3.3 includes a range of improvements of the 3.x series, as well as easier porting between 2.x and 3.x. For a full list of new and improve features take a look <a href="http://www.python.org/download/releases/3.3.3/">here</a>.

Also PyPy 2.2 was released November 14th, 2013. This release also contains several bugfixes and performance improvements. For more info check <a href="http://morepypy.blogspot.nl/2013/11/pypy-22-incrementalism.html">here</a>.

<strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/DanMcInerney/LANs.py">LANs.py:</a> Capture and inject traffic on LAN</li>
	<li><a href="https://github.com/mailgun/flanker">Flanker: </a>Flanker is an open source parsing library written in Python by the Mailgun Team</li>
	<li><a href="https://github.com/pudo/dataset">dataset</a>: Easy-to-use data handling for SQL data stores with support for CSV and JSON data export</li>
	<li><a href="https://github.com/mjhea0/flaskr-tdd">flaskr - tdd</a>: Flaskr: Intro to Flask, Test Drive Development (TDD), and jQuery</li>
	<li><a href="https://github.com/django/django">Django</a>: The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/kennethreitz/requests">requests</a>: Python HTTP Requests for Humans™</li>
	<li><a href="https://github.com/devsnd/cherrymusic">cherrymusic</a>: Stream your own music collection to all your devices</li>
	<li><a href="https://github.com/sloria/marshmallow">marshmallow</a>: A lightweight library for converting complex objects into datatypes that can be used in REST API</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://mrsharpoblunto.github.io/BobbyTables/">pytest fixtures – part 1</a></li>
	<li><a href="https://mail.python.org/pipermail/python-list/2013-November/660401.html">When to use assert</a></li>
	<li><a href="http://thetrickslab.com/2013/11/python-powerful-programming-language-web-applications.html">Why Python Is The Most Powerful Programming Language For Web Applications</a></li>
	<li><a href="http://akaptur.github.io/blog/2013/11/15/introduction-to-the-python-interpreter/?utm_content=buffer46bbc&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Introduction to the Python Interpreter, Part 1: Function Objects</a></li>
	<li><a href="http://www.talyarkoni.org/blog/2013/11/18/the-homogenization-of-scientific-computing-or-why-python-is-steadily-eating-other-languages-lunch/">The homogenization of scientific computing, or why Python is steadily eating other languages’ lunch</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/PythonDaily/status/402472493187104768">@PythonDaily</a>: <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a> tip: Implement the Flyweight Design Pattern in <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a> with the __slots__ class variable: <a dir="ltr" title="http://tech.oyster.com/save-ram-with-python-slots/" href="http://t.co/TKD3YKcV2j" target="_blank" rel="nofollow" data-expanded-url="http://tech.oyster.com/save-ram-with-python-slots/">http://tech.oyster.com/save-ram-with-python-slots/ …</a> - via <a dir="ltr" href="https://twitter.com/raymondh"><s>@</s><b>raymondh</b></a></li>
	<li><a href="https://twitter.com/helloworldshow/status/402866054973489152">@helloworldshow</a>: Educational AND entertaining! The Hello World Program <a dir="ltr" title="http://www.kickstarter.com/projects/1784712961/hello-world-an-educational-and-entertaining-puppet" href="http://t.co/gBJvMxruWE" target="_blank" rel="nofollow" data-expanded-url="http://www.kickstarter.com/projects/1784712961/hello-world-an-educational-and-entertaining-puppet">http://www.kickstarter.com/projects/1784712961/hello-world-an-educational-and-entertaining-puppet …</a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23linux&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>linux</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23html5&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>html5</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23diy&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>diy</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23stem&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>stem</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23robot&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>robot</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23puppets&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>puppets</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23webdesign&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>webdesign</b></a></li>
	<li><a href="https://twitter.com/PyLadiesAMS/status/402867772008304640">@PyLadiesAMS</a>: To every <a dir="ltr" href="https://twitter.com/search?q=%23PyLady&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>PyLady</b></a> in the Netherlands: December 10 we'll have our last meetup of the year! Go to <a dir="ltr" title="http://meetu.ps/244gjg" href="http://t.co/eQlP2Nqklo" target="_blank" rel="nofollow" data-expanded-url="http://meetu.ps/244gjg">http://meetu.ps/244gjg </a> and join us :) <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Python</b></a></li>
	<li><a href="https://twitter.com/JoyOfCoding/status/402419129078284289">@JofOfCoding</a>: Remember the call for sessions closes on the 7th of December</li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.bonque.nl/vacature/web-developer-gezocht-pythondjango-bij-1club?utm_source=Indeed&amp;utm_medium=cpc&amp;utm_campaign=Indeed_PPC">Python/Django developer @ 1% club</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://www.jobely.com/searching.php?searchitem=python">Jobely.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://pycon.org/">London Python Code Django</a> (Nov 7)</li>
	<li><a href="http://pydata.org/nyc2013/">PyData NYC</a> (Nov 8 - 10)</li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

Some very BIG news: All of the surviving members of comedy group Monty Python are to reform for a stage show, one of the Pythons, Terry Jones, has <a href="http://www.bbc.co.uk/news/entertainment-arts-24999401">confirmed</a>.

And a reminder to check out our 'Pure Python' blogs about coding in Python. You can find them <a href="http://www.jworks.nl/category/python/">here</a>.

Do you have anything you'd like us to share? Please let us know!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>852</wp:post_id>
		<wp:post_date>2013-11-20 13:17:07</wp:post_date>
		<wp:post_date_gmt>2013-11-20 12:17:07</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-47</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="python-django-flanker"><![CDATA[#Python #Django #Flanker]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1424423116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"865";s:5:"score";s:18:"26.029514153538656";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:18:"26.029514153538656";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:18:"25.163785989162314";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"847";s:5:"score";s:18:"22.547120349861956";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:17:"22.02655415311841";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:18:"20.139174741264142";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013 - 48)</title>
		<link>http://www.jworks.nl/2013/11/27/week-python-2013-48/</link>
		<pubDate>Wed, 27 Nov 2013 13:12:22 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=859</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;"> This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land. </span>

<em> Superman One: Oh look... is it a stockbroker?
Superman Two: Is it a quantity Surveyor?
Superman Three: Is it a church warden?
All Supermen: NO! It's Bicycle Repair Man! </em>

Python 3.4.0 beta 1 was released on November 24th, 2013. This is a preview release of the next major release of Python, Python 3.4, and is not suitable for production environments. Click <a href="http://python.org/download/releases/3.4.0/">here</a> to check out all the improvements and bug fixes.

Furthermore, some news about EuroPython. The EuroPython 2014 conference will take place from <strong>July 21 - 27</strong>, 2014 at the <strong>BCC Berlin</strong>, Germany.

<section id="info"></section><strong>Popular Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/django/django">Django</a>: The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/kennethreitz/requests">requests</a>: Python HTTP Requests for Humans™</li>
	<li><a href="https://github.com/ansible/ansible">ansible</a>: Ansible is a radically simple IT orchestration engine that makes your applications and systems easier to deploy.</li>
	<li><a href="https://github.com/mwaskom/seaborn">seaborn</a>: Improved matplotlib for statistical data visualization</li>
	<li><a href="https://github.com/dropbox/responses">responses</a>: A utility library for mocking out the Python Requests library.</li>
	<li><a href="https://github.com/shipyard/shipyard">shipyard</a>: Shipyard is a web UI for <a href="http://docker.io">http://docker.io</a></li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://blog.mikiobraun.de/2013/11/how-python-became-the-language-of-choice-for-data-science.html?utm_content=buffer88c3f&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">How Python became the language of choice for data science</a></li>
	<li><a href="http://continuum.io/blog/painless_streaming_plots_w_bokeh?utm_content=buffer3938e&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Painless Streaming Plots with Bokeh </a></li>
	<li><a href="http://www.raywenderlich.com/38732/multiplayer-game-programming-for-teens-with-python?utm_content=buffer7c7fe&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Multiplayer Game Programming for Teens with Python: Part 1</a></li>
</ul>
<strong>Interesting tweets</strong>
<div>
<ul>
	<li><a href="https://twitter.com/salvadelapuente/status/404166388459503616">@salvadelapuente:</a> Keynotes by <s>@</s><b>roguelynn</b> at <s>#</s><b>PyConEs</b>. Sorry for the blurred focus, she's nicer (and looks sharper) in real life. <a href="pic.twitter.com/tq9jCVpzT1">pic.twitter.com/tq9jCVpzT1</a></li>
	<li><a href="https://twitter.com/roguelynn/status/404176892150177792">@roguelynn</a>: My slides for <a dir="ltr" href="https://twitter.com/search?q=%23PyConEs&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>PyConEs</b></a> keynote on Spying with Python using Scapy: <a dir="ltr" title="http://rogue.ly/spy" href="http://t.co/obSnNRpwKf" target="_blank" rel="nofollow" data-expanded-url="http://rogue.ly/spy">http://rogue.ly/spy </a> and iPython notebook: <a dir="ltr" title="http://nbviewer.ipython.org/urls/gist.github.com/econchick/7610860/raw/bfd06d3b326ee019425f2a46e9a088d3dbba1ca6/pycones.ipynb" href="http://t.co/4PlUAKvzUa" target="_blank" rel="nofollow" data-expanded-url="http://nbviewer.ipython.org/urls/gist.github.com/econchick/7610860/raw/bfd06d3b326ee019425f2a46e9a088d3dbba1ca6/pycones.ipynb">http://nbviewer.ipython.org/urls/gist.github.com/econchick/7610860/raw/bfd06d3b326ee019425f2a46e9a088d3dbba1ca6/pycones.ipynb …\</a></li>
	<li><a href="https://twitter.com/PythonWeekly/status/405018351103381504">@PythonWeekly</a>: Raspberry Pi Robot with Camera and Sound using Python 3.2 <a dir="ltr" href="http://t.co/1BQNz4WAZ0" target="_blank" rel="nofollow" data-original-title="http://buff.ly/18hOx6n" data-expanded-url="http://buff.ly/18hOx6n">http://buff.ly/18hOx6n </a> <a dir="ltr" href="https://twitter.com/search?q=%23RaspberryPi&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>RaspberryPi</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Python</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23Robot&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Robot</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23Camera&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Camera</b></a></li>
	<li><a href="https://twitter.com/PythonDaily/status/405372501116870656">@PythonDaily</a>: quick first stab at providing some data for <a dir="ltr" href="https://twitter.com/search?q=%23rstats&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>rstats</b></a> vs <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a> growth: <a dir="ltr" href="https://t.co/u0zC6BNHzB" target="_blank" rel="nofollow" data-original-title="https://github.com/hadley/r-python" data-expanded-url="https://github.com/hadley/r-python">https://github.com/hadley/r-python </a> cc <a dir="ltr" href="https://twitter.com/sogrady"><s>@</s><b>sogrady</b></a> <a dir="ltr" href="https://twitter.com/TrevorABranch"><s>@</s><b>TrevorABranch</b></a> <a dir="ltr" href="https://twitter.com/pwang"><s>@</s><b>pwang</b></a> <a dir="ltr" href="https://twitter.com/sharon000"><s>@</s><b>sharon000</b></a></li>
	<li><a href="https://twitter.com/saghul/status/404560272100450304">@saghul</a>: Slides from my talk about asyncio at <a dir="ltr" href="https://twitter.com/PyConES"><s>@</s><b>PyConES</b></a>: <a dir="ltr" href="http://t.co/rVb0RFUO7X" target="_blank" rel="nofollow" data-original-title="http://www.slideshare.net/saghul/pep3156-async-io-in-python" data-expanded-url="http://www.slideshare.net/saghul/pep3156-async-io-in-python">http://www.slideshare.net/saghul/pep3156-async-io-in-python …</a> - Check them out before <a dir="ltr" href="https://twitter.com/igalarzab"><s>@</s><b>igalarzab</b></a>'s talk later today! <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a></li>
	<li><a href="https://twitter.com/PyLadiesAMS/status/405661385159233537">@PyLadiesAMS</a>: Last <a dir="ltr" href="https://twitter.com/search?q=%23PyLadies&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>PyLadies</b></a> <a dir="ltr" href="https://twitter.com/search?q=%23Amsterdam&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Amsterdam</b></a> meetup of 2013 on Dec 10! Important Note: ALL <a dir="ltr" href="https://twitter.com/search?q=%23pythoneers&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>pythoneers</b></a> can join us :) Looking forward! <a dir="ltr" href="http://t.co/eQlP2Nqklo" target="_blank" rel="nofollow" data-original-title="http://meetu.ps/244gjg" data-expanded-url="http://meetu.ps/244gjg">http://meetu.ps/244gjg</a></li>
</ul>
<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.linkedin.com/jobs2/view/6631043">Python developer @ Optiver</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://www.jobely.com/searching.php?searchitem=python">Jobely.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>
<ul>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

We also ran into a blog about Python for non-programmers. It's really nice and definitely worth a look: <a href="http://forums.juniper.net/t5/Network-Automaniac/Python-for-Non-Programmers-Part-1/ba-p/216449">Python for Non-Programmers (Part 1)</a>.

And a reminder to check out our 'Pure Python' blogs about coding in Python. You can find them <a href="http://www.jworks.nl/category/python/">here</a>.

Do you have anything you'd like us to share? Please let us know!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date>2013-11-27 14:12:22</wp:post_date>
		<wp:post_date_gmt>2013-11-27 13:12:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-48</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ansible"><![CDATA[ansible]]></category>
		<category domain="post_tag" nicename="django"><![CDATA[django]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422115406]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"751";s:5:"score";s:17:"76.99444109759655";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"803";s:5:"score";s:17:"73.12973954675176";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:16:"69.8560657737776";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"813";s:5:"score";s:16:"59.4422001643393";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:16:"47.9344052139751";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"681";s:5:"score";s:17:"39.77256213003301";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>This week in Python (2013 - 49)</title>
		<link>http://www.jworks.nl/2013/12/04/week-python-2013-49/</link>
		<pubDate>Wed, 04 Dec 2013 13:41:25 +0000</pubDate>
		<dc:creator><![CDATA[lieke22]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #808080;"> This week in Python is created and maintained by <a href="https://twitter.com/Lieke2208/">Lieke Boon</a> and <a href="https://twitter.com/epragt">Erik Pragt</a>, two Python enthusiasts who try to bring you the latest developments in Python land. </span>

<em>Brian: Please, please, please listen! I've got one or two things to say.</em>

<em>The Crowd: Tell us! Tell us both of them!</em>

<em>Brian: Look, you've got it all wrong! You don't NEED to follow ME, You don't NEED to follow ANYBODY! You've got to think for your selves! You're ALL individuals! </em>

<em>The Crowd: Yes! We're all individuals!</em>

<em>Brian: You're all different!</em>

<em>The Crowd: Yes, we ARE all different!</em>

<em>Man in crowd: I'm not...</em>

<em>The Crowd: Sch!</em>

A new version of gevent was released, gevent 1.0: gevent is a <a href="http://en.wikipedia.org/wiki/Coroutine" rel="nofollow">coroutine</a>-based <a href="http://www.python.org" rel="nofollow">Python</a> networking library that uses <a href="http://codespeak.net/py/0.9.2/greenlet.html">greenlet</a> to provide a high-level synchronous API on top of the libev event loop. See <a href="http://gevent.org/whatsnew_1_0.html?utm_content=buffer2caa7&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">here</a> what's new on gevent 1.0.

There a lots of coursers online where you can learn Python. Yesterday we ran into <a href="https://developers.google.com/edu/python/">Google's Python Class</a>.  We'll try it out soon.

Thinks week <a href="http://cn.pycon.org/2013">PyCon China 2013</a> will take place on Sunday Dec 8! It's nice to see so many PyCons all over the world!

<section id="info"></section><strong>This Week's Trending Python Open Source projects</strong>
<ul>
	<li><a href="https://github.com/davidcrawford/chronic">chronic</a>: Half profiler, half timer, 100% fun.</li>
	<li><a href="https://github.com/pythonium/pythonium">pythonium</a>: Best Python 3 to Javascript translator written in Python that produce fast portable javascript code</li>
	<li><a href="https://github.com/captn3m0/hackertray">hackertray</a>: Hacker Tray is a minimalist Hacker News app for Linux</li>
	<li><a href="https://github.com/hyperopt/hyperopt">hyperopt</a>: Distributed Asynchronous Hyperparameter Optimization in Python</li>
	<li><a href="https://github.com/django/django">Django</a>: The Web framework for perfectionists with deadlines</li>
	<li><a href="https://github.com/kennethreitz/requests">requests</a>: Python HTTP Requests for Humans™</li>
	<li><a href="https://github.com/dropbox/responses">responses</a>: A utility library for mocking out the Python Requests library.</li>
</ul>
<strong>Blogs </strong>
<ul>
	<li><a href="http://pypix.com/python/building-flask-blog-part-1/">Building a Flask Blog Part 1</a> (2 and 3 are also available)</li>
	<li><a href="http://brunorocha.org/python/flask/flask-google-maps-plus-how-to-write-a-flask-extension.html?utm_content=bufferbb61e&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Flask Google Maps (plus: how to write a Flask extension)</a></li>
	<li><a href="http://www.informit.com/articles/article.aspx?p=2161676">An Introduction to Python Web Development Using the Pyramid Framework Part 1</a></li>
	<li><a href="http://www.davidhayden.me/blog/practical-programming-using-python-3-book-review">Practical Programming Using Python 3 Book Review</a></li>
</ul>
<strong>Interesting tweets</strong>
<ul>
	<li><a href="https://twitter.com/akaptur/status/407911820976857088">@akaptur</a>: Part 4 in my series on the python interpreter: it's dynamic! <a dir="ltr" title="http://akaptur.github.io/blog/2013/12/03/introduction-to-the-python-interpreter-4/" href="http://t.co/2Q1HqVl87v" target="_blank" rel="nofollow" data-expanded-url="http://akaptur.github.io/blog/2013/12/03/introduction-to-the-python-interpreter-4/">http://akaptur.github.io/blog/2013/12/03/introduction-to-the-python-interpreter-4/ …</a></li>
	<li><a href="https://twitter.com/jezdez/status/407946129717071872">@jezdez</a>: Just released envdir 0.6 with docs, rewritten tests, a standalone script (e.g. Windows) and a new Python API <a dir="ltr" title="http://jzdz.me/5CA4P" href="http://t.co/04jhp2Y5Aq" target="_blank" rel="nofollow" data-expanded-url="http://jzdz.me/5CA4P">http://jzdz.me/5CA4P </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a></li>
	<li><a href="https://twitter.com/pycoders/status/407623730274512896">@pycoders</a>: Hello Web App - Intro to web app dev using <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Python</b></a> and <a dir="ltr" href="https://twitter.com/search?q=%23Django&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Django</b></a>. Tailored for non-programmers, by a designer. <a dir="ltr" title="http://bit.ly/1ePF9Gu" href="http://t.co/G5TpLJwZQ4" target="_blank" rel="nofollow" data-expanded-url="http://bit.ly/1ePF9Gu">http://bit.ly/1ePF9Gu</a></li>
	<li><a href="https://twitter.com/Lieke2208/status/405794669012844544">@lieke2208</a>: Winning at Candy Crush with <a dir="ltr" href="https://twitter.com/search?q=%23Python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Python</b></a> <a dir="ltr" title="http://www.stavros.io/posts/winning-candy-crush/" href="http://t.co/jUPNJ1ZzUQ" target="_blank" rel="nofollow" data-expanded-url="http://www.stavros.io/posts/winning-candy-crush/">http://www.stavros.io/posts/winning-candy-crush/ …</a> Nice :-)</li>
	<li><a href="https://twitter.com/InformIT/status/407541276104740864">@informIT</a>: Want to Teach a <a dir="ltr" href="https://twitter.com/search?q=%23Programming&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>Programming</b></a> Language? <a dir="ltr" href="https://twitter.com/kcunning"><s>@</s><b>kcunning</b></a> says "First, Learn Empathy." <a dir="ltr" title="http://ow.ly/rmoiH" href="http://t.co/T887eLO8yK" target="_blank" rel="nofollow" data-expanded-url="http://ow.ly/rmoiH">http://ow.ly/rmoiH</a></li>
	<li><a href="https://twitter.com/PyTennessee/status/408075189592006656">@PyTennessee</a>: Thanks to some great sponsorship help we have 9 more open spots for Young Coders! Learn More and Register at <a dir="ltr" title="http://www.pytennessee.org/young-coders/" href="http://t.co/kpIJS15iuK" target="_blank" rel="nofollow" data-expanded-url="http://www.pytennessee.org/young-coders/">http://www.pytennessee.org/young-coders/ </a> <a dir="ltr" href="https://twitter.com/search?q=%23python&amp;src=hash" data-query-source="hashtag_click"><s>#</s><b>python</b></a></li>
</ul>
<div>

<strong> Jobs - Spotlight</strong>
<ul>
	<li><a href="http://www.dutchstartupjobs.com/job/python-front-end-web-developer/?utm_content=bufferdacb8&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">Python Front - End Web Developer @ Electric Ant Lab</a></li>
</ul>
Other Python Jobs:
<ul>
	<li><a href="http://seeker.dice.com/jobsearch/servlet/JobSearch?op=300&amp;FREE_TEXT=python&amp;FRMT=0" target="_blank">Dice</a></li>
	<li><a href="http://www.careerbuilder.com/Jobseeker/Jobs/JobResults.aspx?_ctl0%3A_ctl2%3AucQuickBar%3As_rawwords=python" target="_blank">Careerbuilder</a></li>
	<li><a href="http://jobsearch.monster.com/PowerSearch.aspx?q=python" target="_blank">Monster</a></li>
	<li><a href="http://www.pythonjobs.com/">PythonJobs.com</a></li>
	<li><a href="http://www.jobely.com/searching.php?searchitem=python">Jobely.com</a></li>
	<li><a href="http://jobs.electronicsweekly.com/job/1401374438/software-test-contractor-linux-python-html-xml-cambridge/">Software test contractor with Linux and Python Skills</a></li>
</ul>
Also checkout the jobs listed on the <a href="http://www.python.org/community/jobs/">Python community website</a>.

<strong>User Groups and Conferences</strong>

&nbsp;
<ul>
	<li><a href="http://cn.pycon.org/2013">Pycon China 2013 (Dec 8)</a></li>
	<li><a href="http://www.meetup.com/PyLadiesAMS/events/150281552/">PyLadies Amsterdam meetup (Dec 10)</a></li>
	<li><a href="http://python.meetup.com/">Python Meetup Groups</a></li>
	<li><a href="http://www.pycon.org/">Python Events and User Group Calendar</a></li>
</ul>
<strong>Last but not least</strong>

Cause it's almost Christmas time, <a href="http://audreyr.com/2013/12/02/bad-python-jokes-for-the-holidays/">here</a> are some bad Python jokes from Audrey Roy!

And a reminder to check out our 'Pure Python' blogs about coding in Python. You can find them <a href="http://www.jworks.nl/category/python/">here</a>.

Do you have anything you'd like us to share? Please let us know!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date>2013-12-04 14:41:25</wp:post_date>
		<wp:post_date_gmt>2013-12-04 13:41:25</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>week-python-2013-49</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flask"><![CDATA[flask]]></category>
		<category domain="post_tag" nicename="gevent"><![CDATA[gevent]]></category>
		<category domain="post_tag" nicename="hackertray"><![CDATA[hackertray]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422788203]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"834";s:5:"score";s:17:"49.63183509516007";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"717";s:5:"score";s:17:"44.97186696106602";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"779";s:5:"score";s:18:"32.385621814450765";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"667";s:5:"score";s:18:"26.240235184800255";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"859";s:5:"score";s:18:"26.029514153538656";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"852";s:5:"score";s:18:"26.029514153538656";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Enable Jacoco with Jetty</title>
		<link>http://www.jworks.nl/2013/12/10/enable-jacoco-with-jetty/</link>
		<pubDate>Tue, 10 Dec 2013 08:47:33 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=872</guid>
		<description></description>
		<content:encoded><![CDATA[To enable code coverage in your functional regression test, for example when using Selenium, it's often handy to measure the code coverage. In our current project we're using <a href="http://www.eclemma.org/jacoco/">Jacoco</a> for that, since it's currently the only open source solution which is still maintained and suitable for Java 7.

To enable Jacoco in Jetty, we need to do the following steps:
<ol>
	<li>Download the Jacoco agent</li>
	<li>Enable the Java agent in Jetty</li>
	<li>Enable the reporting in Maven</li>
</ol>

<b>Download the Jacoco agent.</b>

The latest version of the Jacoco agent can be downloaded <a href="http://mvnrepository.com/artifact/org.jacoco/org.jacoco.agent/0.6.3.201306030806">here</a>. In the downloaded jar is another jar, the jacocoagent.jar, which is needed to do online instrumenting of classes.

<b>Enable the Java agent in Jetty.</b>
Once the Jacoco Agent has been downloaded, Jetty needs to be made aware of this. To do this, Jetty needs to be passed the <a href="http://www.eclemma.org/jacoco/trunk/doc/agent.html">-javaagent parameter</a>. The easiest way to do this is by setting the MAVEN_OPTS environment variable in the following way:

<code>-javaagent:lib/jacocoagent-0.6.3.jar</code>

Alternatively, you can also pass parameters to the -javaagent setting, like this:

<code>-javaagent:lib/jacocoagent-0.6.3.jar=destfile=target/jacoco.exec,append=false,includes=nl.*"</code>

<b>Enable the reporting in Maven</b>

To enable the reporting in Maven the Jacoco Maven plugin is needed. This can be configured in the following way:
<pre class="brush: xml">  
<plugin>
  <groupId>org.jacoco</groupId>
  <artifactId>jacoco-maven-plugin</artifactId>
  <version>0.6.3.201306030806</version>
</plugin>
</pre>

Once this has been configured, the report can be created using the jacoco:report task. This will create a jacoco directory in the reporting directory, which is by default the target/site directory. When everything has been set up correctly, a report like the following should be available:

<img src="http://www.jworks.nl/wp-content/uploads/2013/12/jacocoreport.png" alt="jacocoreport" width="430" height="139" class="aligncenter size-full wp-image-873" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date>2013-12-10 09:47:33</wp:post_date>
		<wp:post_date_gmt>2013-12-10 08:47:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enable-jacoco-with-jetty</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="code-coverage"><![CDATA[code coverage]]></category>
		<category domain="post_tag" nicename="jacoco"><![CDATA[jacoco]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="selenium"><![CDATA[selenium]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[872]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"583";s:5:"score";s:17:"56.59441139347828";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:16:"46.8668581974148";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"500";s:5:"score";s:18:"44.147605969393396";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"904";s:5:"score";s:17:"19.15899066665209";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"599";s:5:"score";s:17:"17.62031802879008";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:17:"16.85363164677532";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423330430]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[enable-jetty-with-jacoco]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>A quick introduction to AssertJ</title>
		<link>http://www.jworks.nl/2014/02/26/quick-introduction-assertj/</link>
		<pubDate>Wed, 26 Feb 2014 15:24:12 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=884</guid>
		<description></description>
		<content:encoded><![CDATA[As a developer, you might be familiar with Hamcrest, a declarative rule based object matcher framework. In other words, a testing library which will make your test easy to read. While Hamcrest is a great library, there are some limitations to it's expressiveness, so looked for a better alternative. Meet AssertJ.

AssertJ is a library which provides a rich set of asserts and a fluent interface to help developers write maintainable tests. Besides that, most of the AssertJ error messages in the case of failing tests are very expressive and helpful, and provide great feedback to the developers in finding out why a test failure occurred.

To setup AssertJ in your project, the only library you'll need is the <code>assertj-core</code> library. I've set up a <a href="https://github.com/bodiam/assertj-blog">sample project</a> on Github to help you get started.

To make sure you're importing the right assertThat method, we'll be excluding the JUnit method:

<img class="aligncenter size-full wp-image-889" alt="exclude-auto-import" src="http://www.jworks.nl/wp-content/uploads/2014/02/exclude-auto-import.png" width="600" />

To make our lives even easier, we'll setup an IntelliJ Live Template, which will map the 'at' abbreviation to expand to assertThat's assertion method. This way, we only need to type 'at', press , and the right assertThat method will be used, including imports.

<img class="aligncenter size-full wp-image-886" alt="live-template" src="http://www.jworks.nl/wp-content/uploads/2014/02/live-template.png" width="500" />

In this example we'll be testing a small movie catalogue, in which most logic is located in finding the movies, and, in our case, only thrillers:
<pre class="&quot;brush:java">public List findThrillers() {
    return from(movies).filter(thrillerFilter()).toList();
}</pre>
The code above uses the Guava FluentIterator to filter movies based on certain criteria. In this case a filter will be applied to find only Thrillers. To test this, we write the following AssertJ test:
<pre class="&quot;brush:java">List thrillers = movieDao.findThrillers();

assertThat(thrillers).extracting("title").containsOnly(
        "The Dark Knight", "Pulp Fiction", "Se7en", "Gunday"
);</pre>
What happens here, is that for each element in the list of Thrillers, the 'title' property is extracted, and an exact match is done on the result of the thrillers result, ie. it should have exactly those 4 elements.

One of the great features of AssertJ is that assertThat is a generic method. This means that your IDE will help you a great deal to know which methods are available to help in testing, since it depends on the type of the object passed to assertThat. To illustrate this, see the following example:

<img class="aligncenter size-full wp-image-887" alt="code-completion-list" src="http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-list.png" width="600" />

As you can see here, only the methods which can be applied to a List are shown. When we replace the List with a String

<img class="aligncenter size-full wp-image-888" alt="code-completion-error" src="http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-error.png" width="600" />

IntelliJ immediately responds with a compilation error, and when using code completion again, you'll get the list of methods which are compatible with a String type:

<img class="aligncenter size-full wp-image-885" alt="code-completion-string" src="http://www.jworks.nl/wp-content/uploads/2014/02/code-completion-string.png" width="600" />

Besides providing a hints to developers and giving early feedback, AssertJ also enables you to have very readable tests. An example can be seen below:
<pre class="&quot;brush:java">assertThat(thrillers)
        .extracting("title", "year")
        .contains(
                tuple("The Dark Knight", 2008),
                tuple("Pulp Fiction", 1994),
        );</pre>
Here, we extract multiple attributes of a Movie, and we'll compare them with our actual result. Should a comparison fail, an error is shown:
<pre>java.lang.AssertionError:
Expecting:
&lt;[('The Dark Knight', 2008), ('Pulp Fiction', 1994), ('Se7en', 1995), ('Gunday', 2014)]&gt;
to contain:
&lt;[('The Dark Knight', 2008), ('Pulp Fiction', 1994), ('Se8en', 1995)]&gt;
but could not find:
&lt;[('Se8en', 1995)]&gt;</pre>
In this, we expected the movie 'Se8en' to be there, but we made an obvious typo, which could be corrected quickly.

I hope this short introduction gave you a impression of what is possible with AssertJ. More examples can be found in the same project or on the AssertJ website. AssertJ provides many more features, like powerful test DSL's, auto generated asserts for your own types, support for Joda, Guava and Neo4j, and much more. 

To find out more, checkout <a href="http://www.assertj.org">AssertJ</a> and start improving your test code!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>884</wp:post_id>
		<wp:post_date>2014-02-26 16:24:12</wp:post_date>
		<wp:post_date_gmt>2014-02-26 15:24:12</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quick-introduction-assertj</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assertj"><![CDATA[assertj]]></category>
		<category domain="post_tag" nicename="hamcrest"><![CDATA[hamcrest]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"500";s:5:"score";s:17:"49.98314743356195";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"872";s:5:"score";s:16:"46.8668581974148";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"538";s:5:"score";s:17:"44.53265213620658";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"508";s:5:"score";s:17:"43.56433738310919";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"489";s:5:"score";s:17:"42.28062961071035";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"522";s:5:"score";s:18:"39.561377382688946";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1422112248]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>IntelliJ Live Templates with Google Guava</title>
		<link>http://www.jworks.nl/2014/03/15/intellij-live-templates-google-guava/</link>
		<pubDate>Sat, 15 Mar 2014 22:06:30 +0000</pubDate>
		<dc:creator><![CDATA[erikp]]></dc:creator>
		<guid isPermaLink="false">http://www.jworks.nl/?p=904</guid>
		<description></description>
		<content:encoded><![CDATA[In this screencast, I will explain how to setup IntelliJ live templates with Google Guava, and how to add a bit a Functional Programming to your Java code when using Java 7 or below. The templates used in the video, including the configuration for them, can be found below.

<iframe width="480" height="360" src="//www.youtube.com/embed/z3mM5-t2w68" frameborder="0" allowfullscreen></iframe>

<b>Filter</b>
<pre class="brush:java">
com.google.common.collect.FluentIterable<$ELEMENT_TYPE$> $VAR2$ = FluentIterable.from($ITERABLE_TYPE$).filter(new com.google.common.base.Predicate<$ELEMENT_TYPE$>() {
    public boolean apply($ELEMENT_TYPE$ $VAR$) {
        return $END$true;
    }
});
</pre>

<a href="http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.58.18.png">
<img src="http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.58.18-600x228.png" alt="Filter settings" width="450" class="aligncenter size-medium wp-image-908" />
</a>

<b>Transform</b>
<pre class="brush:java">
com.google.common.collect.FluentIterable<$TO_TYPE$> $VAR2$ = FluentIterable.from($ITERABLE_TYPE$).transform(new com.google.common.base.Function<$ELEMENT_TYPE$, $TO_TYPE$>() {
    public $TO_TYPE$ apply($ELEMENT_TYPE$ $VAR$) {
        return new $TO_TYPE$($END$);
    }
});
</pre>

<a href="http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.57.56.png">
<img src="http://www.jworks.nl/wp-content/uploads/2014/03/Screen-Shot-2014-03-15-at-22.57.56-600x169.png" alt="Transform" width="450" class="aligncenter size-medium wp-image-907" />
</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>904</wp:post_id>
		<wp:post_date>2014-03-15 23:06:30</wp:post_date>
		<wp:post_date_gmt>2014-03-15 22:06:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>intellij-live-templates-google-guava</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="intellij"><![CDATA[intellij]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="screencast"><![CDATA[screencast]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_3</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;O:8:"stdClass":2:{s:7:"post_id";s:3:"500";s:5:"score";s:18:"53.517232318332475";}i:1;O:8:"stdClass":2:{s:7:"post_id";s:3:"652";s:5:"score";s:17:"36.45434109423719";}i:2;O:8:"stdClass":2:{s:7:"post_id";s:3:"290";s:5:"score";s:17:"29.17770732084279";}i:3;O:8:"stdClass":2:{s:7:"post_id";s:3:"884";s:5:"score";s:18:"27.402477739256305";}i:4;O:8:"stdClass":2:{s:7:"post_id";s:3:"437";s:5:"score";s:18:"20.701208110711406";}i:5;O:8:"stdClass":2:{s:7:"post_id";s:3:"872";s:5:"score";s:17:"19.15899066665209";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_rp_related_posts_query_result_cache_expiration</wp:meta_key>
			<wp:meta_value><![CDATA[1423601599]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
